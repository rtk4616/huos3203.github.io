{"title":"macOS之PDFKit基础","slug":"macOS/macOS之PDFKit基础","date":"2017-02-14T14:29:18.000Z","updated":"2018-01-08T14:10:41.000Z","comments":true,"path":"api/articles/macOS/macOS之PDFKit基础.json","excerpt":null,"covers":["http://p27uwfdhv.bkt.clouddn.com/static/images/view_vspage_space.gif?imageMogr2/2/w/800","http://p27uwfdhv.bkt.clouddn.com/static/images/pdfkit_inheritancehierarchy.gif?imageMogr2/2/w/800","http://p27uwfdhv.bkt.clouddn.com/static/images/pdfkit_uses_hierarchy.gif?imageMogr2/2/w/800","http://p27uwfdhv.bkt.clouddn.com/static/images/pdfkit_inheritancehierarchy.gif?imageMogr2/2/w/800","http://p27uwfdhv.bkt.clouddn.com/static/images/annotations.gif?imageMogr2/2/w/800"],"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><script src=\"/assets/js/APlayer.min.js\"> </script><p>一个PDF的基本构建块是Documents本身。Documents通常作为文件存储在磁盘上。<br>作为文件版本，可以支持元数据标记如作者，创建日期，等等。<br>一个文件可以加密，需要密码才能查看它。两级加密存在：</p>\n<ul>\n<li>用户级加密：如果用户成功地获得用户级权限，他或她可以查看文档，但可以限制打印或复制文档。</li>\n<li>所有者级别加密：获得所有者级别权限的用户可以查看文档并具有完全使用权限。<br>许多加密的PDF文件有一个“dummy”的用户密码为<code>空字符串</code>。大多数PDF文档解析器（包括PDF套件）自动尝试空字符串密码加密后的文件，如果成功，只显示文档。因此，在技术上加密的文档不一定提示用户口令。</li>\n</ul>\n<h2 id=\"PDF页面\"><a href=\"#PDF页面\" class=\"headerlink\" title=\"PDF页面\"></a>PDF页面</h2><p>一个PDF文档由若干页面组成。这个页面看起来就像一本物理书页面显示在屏幕上。同时PDF页面可以包含<code>超链接</code>和<code>注释</code>。页面可以支持<code>裁剪</code>，还有其他使用功能：例如隐藏多余的部分（如注册标记）。</p>\n<h3 id=\"view-VS-page空间坐标\"><a href=\"#view-VS-page空间坐标\" class=\"headerlink\" title=\"view VS page空间坐标\"></a>view VS page空间坐标</h3><p>页面上的大多数对象都是在<code>page</code>空间中指定的，而不是在<code>view</code>空间中。<br>也就是说，坐标系统是在点（每英寸72点），<code>坐标原点</code>在page左侧底部，而不是<code>view</code>。<code>page</code>空间不关心缩放，显示模式等等。一个有<code>bounds</code>的item，比如说32points，保留这些界限，无论显示大小。<br>图view和page坐标系比较<br><img title=\"view和page坐标系比较\" src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/view_vspage_space.gif?imageMogr2/2/w/800\"><br><code>PDFView class</code>包含几个转换方法，将坐标系统从<code>view space</code>的<code>page space</code>，反之亦然。</p>\n<h2 id=\"PDF-Kit-Classes\"><a href=\"#PDF-Kit-Classes\" class=\"headerlink\" title=\"PDF Kit Classes\"></a>PDF Kit Classes</h2><p><code>PDF Kit</code>套件提供了几个不同功能的<code>类</code>。<br><code>PDFView</code>和<code>PDFSelection</code>除外，这些<code>类</code>大致对应着各个<code>对象</code>在PDF格式的规范需求。<br><img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/pdfkit_inheritancehierarchy.gif?imageMogr2/2/w/800\"></p>\n<h3 id=\"PDFView-Class\"><a href=\"#PDFView-Class\" class=\"headerlink\" title=\"PDFView Class\"></a>PDFView Class</h3><p><code>PDFView类</code>，就好比Web工具包的<code>WebView类</code>，源于<code>Application Kit</code>中的<code>NSView类</code>。在项目开发中，你可以使用<code>Interface Builder</code>轻松拖动一个<code>PDFView对象</code>放在一个window中。<del>从/Developer/Extras/Palettes/PDFKit.palette得到调色板。</del><br><code>PDFView</code>可能是<code>PDF Kit</code>中唯一个需要你自定义的的类。在APP中显示PDF数据，允许用户选择文档内容和导航浏览PDF文档，设置缩放级别，复制文本内容到剪贴板。用户可以拖放PDF文档到<code>PDFView</code>。<br><code>PDFView</code>能通过调用其他<code>PDF实用类</code>来实现其大部分功能。如果要添加特殊功能，则需要用户自定义<code>实用类</code>的子类来扩展其特殊功能。<br>Utility classes as used by PDFView<br><img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/pdfkit_uses_hierarchy.gif?imageMogr2/2/w/800\"></p>\n<h3 id=\"PDF-Kit-Utility-Classes\"><a href=\"#PDF-Kit-Utility-Classes\" class=\"headerlink\" title=\"PDF Kit Utility Classes\"></a>PDF Kit Utility Classes</h3><p>PDF套件工具类提供一种混合的<code>Foundation-like</code>和<code>Application Kit-like</code>的行为。他们有类似的<code>NSString类</code>和<code>NSString Additions</code>方法。这些类都系橙自<code>NSObject</code><br><img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/pdfkit_inheritancehierarchy.gif?imageMogr2/2/w/800\"></p>\n<h4 id=\"PDF-Document\"><a href=\"#PDF-Document\" class=\"headerlink\" title=\"PDF Document\"></a>PDF Document</h4><p><code>PDFDocument</code>是<code>PDF kit工具类</code>中重要类，代表着PDF data或PDF文件。其他实用工具类一般都在<code>PDFDocument</code>方法中的实例化。是<code>PDFPage</code>和<code>PDFOutline</code>；或相关支持操作：<code>PDFSelection</code>和<code>PDFDestination</code>。<br>你<code>PDFDocument对象</code>初始化，需要一个<code>PDF数据</code>或一个指向PDF文件的<code>URL</code>。实例化之后就可以访问<code>页数</code>，<code>添加</code>或<code>删除</code>页面，对所选内容为<code>NSString对象</code>进行<code>查找</code>或<code>分析</code>。</p>\n<h4 id=\"PDFPage\"><a href=\"#PDFPage\" class=\"headerlink\" title=\"PDFPage\"></a>PDFPage</h4><p><code>PDFPage</code>代表一个PDF文档的页面。你的应用程序获取一个<code>PDFPage</code>对象必须通过从<code>PDFDocument</code>对象来实例化。<code>PDFPage</code>对象是用户所看到的屏幕，和一个<code>view</code>可以同时显示多个<code>page</code>。你可以使用<code>PDFPage</code>把PDF文档内容渲染到屏幕上，添加<code>注释</code>，<code>计数字符串</code>，定义<code>选择</code>，获取一个<code>page</code>中的文本内容作为<code>NSString对象</code>或<code>NSAttributedString对象</code>。</p>\n<h4 id=\"PDFOutline\"><a href=\"#PDFOutline\" class=\"headerlink\" title=\"PDFOutline\"></a>PDFOutline</h4><p>除了显示实际的文件内容，<code>PDF Kit</code>也能呈现<code>PDFOutline</code>信息，前提是PDF文档中存在目录结构。在目录结构中，一个<code>PDFOutline对象</code>代表一个<code>父目录</code>或<code>子目录</code>。<br>目录是由一个层次的<code>PDFOutline对象</code>组层。顶层是<code>根目录对象</code>，它仅作为其他目录对象的容器。用户的<code>根目录</code>是不可见的。</p>\n<h4 id=\"PDFSelection\"><a href=\"#PDFSelection\" class=\"headerlink\" title=\"PDFSelection\"></a>PDFSelection</h4><p>一个<code>PDFSelection</code>对象包含一个跨PDF文档中文本。你不要直接创建<code>PDFSelection</code>。<code>PDFSelection</code>对象是作为返回值来实例化的。例如：通过调用<code>PDFPage</code>或<code>PDFDocument</code>对象中的selection方法，并从成功搜索的返回值来实例化<code>PDFSelection</code>对象。<br>在同时显示多个<code>PDFPage</code>的<code>PDFView</code>中，<code>PDFSelection</code>可以是不连续的，或两者兼具的。例如，可以选择在一个单柱连续两列页面的文本。可以在任何方向从一个选择区, 合并选择区, 或扩展选择区中得到文本和网页覆盖。</p>\n<h4 id=\"PDFAnnotation\"><a href=\"#PDFAnnotation\" class=\"headerlink\" title=\"PDFAnnotation\"></a>PDFAnnotation</h4><p>一个<code>PDFAnnotation</code>对象可以表示多种内容以外，在一个PDF文件的主要文本内容：链接、表单元素，突出圈子，等等。每个注释与页面上的特定位置相关，并且可以与用户提供交互性。<br><code>PDFAnnotation</code>是如图所示的具体类的抽象类。各种具体类代表<code>PDF Kit</code>支持的注释类型。<br><img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/annotations.gif?imageMogr2/2/w/800\"></p>\n<h4 id=\"PDFBorder\"><a href=\"#PDFBorder\" class=\"headerlink\" title=\"PDFBorder\"></a>PDFBorder</h4><p><code>PDFBorder</code>对象封装的拉伸<code>PDFAnnotation</code>对象边框的行为。可以定义一个PDF的bord线的风格属性（例如，固体，破灭，或斜面），bord线的宽度，和圆角半径。</p>\n<p>过期:<del>从/Developer/Extras/Palettes/PDFKit.palette得到调色板。</del><br>Here’s what Apple says about it:<br><blockquote><p>“To add the PDFKit palette in Interface Builder, select the Palettes tab in the Preferences panel. Click the Add<br>button, navigate to the /Developer/Extras/Palettes folder, and select the PDFKit palette. Next, select the Customize Toolbar menu item in the Tools/Palettes menu and drag the PDFKit palette to the toolbar to make it visible.”</p>\n<footer><strong>老文档</strong><cite><a href=\"http://developer.apple.com/library/mac/#documentation/GraphicsImaging/Conceptual/PDFKitGuide/PDFKit_Prog_Tasks/PDFKit_Prog_Tasks.html\" target=\"_blank\" rel=\"noopener\">PDFKit_Prog_Tasks</a></cite></footer></blockquote><br>So:<br>there’s no Palettes tab anywhere in the Preferences panel and the Xcode Help return a blank when searching for it.<br>There’s no PDFKit.palette file anywhere on my HD (says Spotlight).<br>I guess these instructions are for an older version of XCode but it’s all Apple seemed to have on it…</p>\n","categories":[{"name":"macOS","path":"api/categories/macOS.json"},{"name":"PDF","path":"api/categories/PDF.json"}],"tags":[{"name":"工具","path":"api/tags/工具.json"},{"name":"UI","path":"api/tags/UI.json"},{"name":"PDF","path":"api/tags/PDF.json"},{"name":"阅读器","path":"api/tags/阅读器.json"}]}