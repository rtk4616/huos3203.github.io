{"title":"iOS和OSX集成gitAPI","slug":"开源库/iOS和OSX集成gitAPI","date":"2017-05-17T17:33:46.000Z","updated":"2017-09-24T09:18:26.000Z","comments":true,"path":"api/articles/开源库/iOS和OSX集成gitAPI.json","excerpt":null,"covers":["http://p27uwfdhv.bkt.clouddn.com/static/images/ObjectiveGitxiaoguo.png","http://p27uwfdhv.bkt.clouddn.com/static/images/NSTextFieldBindings.png","http://p27uwfdhv.bkt.clouddn.com/static/images/textFieldConections.png","http://p27uwfdhv.bkt.clouddn.com/static/images/fontManage.png"],"content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p>在项目中使用git submodule工具集成子项目ObjectiveGit</p>\n<h4 id=\"在新项目中使用git-submodule集成gitAPI\"><a href=\"#在新项目中使用git-submodule集成gitAPI\" class=\"headerlink\" title=\"在新项目中使用git submodule集成gitAPI\"></a>在新项目中使用git submodule集成gitAPI</h4><p>参考官方提供的两个demo</p>\n<ul>\n<li><p>OS X: <a href=\"https://github.com/Abizern/CommitViewer\" target=\"_blank\" rel=\"noopener\">CommitViewer</a>   </p>\n<img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/ObjectiveGitxiaoguo.png\">\n</li>\n<li><p>iOS: <a href=\"https://github.com/Raekye/ObjectiveGit-iOS-Example\" target=\"_blank\" rel=\"noopener\">ObjectiveGit iOS Example</a></p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git submodule add https://github.com/libgit2/objective-git.git External/ObjectiveGit</span><br><span class=\"line\">如果之前配置过，直接更新：</span><br><span class=\"line\">git submodule update --init --recursive</span><br></pre></td></tr></table></figure>\n<ol>\n<li><code>cd External/ObjectiveGit</code>，然后执行<code>./script/bootstrap</code>安装相关依赖.</li>\n<li>拖动 <code>ObjectiveGitFramework.xcodeproj</code> 文件 到iOS/OSX项目导航窗口 .</li>\n<li>在build Phases中配置APP的依赖，根据平台添加<code>ObjectiveGit-Mac</code> or <code>ObjectiveGit-iOS</code>.</li>\n<li>APP通过连接器链接 <code>ObjectiveGit.framework</code>.</li>\n<li>在build setting中“Header Search Paths” (<code>HEADER_SEARCH_PATHS</code>)设置<code>libgit2</code>头文件在项目的路径，例如：<code>External/ObjectiveGit/External/libgit2/include</code>. </li>\n<li>Add a new “Copy Files” build phase, set the destination to “Frameworks” and add <code>ObjectiveGit.framework</code> to the list. This will package the framework with your application as an embedded private framework.</li>\n</ol>\n<ul>\n<li>It’s hard to tell the difference between the platforms, but the Mac framework is in <code>build/Debug</code> whereas the iOS framework is in <code>build/Debug-iphoneos</code></li>\n</ul>\n<ol>\n<li>Don’t forget to <code>#import &lt;ObjectiveGit/ObjectiveGit.h&gt;</code> or <code>@import ObjectiveGit;</code> as you would with any other framework.</li>\n</ol>\n<h3 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h3><ul>\n<li>类变量关联.xib控件text值    </li>\n<li>字体样式菜单来改变字体样式    <h4 id=\"在OSX中设置控件的Bindings代替IBOutlet\"><a href=\"#在OSX中设置控件的Bindings代替IBOutlet\" class=\"headerlink\" title=\"在OSX中设置控件的Bindings代替IBOutlet\"></a>在OSX中设置控件的Bindings代替IBOutlet</h4></li>\n</ul>\n<p>先关联再使用属性依赖特性来同步数据</p>\n<h5 id=\"类变量关联-xib控件text值\"><a href=\"#类变量关联-xib控件text值\" class=\"headerlink\" title=\"类变量关联.xib控件text值\"></a>类变量关联.xib控件text值</h5><p><a href=\"http://stackoverflow.com/questions/8161012/referencing-bindings-in-connections-inspector\" target=\"_blank\" rel=\"noopener\">相关参考</a>      </p>\n<ol>\n<li>选中NSTextField的bindings检查器面板   </li>\n<li>在<code>value</code>单元内设置bind to 的值，通过下拉框选中 <code>Delegate</code>      </li>\n<li>Model key Path:输入类变量的名称。    <img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/NSTextFieldBindings.png\">   </li>\n<li>切换到 NSTextField／Delegate的Connections检查器面板,就会看到已经建立了关联：     <img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/textFieldConections.png\">   <img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/delegatebinding.png\">   \n</li>\n</ol>\n<h5 id=\"依赖属性\"><a href=\"#依赖属性\" class=\"headerlink\" title=\"依赖属性\"></a>依赖属性</h5><p>Foundation 框架提供的表示属性依赖的机制如下：<br>参考<a href=\"https://github.com/huos3203/BookObjc/blob/master/publish/issue7/issue-7-3-DJBen.md#依赖的属性\" target=\"_blank\" rel=\"noopener\">属性的依赖</a><br><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (<span class=\"built_in\">NSSet</span> *)keyPathsForValuesAffectingValueForKey:(<span class=\"built_in\">NSString</span> *)key</span><br><span class=\"line\"></span><br><span class=\"line\">或</span><br><span class=\"line\">+ (<span class=\"built_in\">NSSet</span> *)keyPathsForValuesAffecting&lt;键名&gt;</span><br></pre></td></tr></table></figure></p>\n<p>将属性关联起来，这样就可以将类变量的值同步至UI控件中了：<br><figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (<span class=\"built_in\">NSSet</span> *)keyPathsForValuesAffectingValueForKey:(<span class=\"built_in\">NSString</span> *)key </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">NSSet</span> *keySet = [<span class=\"built_in\">NSSet</span> setWithObjects:<span class=\"string\">@\"commit\"</span>, <span class=\"literal\">nil</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ([key isEqualToString:<span class=\"string\">@\"messageTitle\"</span>] ||</span><br><span class=\"line\">        [key isEqualToString:<span class=\"string\">@\"messageDetails\"</span>] ||</span><br><span class=\"line\">        [key isEqualToString:<span class=\"string\">@\"author\"</span>] ||</span><br><span class=\"line\">        [key isEqualToString:<span class=\"string\">@\"date\"</span>])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> keySet;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [<span class=\"keyword\">super</span> keyPathsForValuesAffectingValueForKey:key];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"实现字体样式菜单来改变字体样式\"><a href=\"#实现字体样式菜单来改变字体样式\" class=\"headerlink\" title=\"实现字体样式菜单来改变字体样式\"></a>实现字体样式菜单来改变字体样式</h4><ol>\n<li>在xib中拖一个Object并设置为NSFontManager.h类的实现。   </li>\n<li>选中NSFontManager.h的connections面板，将Received Actions关联到对应的菜单项即可  <img src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/fontManage.png\">\n</li>\n</ol>\n","categories":[{"name":"git","path":"api/categories/git.json"},{"name":"API","path":"api/categories/API.json"}],"tags":[{"name":"工具","path":"api/tags/工具.json"},{"name":"管理","path":"api/tags/管理.json"}]}