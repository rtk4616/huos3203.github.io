{"title":"swift开发macOS系统的终端命令行应用","slug":"macOS/swift开发macOS系统的终端命令行应用","date":"2017-05-29T13:00:08.000Z","updated":"2017-05-29T13:00:08.000Z","comments":true,"path":"api/articles/macOS/swift开发macOS系统的终端命令行应用.json","excerpt":null,"covers":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><script src=\"/assets/js/APlayer.min.js\"> </script><h3 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h3><p><a href=\"https://www.raywenderlich.com:443/128039/command-line-programs-macos-tutorial\" target=\"_blank\" rel=\"noopener\">命令行程序MacOS的教程</a></p>\n<p>使用swift创建一个命令行程序，相比其他语言如C、Perl、Ruby或java。<br>选用SWIFT的理由：<br>Swift可以用作解释脚本语言，也可以用作编译语言。这使您具有脚本语言的优势，如零编译时间和易于维护，以及选择编译应用程序，以提高执行时间或捆绑出售给公众。</p>\n<h3 id=\"main-swift主体\"><a href=\"#main-swift主体\" class=\"headerlink\" title=\"main.swift主体\"></a>main.swift主体</h3><p>许多C语言的main函数作为切入点，例如当操作系统调用这个程序时执行的代码入口。这意味着程序的执行始于这个函数的第一行。<br>Swift没有一个main函数，而是main.swift文件。这样在运行Swift项目时，直接运行的事main.swift文件，执行入口开始于第一行代码。</p>\n<h3 id=\"终端调用程序\"><a href=\"#终端调用程序\" class=\"headerlink\" title=\"终端调用程序\"></a>终端调用程序</h3><p>命令行可分两种模式</p>\n<ul>\n<li>静态可执行模式：通过终端app直接运行命令行工具，执行固有功能。</li>\n<li>交互命令行模式 ：需要用户通过使用说明信息，对命令行程序输入交互命令，执行相应的功能。</li>\n</ul>\n<ol>\n<li><p>在同一个目录下执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./Panagram</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>相对路径执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Debug/Panagram</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","categories":[{"name":"macOS","path":"api/categories/macOS.json"},{"name":"终端","path":"api/categories/终端.json"}],"tags":[{"name":"工具","path":"api/tags/工具.json"}]}