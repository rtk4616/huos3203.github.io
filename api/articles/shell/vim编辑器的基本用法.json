{"title":"vim编辑器的基本用法","slug":"shell/vim编辑器的基本用法","date":"2017-07-04T10:09:29.000Z","updated":"2018-04-12T19:29:50.000Z","comments":true,"path":"api/articles/shell/vim编辑器的基本用法.json","excerpt":null,"covers":null,"content":"<script src=\"/assets/js/APlayer.min.js\"> </script><p><a href=\"https://github.com/huos3203/vim-galore-zh_cn\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<h3 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h3><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><p>动作：是指移动光标的操作，你肯定很熟悉 h、j、k 和 l，以及 w 和 b。但其实，/ 也是一个动作。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:h navigation</span><br></pre></td></tr></table></figure></p>\n<p>操作符：<br>对某个区域文本执行的操作。比如，d、~、gU 和 &gt; 都是操作符。这些操作符既可以在普通模式下使用，也可以在可视模式下使用。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:h operator</span><br></pre></td></tr></table></figure></p>\n<p>文本对象：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:h text-objects</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"缓冲区列表\"><a href=\"#缓冲区列表\" class=\"headerlink\" title=\"缓冲区列表\"></a>缓冲区列表</h3><p>缓冲区的几种状态：已激活，已载入，已列出，已命名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:ls  #列出所有可以列出的缓冲区</span><br><span class=\"line\">:ls! #命令可以显示被放入缓冲区列表的和未被放入列表的缓冲区</span><br></pre></td></tr></table></figure></p>\n<p>创建一个无名临时缓冲区<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:enew</span><br></pre></td></tr></table></figure></p>\n<p>激活一个缓冲区<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:e file2</span><br></pre></td></tr></table></figure></p>\n<p>命名一个缓冲区<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:w /path/file #存储位置</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"参数列表\"><a href=\"#参数列表\" class=\"headerlink\" title=\"参数列表\"></a>参数列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:h argument-list</span><br></pre></td></tr></table></figure>\n<p>操作命令范围概念<br>关键字符：,|;|数字|\\$|%</p>\n<h3 id=\"跳转历史和变更历史\"><a href=\"#跳转历史和变更历史\" class=\"headerlink\" title=\"跳转历史和变更历史\"></a>跳转历史和变更历史</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:jumps</span><br><span class=\"line\">:changes</span><br><span class=\"line\">:h changelist</span><br><span class=\"line\">:h jumplist</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><p><a href=\"http://vim.liuchengxu.org/docs/org/tutorial_cn.html#orgheadline26\" target=\"_blank\" rel=\"noopener\">space-Vim使用文档</a><br><code>空格 f t</code>  打开/关闭树型栏<br><code>SPC f R</code> 刷新文件结构目录<br><code>, f c</code> unite命令集合快速查找命令集<br><code>SPC b h</code> 返回vim主页<br><code>SPC f r</code> 最近打开过的文件清单</p>\n<h3 id=\"markdown插件命令\"><a href=\"#markdown插件命令\" class=\"headerlink\" title=\"markdown插件命令\"></a>markdown插件命令</h3><p><code>,1..3</code> 快速标题格式<code>###</code>生成章节<br><code>,ct</code> 在当前位置插入所有章节的清单<br><code>,cs</code> 新建窗口显示博客章节目录清单,支持编辑时跳转到指定的章节位置<br><code>,cp</code> 预览博客发布的效果（无效）</p>\n<h3 id=\"git插件命令\"><a href=\"#git插件命令\" class=\"headerlink\" title=\"git插件命令\"></a>git插件命令</h3><p><code>SPC g s</code> git status<br><code>SPC g d</code> git diff<br><code>AsyncRun git add file</code> git add file<br><code>SPC g c</code> git commit<br><code>SPC g p</code> git push</p>\n<h3 id=\"unite\"><a href=\"#unite\" class=\"headerlink\" title=\"unite\"></a>unite</h3><p><a href=\"http://www.cnblogs.com/pigzhu/p/3159161.html\" target=\"_blank\" rel=\"noopener\">Vim插件：Unite新手指导(译)</a><br>Unite可以在一个项目中快速浏览文件。但是它不仅限于文件，其他任何可以列出的东西都可以很好的被显示和搜索。这个开放式的特性很可能是人们找到它的原因</p>\n<h3 id=\"用法\"><a href=\"#用法\" class=\"headerlink\" title=\"用法\"></a>用法</h3><p>Unite命令采用的格式为:Unite source，其中”source”是buffer，file和file_rec其中之一。</p>\n<p><code>buffer</code>: 浏览当前打开的buffer列表<br><code>file</code>: 浏览当前目录的文件列表<br><code>file_rec</code>: 递归的列出当前目录的文件<br>当一个命令被使用，一个新的水平分割窗口会被打开。<br>比如，命令:<code>Unite file</code>将会显示当前目录的文件列表。在这个窗口中，标准的Vim命令模式下的命令可以使用。可以使用“<code>j</code>”和“<code>k</code>”浏览该列表，可以使用“<code>/</code>”来查询。如果你在一个文件上按下<code>enter</code>键，Unite将会打开它。如果光标是在一个目录上，Unite将会进入该目录，并且更新该文件列表。<br>使用NERO Tree命令<br>查看帮助命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?</span><br></pre></td></tr></table></figure></p>\n<p>将选中的目录变为根目录：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C  # change tree root to the selected dir</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"模式\"><a href=\"#模式\" class=\"headerlink\" title=\"模式\"></a>模式</h3><h4 id=\"插入搜索模式\"><a href=\"#插入搜索模式\" class=\"headerlink\" title=\"插入搜索模式\"></a>插入搜索模式</h4><p>如果你在Unite窗口进入插入模式，光标将会移到该窗口的最上方，并显示“&gt;”提示符。输入字符会搜索该列表–这里和FuzzyFinder相似。和常规vim一样，按<esc>键可以退出插入模式回到命令模式。</esc></p>\n<h4 id=\"命令模式\"><a href=\"#命令模式\" class=\"headerlink\" title=\"命令模式\"></a>命令模式</h4><p>在命令模式下，当光标在一个文件上，按下a，Unite会显示一个可以操作该文件命令的列表。这个命令列表被称为actions，这个列表可以像Unite其他部分一样被搜索和调用。</p>\n<h4 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h4><p>actions可以组合通配符。如果输入:Unite file, 然后按下*将会标记所有文件，再输入a将会列出所有actions，最后选择above，Unite将会打开所有被标记的文件。</p>\n<h3 id=\"单行操作\"><a href=\"#单行操作\" class=\"headerlink\" title=\"单行操作\"></a>单行操作</h3><h4 id=\"光标移动\"><a href=\"#光标移动\" class=\"headerlink\" title=\"光标移动\"></a>光标移动</h4><p>hjkl (强例推荐使用其移动光标，但不必需) →你也可以使用光标键 (←↓↑→). 注: j 就像下箭头。</p>\n<ol>\n<li><p>单词移动：<br>1.一个单词由字母，数字和下划线组成，那么就用小写的e和w。即：程序变量移动。<br>2.单词是由blank字符分隔符，那么就用大写的E和W。 即：程序语句移动。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">w → 到下一个单词的开头。</span><br><span class=\"line\">e → 到下一个单词的结尾。</span><br><span class=\"line\">b → 到前一个单词的开头。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>本行移动：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 → 数字零，到行头</span><br><span class=\"line\">^ → 到本行第一个不是blank字符的位置（所谓blank字符就是空格，tab，换行，回车等）</span><br><span class=\"line\">$ → 到本行行尾</span><br><span class=\"line\">g_ → 到本行最后一个不是blank字符的位置。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>行间移动：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NG → 到第 N 行 （陈皓注：注意命令中的G是大写的，另我一般使用 : N 到第N行，如 :137 到第137行）</span><br><span class=\"line\">gg → 到第一行。（陈皓注：相当于1G，或 :1）</span><br><span class=\"line\">G 到最后一行</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"多行范围\"><a href=\"#多行范围\" class=\"headerlink\" title=\"多行范围\"></a>多行范围</h3><p>范围 (Ranges) 其实很好理解，但很多 Vim 用户的理解不到位。</p>\n<ul>\n<li>很多命令都可以加一个数字，用于指明操作范围</li>\n<li>范围可以是一个行号，用于指定某一行</li>\n<li>范围也可以是一对通过 <code>,</code> 或 <code>;</code> 分割的行号</li>\n<li>大部分命令，默认只作用于当前行</li>\n<li>只有 <code>:write</code> 和 <code>:global</code> 是默认作用于所有行的</li>\n</ul>\n<p>范围的使用是十分直观的。以下为一些例子（其中，<code>:d</code> 为 <code>:delete</code> 的缩写）：</p>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>操作的行</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>:d</code></td>\n<td>当前行</td>\n</tr>\n<tr>\n<td><code>:.d</code></td>\n<td>当前行</td>\n</tr>\n<tr>\n<td><code>:1d</code></td>\n<td>第一行</td>\n</tr>\n<tr>\n<td><code>:$d</code></td>\n<td>最后一行</td>\n</tr>\n<tr>\n<td><code>:1,$d</code></td>\n<td>所有行</td>\n</tr>\n<tr>\n<td><code>:%d</code></td>\n<td>所有行（这是 <code>1,$</code> 的语法糖）</td>\n</tr>\n<tr>\n<td><code>:.,5d</code></td>\n<td>当前行至第 5 行</td>\n</tr>\n<tr>\n<td><code>:,5d</code></td>\n<td>同样是当前行至第 5 行</td>\n</tr>\n<tr>\n<td><code>:,+3d</code></td>\n<td>当前行及接下来的 3 行</td>\n</tr>\n<tr>\n<td><code>:1,+3d</code></td>\n<td>第一行至当前行再加 3 行</td>\n</tr>\n<tr>\n<td><code>:,-3d</code></td>\n<td>当前行及向上的 3 行（Vim 会弹出提示信息，因为这是一个保留的范围）</td>\n</tr>\n<tr>\n<td><code>:3,&#39;xdelete</code></td>\n<td>第三行至<a href=\"#标注\">标注</a> 为 x 的那一行</td>\n</tr>\n<tr>\n<td><code>:/^foo/,$delete</code></td>\n<td>当前行以下，以字符 “foo” 开头的那一行至结尾</td>\n</tr>\n<tr>\n<td><code>:/^foo/+1,$delete</code></td>\n<td>当前行以下，以字符 “foo” 开头的那一行的下一行至结尾</td>\n</tr>\n</tbody>\n</table>\n<p>需要注意的是，<code>;</code> 也可以用于表示范围。区别在于，<code>a,b</code> 的 <code>b</code> 是以当前行作为参考的。而 <code>a;b</code> 的 <code>b</code> 是以 <code>a</code> 行作为参考的。举个例子，现在你的光标在第 5 行。这时 <code>:1,+1d</code> 会删除第 1 行至第 6 行，而 <code>:1;+1d</code> 会删除第 1 行和第 2 行。</p>\n<h3 id=\"可视化区域选择并编辑文本\"><a href=\"#可视化区域选择并编辑文本\" class=\"headerlink\" title=\"可视化区域选择并编辑文本\"></a>可视化区域选择并编辑文本</h3><p>1.区域选择其命令格式：</p>\n<pre><code>&lt;action&gt;a&lt;object&gt; 或 &lt;action&gt;i&lt;object&gt;\n</code></pre><p>在visual 模式下，这些命令很强大。</p>\n<p><code>action</code>可以是任何的命令，如 <code>d (删除)</code>, <code>y (拷贝)</code>,<code>v (可以视模式选择)</code>。<br><code>object</code> 可能是： w 一个单词， W 一个以空格为分隔的单词， s 一个句字， p 一个段落。也可以是一个特别的字符：”、 ‘、 )、 }、 ]。</p>\n<p>示例：<br>假设你有一个字符串 (map (+) (“foo”)).而光标键在第一个 o 的位置。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi&quot; → 会选择 foo.</span><br><span class=\"line\">va&quot; → 会选择 &quot;foo&quot;.</span><br><span class=\"line\">vi) → 会选择 &quot;foo&quot;.</span><br><span class=\"line\">va) → 会选择(&quot;foo&quot;).</span><br><span class=\"line\">v2i) → 会选择 map (+) (&quot;foo&quot;)</span><br><span class=\"line\">v2a) → 会选择 (map (+) (&quot;foo&quot;))</span><br></pre></td></tr></table></figure></p>\n<p>2.可视化选择： v,V,<c-v></c-v></p>\n<p>前面，我们看到了 <c-v>的示例 （在Windows下应该是<c-q>），我们可以使用 v 和 V。一但被选好了，你可以做下面的事：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">J → 把所有的行连接起来（变成一行）</span><br><span class=\"line\">&lt; 或 &gt; → 左右缩进</span><br><span class=\"line\">= → 自动给缩进 （陈皓注：这个功能相当强大，我太喜欢了）</span><br></pre></td></tr></table></figure></c-q></c-v></p>\n<p>3.在所有被选择的行后加上点东西：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">选中相关的行 (可使用 j 或 &lt;C-d&gt; 或是 /pattern 或是 % 等……)</span><br><span class=\"line\">$ 到行最后</span><br><span class=\"line\">A, 输入字符串，按 ESC。</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"文本编辑\"><a href=\"#文本编辑\" class=\"headerlink\" title=\"文本编辑\"></a>文本编辑</h3><p>插入光标位置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i → Insert 模式，按 ESC 回到 Normal 模式.</span><br><span class=\"line\">a → 在光标后插入</span><br><span class=\"line\">o → 在当前行后插入一个新行</span><br><span class=\"line\">O → 在当前行前插入一个新行</span><br></pre></td></tr></table></figure></p>\n<p>操作文本：</p>\n<p>1.删除：字符，单词，行</p>\n<pre><code>x → 删当前光标所在的一个字符。\ncw → 替换从光标所在位置后到一个单词结尾的字符【准确的说是删除从光标位置到一个单词结尾的字符并进入插入模式】\ndd → 删除当前行，并把删除的行存到剪贴板里\n</code></pre><p>通过行号确定你要删除的行；</p>\n<pre><code>set nu → 显示行号；\n:32,65d → 32-65行就被删除了\n</code></pre><p>2.拷贝：单词，行，段</p>\n<pre><code>ye → 当前位置拷贝到本单词的最后一个字符。\nyy → 拷贝当前行相当于 ddP（dd删除当前行，再粘贴）\n0y$ → 拷贝当前行，即：光标移动组合操作格式：&lt;start position&gt;&lt;command&gt;&lt;end position&gt;\ny2/foo → 拷贝2个 “foo” 之间的字符串。\n</code></pre><p>  还有很多时候并不一定你就一定要按y才会拷贝，下面的命令也会被拷贝：</p>\n<pre><code>d (删除 )\nv (可视化的选择)\ngU (变大写)\ngu (变小写)\n等等\n</code></pre><blockquote>\n<p>注：可视化选择是一个很有意思的命令，你可以先按v，然后移动光标，你就会看到文本被选择，然后，你可能d，也可y，也可以变大写等</p>\n</blockquote>\n<p>3.粘帖：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">p/P → p是表示在当前位置之后，P表示在当前位置之前</span><br></pre></td></tr></table></figure></p>\n","categories":[{"name":"vim","path":"api/categories/vim.json"},{"name":"工具","path":"api/categories/工具.json"}],"tags":[]}