{"title":"git svn桥接命令的基础","slug":"git/gitsvn桥接命令的基础","date":"2016-01-05T14:18:00.000Z","updated":"2018-03-28T07:42:14.000Z","comments":true,"path":"api/articles/git/gitsvn桥接命令的基础.json","excerpt":null,"covers":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><p><a href=\"http://git-scm.com/book/zh/v1/Git-与其他系统-Git-与-Subversion#git-svn\" target=\"_blank\" rel=\"noopener\">git svn</a></p>\n<p>通过几个简单的工作流程了解到<code>git svn</code>常见命令：<br>值得警戒的是，在使用 git svn 的时候，你实际是在与 Subversion 交互，Git 比它要高级复杂的多。尽管可以在本地随意的进行分支和合并，最好还是通过衍合保持线性的提交历史，</p>\n<ol>\n<li>尽量避免类似与远程 Git 仓库动态交互这样的操作。</li>\n<li>避免修改历史再重新推送的做法，也不要同时推送到并行的 Git 仓库来试图与其他 Git 用户合作。</li>\n<li>Subersion 只能保存单一的线性提交历史，一不小心就会被搞糊涂。</li>\n<li>合作团队中同时有人用 SVN 和 Git，一定要确保所有人都使用 SVN 服务来协作——这会让生活轻松很多。</li>\n</ol>\n","categories":[{"name":"git","path":"api/categories/git.json"},{"name":"svn","path":"api/categories/svn.json"}],"tags":[{"name":"命令","path":"api/tags/命令.json"}]}