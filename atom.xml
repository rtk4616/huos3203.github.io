<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>布衣男儿</title>
  
  <subtitle>不物喜，不己悲，善假物，易参行！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huos3203.github.io/"/>
  <updated>2018-06-20T15:31:52.000Z</updated>
  <id>https://huos3203.github.io/</id>
  
  <author>
    <name>boyer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>弧形表盘进度仪表</title>
    <link href="https://huos3203.github.io/2018/06/20/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E5%BC%A7%E5%BD%A2%E8%A1%A8%E7%9B%98%E8%BF%9B%E5%BA%A6%E4%BB%AA%E8%A1%A8/"/>
    <id>https://huos3203.github.io/2018/06/20/个人项目/弧形表盘进度仪表/</id>
    <published>2018-06-20T15:31:52.000Z</published>
    <updated>2018-06-20T15:31:52.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><!--github库卡片--><div id="badge-container-huos3203-ArcProgressUI-23f33a" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-huos3203-ArcProgressUI-23f33a", "huos3203", "ArcProgressUI", "23f33a", false);</script><h1 id="ArcProgressUI"><a href="#ArcProgressUI" class="headerlink" title="ArcProgressUI"></a>ArcProgressUI</h1><p><a href="https://travis-ci.org/huo3203@hotmail.com/ArcProgressUI" target="_blank" rel="noopener"><img src="https://img.shields.io/travis/huo3203@hotmail.com/ArcProgressUI.svg?style=flat" alt="CI Status"></a><br><a href="https://cocoapods.org/pods/ArcProgressUI" target="_blank" rel="noopener"><img src="https://img.shields.io/cocoapods/v/ArcProgressUI.svg?style=flat" alt="Version"></a><br><a href="https://cocoapods.org/pods/ArcProgressUI" target="_blank" rel="noopener"><img src="https://img.shields.io/cocoapods/l/ArcProgressUI.svg?style=flat" alt="License"></a><br><a href="https://cocoapods.org/pods/ArcProgressUI" target="_blank" rel="noopener"><img src="https://img.shields.io/cocoapods/p/ArcProgressUI.svg?style=flat" alt="Platform"></a></p><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>To run the example project, clone the repo, and run <code>pod install</code> from the Example directory first.</p><h2 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h2><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>ArcProgressUI is available through <a href="https://cocoapods.org" target="_blank" rel="noopener">CocoaPods</a>. To install<br>it, simply add the following line to your Podfile:</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pod <span class="string">'ArcProgressUI'</span></span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"ArcProgressView.h"</span></span></span><br><span class="line"><span class="built_in">NSArray</span> *viewArr = [[<span class="built_in">NSBundle</span> mainBundle] loadNibNamed:<span class="string">@"ArcProgressView"</span> owner:<span class="literal">nil</span> options:<span class="literal">nil</span>];</span><br><span class="line"><span class="built_in">UIView</span> *arcView = viewArr.lastObject;</span><br><span class="line">arcView.backgroundColor = [<span class="built_in">UIColor</span> redColor];</span><br><span class="line">[<span class="keyword">self</span>.view addSubview:arcView];</span><br></pre></td></tr></table></figure><h2 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h2><p>huo3203@hotmail.com, 724987481</p><h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p>ArcProgressUI is available under the MIT license. See the LICENSE file for more info.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="个人项目" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>storyboard的几种方式</title>
    <link href="https://huos3203.github.io/2018/06/20/iOS/storyboard%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/"/>
    <id>https://huos3203.github.io/2018/06/20/iOS/storyboard的几种方式/</id>
    <published>2018-06-20T14:49:37.000Z</published>
    <updated>2018-06-20T14:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="通过IB（xib-storyboard）创建View的周期方法"><a href="#通过IB（xib-storyboard）创建View的周期方法" class="headerlink" title="通过IB（xib/storyboard）创建View的周期方法"></a>通过IB（xib/storyboard）创建View的周期方法</h2><ol><li><code>loadView</code>：加载View方法，UI是通过代码绘制时，初始化控制器的视图时，会调用该方法。优先级高于IB视图，当重载时，会直接覆盖IB中的视图,因为无论nib也好，xib也好，最终在执行UIViewController生命周期函数<code>loadView</code>之前，都会转化成可执行的nib文件。</li><li><code>initWithNibName</code>：是类的构造器方法，通过IB创建的类：简称<code>IB类</code>，<code>IB类</code>需要通过这个构造器来实例化对象。</li><li><code>initWithCoder</code>：当<code>IB类</code>实例化时会调用该方法，即通过<code>initWithNibName</code>构造器实例化对象时，会调用该方法来分配<code>IB对象</code>的内存空间。</li><li><code>awakeFromNib</code>：当实例化<code>IB视图类</code>时执行，即当IB文件被加载的时候，会发送一个<code>awakeFromNib</code>的消息到IB文件中的每个的对象，每个对象都可以定义自己的awakeFromNib函数来响应这个消息，执行一些必要的操作。<blockquote><p>帮助记忆：一开始经过<code>initWithCoder</code>创建出来的控件是死的，然后通过<code>awakeFromNib</code>来唤醒，所以这会有一个先后的调用顺序</p></blockquote></li><li><code>viewDidLoad</code>：当view对象被加载到内存后就会执行viewDidLoad，所以不管通过nib文件还是代码的方式创建对象都会执行viewDidLoad 。</li></ol><h2 id="加载xib方法"><a href="#加载xib方法" class="headerlink" title="加载xib方法"></a>加载xib方法</h2><h3 id="加载视图"><a href="#加载视图" class="headerlink" title="加载视图"></a>加载视图</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">NSArray</span>* nibView =  [[<span class="built_in">NSBundle</span> mainBundle] loadNibNamed:<span class="string">@"xibfileName"</span> owner:<span class="literal">nil</span> options:<span class="literal">nil</span>];</span><br><span class="line"> <span class="built_in">UIView</span> *xibView = nibView.lastObject;</span><br><span class="line"><span class="comment">//=======</span></span><br><span class="line"> <span class="comment">// 这里的bundle参数是nil,(这里nil默认就是mianBundle)</span></span><br><span class="line"> <span class="built_in">UINib</span> *nib = [<span class="built_in">UINib</span> nibWithNibName:<span class="string">@"xib文件名"</span> bundle:<span class="literal">nil</span>];</span><br><span class="line"> <span class="built_in">NSArray</span> *views = [nib instantiateWithOwner:<span class="literal">nil</span> options:<span class="literal">nil</span>];</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p><code>owner</code>:xib中的fileObject参数<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加载所有xib文件</span></span><br><span class="line"><span class="built_in">NSArray</span>* objects = [[<span class="built_in">NSBundle</span> mainBundle] loadNibNamed:nibName owner:<span class="keyword">self</span> options:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//加载指定xib文件</span></span><br><span class="line">ContactsTableViewCell  *cell = [[[<span class="built_in">NSBundle</span> mainBundle]loadNibNamed:<span class="string">@"ContactsTableViewCell"</span> owner:<span class="literal">nil</span> options:<span class="literal">nil</span>] objectAtIndex:<span class="number">0</span>];</span><br></pre></td></tr></table></figure></p><h3 id="加载控制器对象"><a href="#加载控制器对象" class="headerlink" title="加载控制器对象"></a>加载控制器对象</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span> = [<span class="keyword">super</span> initWithNibName:<span class="string">@"xibName"</span> bundle:nibBundleOrNil];</span><br></pre></td></tr></table></figure><h2 id="加载storyboard"><a href="#加载storyboard" class="headerlink" title="加载storyboard"></a>加载storyboard</h2><h3 id="加载控制器对象-1"><a href="#加载控制器对象-1" class="headerlink" title="加载控制器对象"></a>加载控制器对象</h3><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加载storyboard</span></span><br><span class="line"><span class="built_in">UIStoryboard</span> *storyboard = [<span class="built_in">UIStoryboard</span> storyboardWithName:<span class="string">@"Two"</span> bundle:<span class="literal">nil</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建storyboard里面灰色的控制器</span></span><br><span class="line">　　　<span class="comment">//找到shtoryboard里面设置的初始控制器</span></span><br><span class="line">　　　<span class="comment">//    UIViewController *vc = [storyboard instantiateInitialViewController];</span></span><br><span class="line">　　　　　　　　</span><br><span class="line">　　　　　　　<span class="comment">// 从storyboard里面找出绑定标识的控制器</span></span><br><span class="line">　　　　　　　MJTwoViewController *vc = [storyboard instantiateViewControllerWithIdentifier:<span class="string">@"pink"</span>];</span><br><span class="line">　　　　　　　<span class="keyword">self</span>.window.rootViewController = vc;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="iOS" scheme="https://huos3203.github.io/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>使用local命令行新建remote库</title>
    <link href="https://huos3203.github.io/2018/06/20/git/%E4%BD%BF%E7%94%A8local%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%96%B0%E5%BB%BAremote%E5%BA%93/"/>
    <id>https://huos3203.github.io/2018/06/20/git/使用local命令行新建remote库/</id>
    <published>2018-06-20T11:14:00.000Z</published>
    <updated>2018-06-20T14:49:37.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>使用命令行直接生成github中的项目</p><h2 id="新建远程仓库"><a href="#新建远程仓库" class="headerlink" title="新建远程仓库"></a>新建远程仓库</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u username <span class="symbol">https:</span>/<span class="regexp">/api.github.com/user</span><span class="regexp">/repos -d '&#123; "name": "repo-name" &#125;'</span></span><br></pre></td></tr></table></figure><p>执行打印结果，是json格式：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"ArcProgressUI"</span>,</span><br><span class="line"><span class="attr">"full_name"</span>: <span class="string">"huos3203/ArcProgressUI"</span>,</span><br><span class="line"><span class="attr">"owner"</span>: &#123;</span><br><span class="line">    <span class="attr">"url"</span>: <span class="string">"https://api.github.com/users/huos3203"</span>,</span><br><span class="line">    <span class="attr">"repos_url"</span>: <span class="string">"https://api.github.com/users/huos3203/repos"</span>,</span><br><span class="line">    ---</span><br><span class="line">&#125;,</span><br><span class="line">"git_url": "git://github.com/huos3203/ArcProgressUI.git",</span><br><span class="line">"ssh_url": "git@github.com:huos3203/ArcProgressUI.git",</span><br><span class="line">"clone_url": "https://github.com/huos3203/ArcProgressUI.git",</span><br><span class="line">"svn_url": "https://github.com/huos3203/ArcProgressUI",</span><br><span class="line">"default_branch": "master",</span><br><span class="line">"permissions": &#123;</span><br><span class="line">    "admin": true,</span><br><span class="line">    "push": true,</span><br><span class="line">    "pull": true</span><br><span class="line">&#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="初始化远程仓库"><a href="#初始化远程仓库" class="headerlink" title="初始化远程仓库"></a>初始化远程仓库</h2><p>找到仓库路径的字段<code>clone_url</code>或者``<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin clone_url</span><br><span class="line">//或者使用ssh,避免输入密码</span><br><span class="line">//git remote add origin ssh_url</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></p><h2 id="删除远程仓库"><a href="#删除远程仓库" class="headerlink" title="删除远程仓库"></a>删除远程仓库</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">githubDelRepo()&#123;</span><br><span class="line">    <span class="keyword">if</span> [[ $# != <span class="number">2</span> ]] ; <span class="keyword">then</span></span><br><span class="line">        echo <span class="string">"Needs username and repo-name as args 1 and 2 respectively."</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        curl -X DELETE -u <span class="string">"$&#123;1&#125;"</span> <span class="symbol">https:</span>/<span class="regexp">/api.github.com/repos</span><span class="regexp">/"$&#123;1&#125;"/</span><span class="string">"$&#123;2&#125;"</span></span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="git" scheme="https://huos3203.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>MacOS系统下运行exe小程序</title>
    <link href="https://huos3203.github.io/2018/06/20/macOS/MacOS%E7%B3%BB%E7%BB%9F%E4%B8%8B%E8%BF%90%E8%A1%8Cexe%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <id>https://huos3203.github.io/2018/06/20/macOS/MacOS系统下运行exe小程序/</id>
    <published>2018-06-19T18:09:18.000Z</published>
    <updated>2018-06-19T19:44:09.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>例如，当急需在Mac系统上，安装abletonLive，涉及到破解机exe小程序，使用文中提到的两种方法，就解了燃眉之急。</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p><a href="http://xiazai.crossoverchina.com/trial/Mac/crossover_mac_17.5.5.zip" target="_blank" rel="noopener">crossover</a></p><h3 id="Wrappe-k-小应用"><a href="#Wrappe-k-小应用" class="headerlink" title="Wrappe[k]小应用"></a>Wrappe[k]小应用</h3><p>这款软件适用于一些小型exe程序，其他，推荐方法一<br><a href="https://pan.baidu.com/s/1ujHKuXNr8G6m8PTPMO9ajQ" target="_blank" rel="noopener">下载</a> 密码: khqa<br><a href="http://www.sdifen.com/mac-exe.html" target="_blank" rel="noopener">参看</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="macOS" scheme="https://huos3203.github.io/categories/macOS/"/>
    
    
  </entry>
  
  <entry>
    <title>能否在GarageBand中使用LaunchPad?</title>
    <link href="https://huos3203.github.io/2018/06/19/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/%E5%9C%A8GarageBand%E4%B8%AD%E4%BD%BF%E7%94%A8LaunchPad/"/>
    <id>https://huos3203.github.io/2018/06/19/作文作曲/在GarageBand中使用LaunchPad/</id>
    <published>2018-06-19T15:39:56.000Z</published>
    <updated>2018-06-19T19:38:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Garageband不支持控件表面，因此无法使用Launchpad/LaunchKey的全部功能。</p><p>在Garageband中，仅可以使用Launchpad来演奏虚拟乐器。<br>原因：<code>Faders</code>和<code>Knobs</code>将为输出MIDI CC消息(<a href="http://global.novationmusic.com/answerbase/what-midi-cc-messages-do-the-controls-on-the-launchkey-send" target="_blank" rel="noopener">详细介绍</a>)到支持手动操作的MIDI设备的插件。此外，打击垫还将发送固定的Note数据。<br>然而，Garageband本身没有传输、卷或Pan控件，不支持Launchpad的Volume or Pan Control。因此，只能在支持<code>HUI Protocol</code>的<a href="http://us.novationmusic.com/sites/default/files/novation/downloads/10606/launchkey-mk2-daw-setup-guide.pdf" target="_blank" rel="noopener">DAW</a>的DAW，或者选择<code>Ableton Live</code>，Launchpad才能发挥最大的作用。<br><a href="https://support.novationmusic.com/hc/en-gb/articles/207556325-Can-I-use-my-Launchkey-in-Garageband-" target="_blank" rel="noopener">原文</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="作文作曲" scheme="https://huos3203.github.io/categories/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>LaunchPadMini说明书</title>
    <link href="https://huos3203.github.io/2018/06/19/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/LaunchPadMini%E8%AF%B4%E6%98%8E%E4%B9%A6/"/>
    <id>https://huos3203.github.io/2018/06/19/作文作曲/LaunchPadMini说明书/</id>
    <published>2018-06-19T14:23:13.000Z</published>
    <updated>2018-06-19T19:44:09.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://d2xhy469pqj8rc.cloudfront.net/sites/default/files/novation/downloads/9678/launchpad-demo-project-2014.zip" target="_blank" rel="noopener">工程demo</a><br><a href="https://global.novationmusic.com/launch/launchpad-mini/support-downloads" target="_blank" rel="noopener">官方资源</a></p><p>##<br><a href="https://global.novationmusic.com/answerbase/category/launchpad-video-tutorial" target="_blank" rel="noopener">Launchpad几种模式视频教程</a></p><h3 id="硬件设置"><a href="#硬件设置" class="headerlink" title="硬件设置"></a>硬件设置</h3><ol><li>贴纸：确保标签与相应的按钮对齐。</li><li>使用USB连接线将你的Launchpad Mini连接到你的Mac或PC上的USB端口。Ableton Live支持最多6台同时连接的设备。</li><li>配置设备在Ableton Live中的配置</li></ol><ul><li>打开Live偏好设置,选中<code>MIDI/Sync</code>选项卡，在<code>Input</code>中选择Launchpad Mini所连接的端口<br>以及窗口顶部的<code>Output</code>选择器</li><li>在<code>Control Surface</code>控制面板中选择自己的设备。</li><li>在<code>MIDI Ports</code>下，开启 <code>Track</code>和<code>Remote</code>选项.<h2 id="PRODUCT-OVERVIEW-ABLETON-LIVE"><a href="#PRODUCT-OVERVIEW-ABLETON-LIVE" class="headerlink" title="PRODUCT OVERVIEW: ABLETON LIVE"></a>PRODUCT OVERVIEW: ABLETON LIVE</h2><h3 id="Session-模式"><a href="#Session-模式" class="headerlink" title="Session 模式"></a>Session 模式</h3>当选择Launchpad作为活动控制面时，会话视图上会出现一个圆环，用于指示当前由pad矩阵控制的哪个部分。按下一个剪辑启动板，就会在相应的剪辑插槽中触发该剪辑。在没有武装的轨道上点击一个空的剪辑槽将停止在这个轨道上播放的剪辑。如果跟踪是武装到记录，按下按钮记录一个新的剪辑。<br>方向箭头和会话按钮通过在场景和跟踪中导航会话视图，增加了8×8网格的范围。你也可以使用Launchpad Mini的右手边的按钮来触发水平的剪辑(场景)。<h3 id="Session概述"><a href="#Session概述" class="headerlink" title="Session概述"></a>Session概述</h3>黄色:表示当前选定的剪辑块，它将被软件中的戒指所包围。<br>绿色:在那块剪辑中有一些剪辑在播放(虽然那可能不是被选中的剪辑块)。<br>红色:在这个范围内没有剪辑。<br>未激活色:在这个范围内没有音轨或场景。<h3 id="USER-模式"><a href="#USER-模式" class="headerlink" title="USER 模式"></a>USER 模式</h3>User1模式:说明在Lives中的MIDI音轨中可以使用<code>drum racks</code>鼓架(如果没有分配的话)<br>制造)，或在lives的MIDI可分配参数中自由分配Launchpad Mini的按钮。<br>User2模式:说明可以作为一个方便的地方来访问<code>Max for Live</code>预设配置(如果没有学习任务的话)，或者自由地分配给Live中的任何参数。<h2 id="Mixer混合器模式"><a href="#Mixer混合器模式" class="headerlink" title="Mixer混合器模式"></a>Mixer混合器模式</h2>底部的四行垫子提供了对每个轨道的直接访问控制，包括:停止、跟踪激活器、solo和跟踪臂。右下角的四个按钮为每个轨道提供额外的控制:<br>•<code>stop</code>：停止按钮，将停止当前播放的所有剪辑(可通过重新分配功能来避免)<br>•<code>trk on</code>：音轨激活器按钮，将打开所有轨道(非静音)<br>•<code>solo</code>：“独奏”按钮，将不再独奏所有曲目。<br>•<code>arm</code>: “音轨操作臂”按钮,will un-arm all armed tracks<h3 id="THE-VOLUME-PAN-SNDA-SNDB-PAGES"><a href="#THE-VOLUME-PAN-SNDA-SNDB-PAGES" class="headerlink" title="THE VOLUME / PAN / SNDA / SNDB PAGES"></a>THE VOLUME / PAN / SNDA / SNDB PAGES</h3>当Mixer模式激活时，按VOL/PAN/SNDA或SNDB按钮输入卷、PAN或发送页面，其中列的所有八个焊盘变成各自控制的连续轨迹“FADDER”。<br>VOLUME:音量<br>pan:<br>sndA:<br>sndB:<div class="row">    <embed src="https://d2xhy469pqj8rc.cloudfront.net/sites/default/files/novation/downloads/7376/launchpadminiabletonguide_0.pdf" width="100%" height="550" type="application/pdf"></div></li></ul><h3 id="launchPad-APP-for-iOS键盘功能映射"><a href="#launchPad-APP-for-iOS键盘功能映射" class="headerlink" title="launchPad APP for iOS键盘功能映射"></a>launchPad APP for iOS键盘功能映射</h3><h4 id="iPad兼容（Low-Power）vs全功率模式"><a href="#iPad兼容（Low-Power）vs全功率模式" class="headerlink" title="iPad兼容（Low Power）vs全功率模式"></a>iPad兼容（Low Power）vs全功率模式</h4><p>手机端节能模式设置</p><ol><li>在连接USB过程中，同时按住按钮<code>5</code>, <code>6</code>, <code>7</code>和<code>8</code>,开启设置节能</li><li>选择一种电源模式（左为高，右为低），参考pdf图文</li><li>完成设置后，按下绿色按钮退出<blockquote><p>在全功率模式下，Launchpad mini需要使用单独供电的USB集线器与iPad链接，否则无法正常工作。</p><h4 id="键位功能说明"><a href="#键位功能说明" class="headerlink" title="键位功能说明"></a>键位功能说明</h4></blockquote></li><li>F键位：Filters过滤器，8个垫子的每一列都变成一个滤光片:向上移动以除去低音，向下移动以除去高音。按<code>D</code>或<code>E</code>行的垫子重置Filter过滤器。</li><li>G键位：Volume音量，8个垫子的每一层都变成了一个音量调节器。按下<code>B</code>行垫子重置音量。</li><li>H键位：Trigger Sounds &amp; FX<div class="row">    <embed src="https://d2xhy469pqj8rc.cloudfront.net/sites/default/files/novation/downloads/6959/launchpad-mini-gsg-en_0.pdf" width="100%" height="550" type="application/pdf"></div></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="作文作曲" scheme="https://huos3203.github.io/categories/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>AbletonLive10安装使用</title>
    <link href="https://huos3203.github.io/2018/06/19/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/AbletonLive10%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>https://huos3203.github.io/2018/06/19/作文作曲/AbletonLive10安装使用/</id>
    <published>2018-06-19T14:23:13.000Z</published>
    <updated>2018-06-19T19:44:09.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="launchPad"><a href="#launchPad" class="headerlink" title="launchPad"></a>launchPad</h2><p><a href="https://global.novationmusic.com" target="_blank" rel="noopener">设备官网</a></p><p><a href="https://global.novationmusic.com/launch/launchpad-mini/support-downloads" target="_blank" rel="noopener">官方教程资源</a><br><a href="https://intro.novationmusic.com/join-the-dub-side" target="_blank" rel="noopener">官方工程试听资源支持下载</a></p><h2 id="ableton-live-软件"><a href="#ableton-live-软件" class="headerlink" title="ableton live 软件"></a>ableton live 软件</h2><p><a href="https://www.ableton.com/en/trial/" target="_blank" rel="noopener">官网下载</a><br><a href="http://abletive.com" target="_blank" rel="noopener">中国社区</a><br><a href="https://launchpadxm.com/class/ableton-live-10-0-1-suite-破解版下载.html" target="_blank" rel="noopener">ABLETON LIVE 10.0.1 SUITE 破解版下载 WINDOWS &amp; MAC</a><br><a href="http://p27uwfdhv.bkt.clouddn.com/static/soft/Ableton%2010%20KeyGen%20v1.3.0.zip" target="_blank" rel="noopener">ABLETON LIVE10.0.1破解机下载</a></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h3 id="灯光"><a href="#灯光" class="headerlink" title="灯光"></a>灯光</h3><h3 id="工程制作"><a href="#工程制作" class="headerlink" title="工程制作"></a>工程制作</h3><h4 id="MIDI映射"><a href="#MIDI映射" class="headerlink" title="MIDI映射"></a>MIDI映射</h4><h4 id="采样音频"><a href="#采样音频" class="headerlink" title="采样音频"></a>采样音频</h4><h4 id="灯光使用"><a href="#灯光使用" class="headerlink" title="灯光使用"></a>灯光使用</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="作文作曲" scheme="https://huos3203.github.io/categories/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>Git如何永久删除文件(包括历史记录)</title>
    <link href="https://huos3203.github.io/2018/06/12/git/Git%E5%A6%82%E4%BD%95%E6%B0%B8%E4%B9%85%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6(%E5%8C%85%E6%8B%AC%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95)/"/>
    <id>https://huos3203.github.io/2018/06/12/git/Git如何永久删除文件(包括历史记录)/</id>
    <published>2018-06-11T20:32:02.000Z</published>
    <updated>2018-06-11T20:32:02.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>有些时候不小心上传了一些敏感文件(例如密码), 或者不想上传的文件(没及时或忘了加到.gitignore里的),</p><p>而且上传的文件又特别大的时候, 这将导致别人clone你的代码或下载zip包的时候也必须更新或下载这些无用的文件,</p><p>因此, 我们需要一个方法, 永久的删除这些文件(包括该文件的历史记录).</p><p>首先, 可以参考 <a href="https://help.github.com/articles/remove-sensitive-data" target="_blank" rel="noopener">github帮助</a></p><h2 id="步骤一-从资料库中清除文件"><a href="#步骤一-从资料库中清除文件" class="headerlink" title="步骤一: 从资料库中清除文件"></a>步骤一: 从资料库中清除文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git filter-branch --force --index-filter <span class="string">'git rm --cached --ignore-unmatch path-to-your-remove-file'</span> --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure><p>其中, <code>path-to-your-remove-file</code> 是要删除的文件的相对路径(相对于git仓库的跟目录), 替换成你要删除的文件即可.</p><blockquote><p>这里的文件或文件夹，都不能以 ‘/‘ 开头，否则文件或文件夹会被认为是从 git 的安装目录开始。</p><h3 id="删除文件夹"><a href="#删除文件夹" class="headerlink" title="删除文件夹"></a>删除文件夹</h3><p>在 <code>git rm --cached</code> 命令后面添加 <code>-r</code> 命令，表示递归的删除（子）文件夹和文件夹下的文件，类似于 <code>rm -rf</code> 命令:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git filter-branch --force --index-filter <span class="string">'git rm --cached -r --ignore-unmatch path-to-your-remove-folder'</span> --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="支持通配符"><a href="#支持通配符" class="headerlink" title="支持通配符"></a>支持通配符</h3><p>如果当要删除的文件很多, 文件或路径里有中文, 由于MinGW或CygWin对中文路径设置比较麻烦, 你可以使用通配符<em>号, 例如: `sound/music_</em>.mp3<code>, 这样就把</code>sound<code>目录下以</code>music_<code>开头的mp3文件都删除了.使用通配符</code>*`删除目录下的所有文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git filter-branch --force --index-filter <span class="string">'git rm --cached -r --ignore-unmatch path-to-your-remove-folder/*'</span> --prune-empty --tag-name-filter cat -- --all</span><br></pre></td></tr></table></figure></p><p>成功的日志：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Ref <span class="string">'refs/heads/master'</span> was rewritten</span><br><span class="line">Ref <span class="string">'refs/remotes/origin/master'</span> was rewritten</span><br><span class="line">WARNING: Ref <span class="string">'refs/remotes/origin/master'</span> is unchanged</span><br><span class="line">WARNING: Ref <span class="string">'refs/tags/v0.9.0'</span> is unchanged</span><br><span class="line">v0.9.0 -&gt; v0.9.0 (2694a7834dada67cf8768ef27e2d7c3d777f5472 -&gt; 2694a7834dada67cf8768ef27e2d7c3d777f5472)</span><br></pre></td></tr></table></figure></p><p><code>Ref &#39;refs/heads/master&#39; was rewritten</code>:表示成功；<br><code>xxxxx unchanged</code>: 说明在当前分支里没有找到该文件.</p><h2 id="步骤二-推送我们修改后的repo"><a href="#步骤二-推送我们修改后的repo" class="headerlink" title="步骤二: 推送我们修改后的repo"></a>步骤二: 推送我们修改后的repo</h2><h3 id="分支同步"><a href="#分支同步" class="headerlink" title="分支同步"></a>分支同步</h3><p>通过步骤一，需要以强制覆盖的方式推送你的repo, 命令如下:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push --force origin master</span><br></pre></td></tr></table></figure></p><p>这个过程其实是重新上传我们的repo, 比较耗时, 虽然跟删掉重新建一个repo有些类似, 但是好处是保留了原有的更新记录, 所以还是有些不同的. 如果你实在不在意这些更新记录, 也可以删掉重建, 两者也差不太多, 也许后者还更直观些.</p><h3 id="tag同步"><a href="#tag同步" class="headerlink" title="tag同步"></a>tag同步</h3><p>为了能从打了 tag 的版本中也删除你所指定的文件或文件夹，您可以使用这样的命令来强制推送您的 Git tags：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master --force --tags</span><br></pre></td></tr></table></figure></p><h2 id="步骤三-清理和回收空间"><a href="#步骤三-清理和回收空间" class="headerlink" title="步骤三: 清理和回收空间"></a>步骤三: 清理和回收空间</h2><p>虽然上面我们已经删除了文件, 但是我们的repo里面仍然保留了这些objects, 等待垃圾回收(GC), 所以我们要用命令彻底清除它, 并收回空间.</p><p>执行命令，再查看<code>.git</code>目录空间会明显变小:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$ rm -rf .git/refs/original/</span><br><span class="line"></span><br><span class="line">$ git reflog expire --expire=now --all</span><br><span class="line"></span><br><span class="line">$ git gc --prune=now</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Counting objects: 2437, <span class="keyword">done</span>.</span><br><span class="line"><span class="comment"># Delta compression using up to 4 threads.</span></span><br><span class="line"><span class="comment"># Compressing objects: 100% (1378/1378), done.</span></span><br><span class="line"><span class="comment"># Writing objects: 100% (2437/2437), done.</span></span><br><span class="line"><span class="comment"># Total 2437 (delta 1461), reused 1802 (delta 1048)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ git gc --aggressive --prune=now</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Counting objects: 2437, <span class="keyword">done</span>.</span><br><span class="line"><span class="comment"># Delta compression using up to 4 threads.</span></span><br><span class="line"><span class="comment"># Compressing objects: 100% (2426/2426), done.</span></span><br><span class="line"><span class="comment"># Writing objects: 100% (2437/2437), done.</span></span><br><span class="line"><span class="comment"># Total 2437 (delta 1483), reused 0 (delta 0)</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="git" scheme="https://huos3203.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>5个图表解决工作中的12大难题</title>
    <link href="https://huos3203.github.io/2018/06/12/%E9%98%85%E8%AF%BB/5%E4%B8%AA%E5%9B%BE%E8%A1%A8%E8%A7%A3%E5%86%B3%E5%B7%A5%E4%BD%9C%E4%B8%AD%E7%9A%8412%E5%A4%A7%E9%9A%BE%E9%A2%98/"/>
    <id>https://huos3203.github.io/2018/06/12/阅读/5个图表解决工作中的12大难题/</id>
    <published>2018-06-11T19:43:53.000Z</published>
    <updated>2018-06-11T19:43:53.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="导图"><a href="#导图" class="headerlink" title="导图"></a>导图</h2><p><img src="http://www.plantuml.com/plantuml/svg/TP7VIW915CRlvoa6OkaYs253h3M291zasnrtb_OVEjQjHKYabK4M5LIRb7jZ4MLWPhrCisDlqOmJsOLU37pd-yxvSGv37E9YI2y_Xb6SlFJPIPmqpsdd7hYuGA2DTHCNmTVWamTfrZvWJtrwLMCNkt82pAimEQmdHn7RVwNLhd3RhUIv2L8yQ5M63p5zxB7EwJXOc381vwOC93V7T73BQyJVzzqxzz0mgjEzCw7OJaz4INURnJMk0FRDtwqriJ2tii0F28RY8303_t1SIw3K4YcrX8hc_rWeCA0KkWu1siGRiZA5kgKxFk-PT4zsX9AKqLv5nx89c5rsF4kp2GarXC9KfhnLCErDTNs3g8ORb4tJLut0GoMY4yT0ZgTRk8JIIZwZh6QKnJKbdrQMSaekhuQ-jJBU5XZO9xW82m6l-4Vs6gnHfTTlBAg89cd_0000"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="阅读" scheme="https://huos3203.github.io/categories/%E9%98%85%E8%AF%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>执法巡查开发状态总结</title>
    <link href="https://huos3203.github.io/2018/06/05/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E6%89%A7%E6%B3%95%E5%B7%A1%E6%9F%A5%E5%BC%80%E5%8F%91%E7%8A%B6%E6%80%81%E6%80%BB%E7%BB%93/"/>
    <id>https://huos3203.github.io/2018/06/05/个人项目/执法巡查开发状态总结/</id>
    <published>2018-06-05T10:18:33.000Z</published>
    <updated>2018-06-08T12:11:07.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="UML状态图"><a href="#UML状态图" class="headerlink" title="UML状态图"></a>UML状态图</h2><p>使用状态图，查漏补觉，梳理相关业务流程。<br>建议：优化流程，使用流程图（活动图）/时序图来完善流程<br><img src="http://www.plantuml.com/plantuml/svg/TLFBRjfG4DtVh_2wKcZwI1UMsdqMMLLTLLsWs56GeX21fQf2GI02CU5XIaj9moEuWO1QrL25Gi4yViPpVRtY5thjwo13WhsmP-RCwyoC592EH0w6BMDQ9PeASj6AwMJssRmOu5WSAZE4ZiG3YJiK_O8OGizyN3IAqx-meXZZZA4FuA9ZVjMXUMOMKj4eUkwZiLHytO9f2PAjnIIBqsryLyArXFMzOFtCacwSp2j4TVNeXOypVrUiM1fAAUFV5UabIBVqRXUzN0OQzM5y2tAPg1squ-EiPCwSQZ2w0wLdwcUq12GU2svvuNq_xURLzZRtCI18X-ZzamzRMs-y5Q6mv9T4pbjL17a1IxofVy7rAXyGDfZ_w53Fy2oGsSvHsQgae20l9hBqwKHylREOfD4fycQYpapaGUaQUilbmCLGAwttlkPI2hG1pKEwFv1Nu9d02C6b7ivfD2F8AKlzQsTSmPBvETQRkAPIcYZAEhUvUsgg6cXN3y1MkGFZijkTCtuQSWL2w-BsWe9un1kJXXKhXgLWIDmLN4uVzO-uHiSjWfYt2oNTMvn8hkgOkwEwDtWZCiCfVT6ZwMpcsC8uUhi1ngUBhlRibVOApapOFcTDlMysucXDtjJr6epdw76GzWsk5vOwEqKjHl93KBvjTACtGxIvLTPmlWNA3KDxIsHJtlEVlBL3C0eUHA67H8TgJ7FCa_xOP-9Sfp7AG25lt-Bbp6oElUH3CGlDDZJxLb76ZI5C5BJ6dxkLzDaNZoKnn1q4W_I3xFEeNTktnnJ_0G00"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="个人项目" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>uml活动图常用语法</title>
    <link href="https://huos3203.github.io/2018/06/05/hexo/uml%E6%B4%BB%E5%8A%A8%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/06/05/hexo/uml活动图常用语法/</id>
    <published>2018-06-04T21:27:15.000Z</published>
    <updated>2018-06-04T21:27:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">start</span><br><span class="line">:ClickServlet.handleRequest();</span><br><span class="line">:new page;</span><br><span class="line">if (Page.onSecurityCheck) then (true)</span><br><span class="line">:Page.onInit();</span><br><span class="line">if (isForward?) then (no)</span><br><span class="line">:Process controls;</span><br><span class="line">if (continue processing?) then (no)</span><br><span class="line">stop</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">if (isPost?) then (yes)</span><br><span class="line">:Page.onPost();</span><br><span class="line">else (no)</span><br><span class="line">:Page.onGet();</span><br><span class="line">endif</span><br><span class="line">:Page.onRender();</span><br><span class="line">endif</span><br><span class="line">else (false)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">if (do redirect?) then (yes)</span><br><span class="line">:redirect process;</span><br><span class="line">else</span><br><span class="line">if (do forward?) then (yes)</span><br><span class="line">:Forward request;</span><br><span class="line">else (no)</span><br><span class="line">:Render page template;</span><br><span class="line">endif</span><br><span class="line">endif</span><br><span class="line">stop</span><br></pre></td></tr></table></figure><p><img src="http://www.plantuml.com/plantuml/svg/NL6xZiCW4Epv2agxoGSunHMHShekIhu0mJX6uS2tkqwKlpzZJ5uDiBipEwE1nP2eRXUylPn0rm3P32QwW2F-9h0qxLPr4JSzcZEsolUwESolJOeds8cyt7S3xANLCY3gHcX2gxeLyXFziY2pFEyJtGovhugDAICfMJ1hcw9G2bp0kV9nWXxBsCVp6uqbZGhH-Lwjom-9vG6vWvycyYIRG61KqJBvHXaiUshpE9UWPx_GUZDVxQkaIvhWFC5-wjPsDL-aAwd_IA5mrcpcbKlgRswBe-K3jE1t34RmSBUSEOv_"></p><p>title <code>uml模型图题目支持MD</code><br>center header<br><code>在此处添加标头</code><br>endheader<br>start ‘开始’<br>‘&gt;&gt;&gt;&gt;&gt; 活动关系模块 支持嵌套，条件/循环/并行&gt;&gt;&gt;&gt;&gt;&gt;’<br>if(<code>环境条件</code>) then (<code>分流线名</code>)<br>:<code>分支1活动</code>;<br>-[<code>颜色</code>]-&gt; <code>线备注</code>;<br>note left<br><code>活动备注</code><br>end note<br>elseif(<code>分流线名</code>)<br>:<code>分支2活动</code>;<br>else (<code>分流线名</code>)<br>:<code>分支3活动</code>;<br>endif</p><p>repeat<br>:<code>循环活动</code>;<br>repeat while (<code>环境条件</code>)</p><p>while (<code>环境条件</code>)<br>:<code>循环活动</code>;<br>endwhile</p><p>fork<br>:<code>并行活动</code>;<br>fork again<br>:<code>并行活动</code>;<br>end fork</p><p>‘&amp;&amp;&amp;&amp;&amp; 活动图组合模块 &amp;&amp;&amp;&amp;&amp;&amp;’<br>partition <code>活动组名</code>{<br>:<code>单元活动名称</code>;<br>}</p><p>|<code>#颜色</code> | <code>泳道名称</code>|<br>:<code>当前泳道活动</code>;</p><p>stop ‘结束／end关键字’<br>center footer<br><code>在此处添加脚注</code><br>endfooter</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="uml" scheme="https://huos3203.github.io/categories/uml/"/>
    
    
  </entry>
  
  <entry>
    <title>uml用例图常用语法</title>
    <link href="https://huos3203.github.io/2018/06/05/hexo/uml%E7%94%A8%E4%BE%8B%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/06/05/hexo/uml用例图常用语法/</id>
    <published>2018-06-04T21:20:41.000Z</published>
    <updated>2018-06-04T21:27:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">:Main Admin: as Admin</span><br><span class="line">(Use the application) as (Use)</span><br><span class="line"></span><br><span class="line">User -&gt; (Start)</span><br><span class="line">User --&gt; (Use)</span><br><span class="line"></span><br><span class="line">Admin ---&gt; (Use)</span><br><span class="line"></span><br><span class="line">note right of Admin : This is an example.</span><br><span class="line"></span><br><span class="line">note right of (Use)</span><br><span class="line">A note can also be on several lines</span><br><span class="line">end note</span><br><span class="line"></span><br><span class="line">note &quot;This note is connected\nto several objects.&quot; as N2</span><br><span class="line">(Start) .. N2</span><br><span class="line">N2 .. (Use)</span><br></pre></td></tr></table></figure><p>效果图<br><img src="http://www.plantuml.com/plantuml/svg/NKyn3eCm3DppYXCJ36LWPAZ40yhITkjYm2sfWeEIgEhpcmJKIfMYv7ntFiVjYRIWcnOjBSXlI9LNpmWpWzRLw962jb8bEGcLKl5sE1nHdWEvKErr8ZOzfqJYnuWD3ASVSu2zRrFGuZ9hZtX8m6zQLiFrltNhxv3PCHh9U8k1OGMUN-p8m6XXhrYcxDeJYXoUONn7Ay9ZuEacmNuRxV2CfA-Bj5lVg7qVr7Mg-YQ1_84F"></p><p>title <code>uml模型图题目支持MD</code><br>center header<br><code>在此处添加标头</code><br>endheader</p><p>‘<strong><em>*</em></strong>  声明用例模块 usecase <strong><em>*</em></strong>‘<br>(<code>用例名称</code>) as (<code>别名</code>) &lt;&lt;<code>构造类型</code>&gt;&gt;</p><h2 id="usecase-用例名称-as-“-描述一"><a href="#usecase-用例名称-as-“-描述一" class="headerlink" title="usecase 用例名称 as “ 描述一"></a>usecase <code>用例名称</code> as “ <code>描述一</code></h2><h1 id="描述2"><a href="#描述2" class="headerlink" title="描述2"></a><code>描述2</code></h1><p><code>描述3</code><br>.. <code>描述标题</code> ..<br><code>描述4</code><br>“<br>‘<strong><em>*</em></strong>  声明角色模块 actor <strong><em>*</em></strong>‘<br>:<code>角色名称</code>: as <code>别名</code><br>actor <code>角色名称</code></p><p>‘—- 声明备注:用例线备注可以当做用例来参与到关系连接中—‘<br>note “<code>备注内容</code>“ as <code>备注对象</code></p><p>‘#####  备注模块 位置：left/right/top/bottom  #####’<br>note <code>位置</code>  of <code>用例/角色</code>: <code>描述信息</code></p><p>‘&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;  关系模块  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;’<br>left to right dirction  ‘指定布局方向’<br><code>角色</code> –&gt; <code>用例</code>:<code>关系线描述</code></p><p>‘—- 用例关系中的备注对象 —-‘<br><code>角色</code> –&gt;<code>备注对象</code><br><code>备注对象</code> –&gt;<code>用例</code></p><p>center footer<br><code>在此处添加脚注</code><br>endfooter</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="uml" scheme="https://huos3203.github.io/categories/uml/"/>
    
    
  </entry>
  
  <entry>
    <title>uml类图常用语法</title>
    <link href="https://huos3203.github.io/2018/06/05/hexo/uml%E7%B1%BB%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/06/05/hexo/uml类图常用语法/</id>
    <published>2018-06-04T20:49:36.000Z</published>
    <updated>2018-06-04T21:27:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class BaseClass</span><br><span class="line">namespace net.dummy #DDDDDD &#123;</span><br><span class="line">.BaseClass &lt;|-- Person</span><br><span class="line">Meeting o-- Person</span><br><span class="line">.BaseClass &lt;|- Meeting</span><br><span class="line">&#125;</span><br><span class="line">namespace net.foo &#123;</span><br><span class="line">net.dummy.Person &lt;|- Person</span><br><span class="line">.BaseClass &lt;|-- Person</span><br><span class="line">net.dummy.Meeting o-- Person</span><br><span class="line">&#125;</span><br><span class="line">BaseClass &lt;|-- net.unused.Person</span><br></pre></td></tr></table></figure><p>效果图：<br><img src="http://www.plantuml.com/plantuml/svg/Iyv9B2vMS4eiJdK6iRZo4dDJYmiIarCLyb9Bz59AStCh5PHTm42XcaiFhb31faPNLo4WjQWuFu_BDpMr93ClNI4V8OIgKW6gWgiMpOAq_7oWiN2hz22wmLgm6WGNHcZ1Odaj5vecaEhIlDBYr1Ie3G00"></p><p>title <code>uml模型图题目支持MD</code><br>center header<br><code>在此处添加标头</code><br>endheader</p><p>‘<strong><em>*</em></strong> 类声明模块 <strong><em>*</em></strong>‘<br>‘类型:class,abstract,interface,annotation,enum’<br>‘访问域:(-)私有,(#)保护,(~)包私有,(+)公有’</p><p>class <code>类名</code>&lt;<code>扩展对象</code>&gt; as <code>类别名</code>{<br>– <code>属性组名</code> – ‘分隔符–,..,==,<strong>‘<br><code>访问域修饰符</code> <code>static/abstract</code> <code>属性名称</code>:<code>类型</code> = <code>值1</code></strong> <code>函数组名</code> __<br><code>访问域修饰符</code> func <code>函数名称</code>(<code>参数1</code>:<code>类型</code>,<code>参数2</code>:<code>类型</code>)<br>}<br>‘显示/隐藏类,类方法属性等 关键字支持class,interface,enum’<br>hide <code>类名/方法名</code></p><p>‘—- 声明类关系线备注,可以当做用例来参与到关系连接中 —‘<br>note “<code>备注内容</code>“ as <code>备注对象</code></p><p>‘多行备注对象’<br>note as <code>备注对象</code><br>“<code>备注内容</code>“<br>end note</p><p>‘###### 类备注模块 类声明末尾使用:note 位置: 备注#########’<br>note <code>left/right/top/bottom</code> of <code>object</code> #<code>颜色</code><br><code>支持markdown语法加粗／斜体／删除线／下划线／波浪下划线 和HTML</code><br>end note</p><p>‘&amp;&amp;&amp;&amp;&amp;&amp; 类组合模块 类模块 &amp;&amp;&amp;&amp;&amp;&amp;&amp;’<br>‘六种组合样式:Node,Rectangle,Folder,Frame,Cloud,Database’<br>scale  <code>750</code> <code>width/height</code><br>package <code>module名</code> &lt;&lt;<code>模块样式</code>&gt;&gt; <code>#背景色</code>{<br>class <code>类名</code>&lt;<code>扩展对象</code>&gt; as <code>类别名</code>{<br>– <code>属性组名</code> – ‘分隔符–,..,==,<strong>‘<br><code>访问域修饰符</code> <code>static/abstract</code> <code>属性名称</code>:<code>类型</code> = <code>值1</code></strong> <code>函数组名</code> __<br><code>访问域修饰符</code> func <code>函数名称</code>(<code>参数1</code>:<code>类型</code>,<code>参数2</code>:<code>类型</code>)<br>}<br>}</p><p>‘@@@@@@@ 命名空间模块 关系模块  @@@@@@@@’<br>namespace <code>com.cn</code> #<code>空间背景色</code>{</p><p>‘关系节点符:(|&gt;)继承,(*)合成 ,(o)聚合, 其他#,x,},+,^ 连线符:(–)实线 ，(..)虚线’<br><code>类名/包名</code>“<code>基数</code>“ <code>节点符</code> <code>left/right..``[#线色]</code>-<code>节点符</code> “<code>基数</code>“<code>类名/包名</code>:<code>消息</code> &gt;<br>note <code>left/right/top/bottom</code> on link #<code>颜色</code><br><code>连接注释体</code><br>end note}</p><p>‘&gt;&gt;&gt;&gt;&gt;&gt; 类关系图及连接备注模块 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;’<br>‘关系节点符:(|&gt;)继承,(*)合成 ,(o)聚合, 其他#,x,},+,^ 连线符:(–)实线 ，(..)虚线’<br><code>类名/包名</code>“<code>基数</code>“ <code>节点符</code> <code>left/right..``[#线色]</code>-<code>节点符</code> “<code>基数</code>“<code>类名/包名</code>:<code>消息</code> &gt;<br>note <code>left/right/top/bottom</code> on link #<code>颜色</code><br><code>连接注释体</code><br>end note</p><p>center footer<br><code>在此处添加脚注</code><br>endfooter</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="uml" scheme="https://huos3203.github.io/categories/uml/"/>
    
    
  </entry>
  
  <entry>
    <title>在Mac安装Fiddler</title>
    <link href="https://huos3203.github.io/2018/06/01/%E5%B7%A5%E5%85%B7/%E5%9C%A8Mac%E5%AE%89%E8%A3%85Fiddler/"/>
    <id>https://huos3203.github.io/2018/06/01/工具/在Mac安装Fiddler/</id>
    <published>2018-05-31T16:38:52.000Z</published>
    <updated>2018-06-01T10:07:54.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="安装Mono"><a href="#安装Mono" class="headerlink" title="安装Mono"></a>安装Mono</h3><p>Mac下需要使用.Net编译后的程序，首先需要用到跨平台的方案<code>Mono</code>(现阶段微软已推出跨平台的方案.Net Core，不过暂时只支持控制台程序)。<br><a href="http://www.mono-project.com/download/stable/#download-mac" target="_blank" rel="noopener">下载地址</a></p><h3 id="配置Mono环境"><a href="#配置Mono环境" class="headerlink" title="配置Mono环境"></a>配置Mono环境</h3><ol><li>下载证书<br>从Mozilla LXR上下载所有受信任的root证书，存于Mono的证书库里。root证书能用于请求https地址：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$cd /Library/Frameworks/Mono.framework/Versions/&lt;mono version&gt;/bin/</span><br><span class="line">$./mozroots --import --sync</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>./mozroots命令失效，./cert-sync新命令，暂时不知道怎么使用</p><ol><li>配置Mono环境变量</li></ol></blockquote><p>在<code>.bash_profile</code>中加入如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MONO_HOME=/Library/Frameworks/Mono.framework/Versions/5.0.1</span><br><span class="line">export PATH=$PATH:$MONO_HOME/bin</span><br></pre></td></tr></table></figure></p><h2 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h2><p><a href="http://docs.telerik.com/fiddler/Configure-Fiddler/Tasks/InstallFiddler" target="_blank" rel="noopener">官方文档</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载<a href="https://www.telerik.com/download/fiddler" target="_blank" rel="noopener">Fiddler-mac.zip</a>压缩包，解压到非中文字符的路径下。</p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>打开Terminal，进入到刚才解压的Fiddler路径，执行命令运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mono Fiddler.exe</span><br></pre></td></tr></table></figure></p><p><a href="http://www.cocoachina.com/apple/20170704/19729.html" target="_blank" rel="noopener">参看</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="工具" scheme="https://huos3203.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://huos3203.github.io/2018/05/31/hexo/hexo%E5%8D%9A%E6%96%87%E7%BD%AE%E9%A1%B6%E6%96%B9%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/05/31/hexo/hexo博文置顶方法/</id>
    <published>2018-05-31T11:44:33.000Z</published>
    <updated>2018-05-31T12:10:07.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>修改 <code>hero-generator-index</code> 插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line"><span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">                <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">    <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">        perPage: config.index_generator.per_page,</span><br><span class="line">        layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">        format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            __index: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>在文章中添加 <code>top</code> 值，数值越大文章越靠前:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 解决Charles乱码问题</span><br><span class="line">date: 2017-05-22 22:45:48</span><br><span class="line">tags: 技巧</span><br><span class="line">categories: 技巧</span><br><span class="line">copyright: true</span><br><span class="line">top: 100</span><br></pre></td></tr></table></figure></p><p>转：<a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>+0800格式转NSDate</title>
    <link href="https://huos3203.github.io/2018/05/31/iOS/+0800%E6%A0%BC%E5%BC%8F%E8%BD%ACNSDate/"/>
    <id>https://huos3203.github.io/2018/05/31/iOS/+0800格式转NSDate/</id>
    <published>2018-05-30T18:42:20.000Z</published>
    <updated>2018-05-30T18:42:20.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *timstr = [resData objectForKey:<span class="string">@"Data"</span>];</span><br><span class="line">timstr = [timstr stringByReplacingOccurrencesOfString:<span class="string">@"/Date("</span> withString:<span class="string">@""</span>];</span><br><span class="line">timstr = [timstr stringByReplacingOccurrencesOfString:<span class="string">@"+0800)/"</span> withString:<span class="string">@""</span>];</span><br><span class="line">model.time = [<span class="built_in">NSDate</span> dateWithTimeIntervalSince1970:timstr.longLongValue/<span class="number">1000</span>];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="iOS" scheme="https://huos3203.github.io/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>高德地图API使用</title>
    <link href="https://huos3203.github.io/2018/05/30/iOS/%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BEAPI%E4%BD%BF%E7%94%A8/"/>
    <id>https://huos3203.github.io/2018/05/30/iOS/高德地图API使用/</id>
    <published>2018-05-30T14:40:56.000Z</published>
    <updated>2018-05-30T18:42:20.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="引入头文件"><a href="#引入头文件" class="headerlink" title="引入头文件"></a>引入头文件</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;AMapFoundationKit/AMapFoundationKit.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;AMapLocationKit/AMapLocationKit.h&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *strKey = <span class="string">@"2d8a96d668576584acebf2bab0ba0c08"</span>;<span class="comment">//默认值</span></span><br><span class="line"><span class="comment">//配置里面取值</span></span><br><span class="line"><span class="built_in">NSString</span> *strBundleKey = [[<span class="built_in">NSBundle</span> mainBundle] infoDictionary][<span class="string">@"IOSPostionkey"</span>];</span><br><span class="line"><span class="keyword">if</span> (strBundleKey) &#123;</span><br><span class="line">    strKey = strBundleKey;</span><br><span class="line">&#125;</span><br><span class="line">[AMapServices sharedServices].apiKey = strKey;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 带逆地理信息的一次定位（返回坐标和地址信息）</span></span><br><span class="line"><span class="keyword">self</span>.GaodelocationManager = [[AMapLocationManager alloc] init];</span><br><span class="line">[<span class="keyword">self</span>.GaodelocationManager setDesiredAccuracy:kCLLocationAccuracyHundredMeters];</span><br><span class="line"><span class="comment">//   定位超时时间，最低2s，此处设置为2s</span></span><br><span class="line"><span class="keyword">self</span>.GaodelocationManager.locationTimeout =<span class="number">10</span>;</span><br><span class="line"><span class="comment">//   逆地理请求超时时间，最低2s，此处设置为2s</span></span><br><span class="line"><span class="keyword">self</span>.GaodelocationManager.reGeocodeTimeout = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//设置不允许系统暂停定位</span></span><br><span class="line">[<span class="keyword">self</span>.GaodelocationManager setPausesLocationUpdatesAutomatically:<span class="literal">NO</span>];</span><br><span class="line"><span class="comment">//    //设置允许在后台定位</span></span><br><span class="line"><span class="comment">//    [locationManager setAllowsBackgroundLocationUpdates:YES];</span></span><br><span class="line"><span class="comment">//设置允许连续定位逆地理</span></span><br><span class="line">[<span class="keyword">self</span>.GaodelocationManager setLocatingWithReGeocode:<span class="literal">YES</span>];</span><br><span class="line"><span class="comment">//    [locationManager setDelegate:self];</span></span><br><span class="line"><span class="comment">// [self.locationManager startUpdatingLocation];</span></span><br><span class="line"><span class="comment">//    // 带逆地理（返回坐标和地址信息）。将下面代码中的 YES 改成 NO ，则不会返回地址信息。</span></span><br><span class="line">[<span class="keyword">self</span>.GaodelocationManager requestLocationWithReGeocode:<span class="literal">YES</span> completionBlock:^(<span class="built_in">CLLocation</span> *gaodeLocation, AMapLocationReGeocode *regeocode, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (gaodeLocation==<span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"高德没有返回地理位置,使用苹果官方定位经纬度"</span>);</span><br><span class="line">        [<span class="keyword">self</span> GetGISInfoByByLocationWithjingdu:jingdu AndWeidu:weidu];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (error)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"locError:&#123;%ld - %@&#125;;"</span>, (<span class="keyword">long</span>)error.code, error.localizedDescription);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (error.code == AMapLocationErrorLocateFailed)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"AMapLocationErrorLocateFailed高德没有返回地理位置,使用苹果官方定位经纬度"</span>);</span><br><span class="line">            [<span class="keyword">self</span> GetGISInfoByByLocationWithjingdu:jingdu AndWeidu:weidu];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"使用高德location:%@"</span>, gaodeLocation);</span><br><span class="line">    <span class="built_in">NSString</span> * gaodeWeidu =  [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.9f"</span>,gaodeLocation.coordinate.latitude];</span><br><span class="line">    <span class="built_in">NSString</span> * gaodeJingdu =  [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.9f"</span>,gaodeLocation.coordinate.longitude];</span><br><span class="line">    <span class="keyword">if</span> (regeocode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"reGeocode:%@"</span>, regeocode);</span><br><span class="line">        <span class="keyword">self</span>.theRealAdress = regeocode.formattedAddress;</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span> GetGISInfoByByLocationWithjingdu:gaodeJingdu AndWeidu:gaodeWeidu];</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="iOS" scheme="https://huos3203.github.io/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>npm降级的两种方法</title>
    <link href="https://huos3203.github.io/2018/05/29/hexo/npm%E9%99%8D%E7%BA%A7%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/05/29/hexo/npm降级的两种方法/</id>
    <published>2018-05-29T12:06:24.000Z</published>
    <updated>2018-05-29T12:26:48.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="方法一：简单暴力"><a href="#方法一：简单暴力" class="headerlink" title="方法一：简单暴力"></a>方法一：简单暴力</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm@4 -g</span><br></pre></td></tr></table></figure><h3 id="方法二：nvm工具"><a href="#方法二：nvm工具" class="headerlink" title="方法二：nvm工具"></a>方法二：nvm工具</h3><p>nvm是node版本管理工具</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure><p>装nvm之前，建议把现有的所有nodejs版本全部删除，以后就让nvm全权管理就好了。保存着旧的node反而容易造成版本管理的困难。</p><p>官网nvm安装指南：<a href="https://github.com/creationix/nvm#installation" target="_blank" rel="noopener">https://github.com/creationix/nvm#installation</a></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>nvm有了后，直接装对应版本的node，会安装对应版本npm。<br>如：node 8 对应 npm v5，node 7 对应 npm v4<br>如果需要npm v5, 则<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install 8</span><br><span class="line">nvm use 8</span><br></pre></td></tr></table></figure></p><p>如果需要npm v4了，装上node 7就可以了<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install 7</span><br><span class="line">nvm use 7</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="hexo" scheme="https://huos3203.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>终端实现预览plantuml的插件</title>
    <link href="https://huos3203.github.io/2018/05/29/shell/%E7%BB%88%E7%AB%AF%E5%AE%9E%E7%8E%B0%E9%A2%84%E8%A7%88plantuml%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>https://huos3203.github.io/2018/05/29/shell/终端实现预览plantuml的插件/</id>
    <published>2018-05-29T11:32:04.000Z</published>
    <updated>2018-06-01T10:07:54.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><div id="badge-container-weirongxu-plantuml-previewer.vim-bf4b3e5" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-weirongxu-plantuml-previewer.vim-bf4b3e5", "weirongxu", "plantuml-previewer.vim", "bf4b3e5", false);</script><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Plug <span class="string">'huos3203/plantuml-syntax'</span>  <span class="string">"plantuml语法高亮 Plug 'aklt/plantuml-syntax'</span></span><br><span class="line"><span class="string">Plug 'tyru/open-browser.vim'</span></span><br><span class="line"><span class="string">Plug 'weirongxu/plantuml-previewer.vim' "</span>在线工具：http://sujoyu.github.io/plantuml-previewer/</span><br></pre></td></tr></table></figure><h3 id="Graphviz"><a href="#Graphviz" class="headerlink" title="Graphviz"></a>Graphviz</h3><p><a href="https://www.graphviz.org/download/" target="_blank" rel="noopener">下载地址</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install graphviz</span><br></pre></td></tr></table></figure></p><h3 id="打开浏览器safari插件工具"><a href="#打开浏览器safari插件工具" class="headerlink" title="打开浏览器safari插件工具"></a>打开浏览器safari插件工具</h3><p>open-browser.vim</p><h3 id="语法高亮插件"><a href="#语法高亮插件" class="headerlink" title="语法高亮插件"></a>语法高亮插件</h3><p>aklt/plantuml-syntax (vim syntax file for plantuml)</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="创建uml文件"><a href="#创建uml文件" class="headerlink" title="创建uml文件"></a>创建uml文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi test.uml</span><br></pre></td></tr></table></figure><img title="历史下载" src="http://p27uwfdhv.bkt.clouddn.com/static/images/plantumlpreviewer.png?imageMogr2/2/w/800"><h3 id="预览uml图"><a href="#预览uml图" class="headerlink" title="预览uml图"></a>预览uml图</h3><p>通过命令打开浏览器预览界面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:PlantumlOpen</span><br></pre></td></tr></table></figure></p><p>在vi中执行保存命令<code>:w</code>,预览界面会自动刷新</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="shell" scheme="https://huos3203.github.io/categories/shell/"/>
    
    
  </entry>
  
  <entry>
    <title>GB乐理知识体系</title>
    <link href="https://huos3203.github.io/2018/05/29/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/GB%E4%B9%90%E7%90%86%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    <id>https://huos3203.github.io/2018/05/29/作文作曲/GB乐理知识体系/</id>
    <published>2018-05-29T11:32:04.000Z</published>
    <updated>2018-06-11T19:43:53.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="使用puml来梳理乐理知识点"><a href="#使用puml来梳理乐理知识点" class="headerlink" title="使用puml来梳理乐理知识点"></a>使用puml来梳理乐理知识点</h2><p>相关概念<br><img src="http://www.plantuml.com/plantuml/svg/RLBRJi9047tVhzWVQ7Wdn7yXKAC9WGHuKn94BWeKQWA90KtZ3KZmmgL6MxdyJBVRFlaBpZ354lHfPiwPEMSok_dZV4hbZgLBlIeCMzuLfV7alLLboNBlvm2oX9hEgrb-fCQJQfRvnPwthZdB6z5VKOCxA8dr-_UYwNPD57aqlVAL_z1oUoPJqybWBf6AvtBSD-OdZ7EtEFJCKHHBY008xSoncyAQYzkQM3K00KheMWI2_2fZHsK4UKHeTGZ4o-T1b0BoaxPNBqNSXYRQ7wmG-e513C81-d9_VEqiMvY9XIqMqmtMNKlZ9LJQ35tEG2CK0IQsjoC91di5avpMsrROVb7TfVlzFQ0o3e5VmpqdCd8-p_tEArCKx1vE56M3Oc4FjobSZ6GxKqmBZ9Hvx5HH_joORaCStZIeCrJYGdJy_wUtt-8mau70TZyGlZh1Fm00"></p><p><img src="http://www.plantuml.com/plantuml/svg/TLBBJi905DtFLtIf2HjG9A4hnSTt42bg993KVW0eBu4A9A0HD0rgi55H23LAAV0plTEouXUSwGY2ukxEEVUSU-xCI4TIHE3CNiagfV5xmbBpK1zEZ2pM-f1JdVeSxGjHIH2vGo4O4aGqZjViKSOSt10MttMfi7aAe_U9KS1LZHpXGREJvV7z1QvfI8Y6ldKdKb2Ka7-iT6rDvL4u9XuZFnWw61sU57B2r0lGwy9j1eRvAK-wBVsHHz6O970H8ImXjyVyV6BmnAWXAigcpLxU_8nRjQJRWryQ-B97mxmLcIdfD0SovVj9ceUZPiZl8pxMzM1SUVLIntwPL6mi5pm87aMTuL2IIRZ0zixktkRM8WkL3cFTdhLrxuRlZvQCerht2hIBqBfY0LPT0OyhiEOAhFDE5cVD1M5rP2ajdZcyD6SNbLBdWMatMtyP0_NwVqpg-Jz6Ja2gDKVE4ZffrFbdmTNsBx7UTB2PXgQhMFh8RdUcEZjtYlFoeeu0KFnOnEpssL9CKURzVwhf5mt7oDEAYFrdK7Ih4QTT3Fu2"></p><p><img src="http://www.plantuml.com/plantuml/svg/VPFBJi9058RtynHTDn8lb0t4XQA-1v6A90GCzW6g0WeMHOCneSGB4crCH8mrZXNbPMPwMV4Adg6bfKPPTURCEV__pT-Cb9Lo8aS-6bQZOhxjMTenLRz7WoDJ_wGrRRokeaqnBub5RbjCfSKYSkIMFJmaNsquDJklRF1-dmxVHWF5lD1XIxkwNJfpxaxCbex4VDgRYplNhw2VGBixkQmqtfeN_GJA5oIHoubR4d8R27uYk4lm8sp9nx5pgLigfkyzHCiQbEYvGkirrjegmRobzX3FkrhBJhC7d_abdcU-75DstRXK9fNDepWrxWFFOZQpBI7VYxOrOZGjOsZtNmYksUyQT2DREQ2gJYjbiohJ-WqS4tp2c7nttuajWhknA1jr_xQqeO1So3afH99275d6Cy4o77g9aA_w0gYxjK0zxlSbmdSYXX8KmQX_Ega4oQuBaGrXpjVd-KKM4dCPj_wNLlSX9ELZhmaJLco0rdJSGGXXI5pz3UbL0iWLo2Fc2VDyTDPl1B3fSHziFGIsz3VOBorLdIQ3b2ULW2p9uXiDMXEss2ospbL8m6NR42Ah8RReFsnJI-_PRHMWfOZSDqgl3UjMPbrk-GS0"><br><img src="http://www.plantuml.com/plantuml/svg/lLNTKjf05BxFKt2T6-_jfHTz3gP6POR13iq3f0eI_gcYA6AfhGYZLL6Y1fBemtJFRdBbA_HiDec9uFIkCmopUyxkTxxzphSRDQDcbHIPjbXhXzv_PQCg73-zs3erBAYC_75P-gJaL2MVsb3IgqfUyhIk-rmYJW-pzEU4RppVWkVx5xj6zmsSmfdX5hvvlngqQqXARZNOj-oEjy5kVf1ocwgIoYfhgaGh5RSwWEaTCUlGgdcNXyHfi6x1wq_OR8Y0S6mmQv-O6Z4ls6W2rrtC4lCAdhUZDHAjbN65oF4edg4uOHEBMGLcbTpxHteouEJq5Z5d_duEHtjbsfiHPmzN_j6sED4KPoPz-PpDg89jln-mpMVMDrJfjN2t4B64Llt5xgx0sH1tO9cFOiIkoWdKvMXpN01sRCAiBOGHYDWARziXrY1Q3xO6mohL3rojoAmzUjBdmA8BWYIjbV3qqBwLvTNDh2mdD18yVvzpfQ3uG9mZCOVU28LZnM5m35yoBhc-0_ebROpOTGUUEb2QBLIdTC4A3p1k8eFuWQ0Lo4AcLQzZO7K1BA56iWp54TGh_5_y_B4inrHAXv117M9QlcJ-D9LUJsToF5Xv9twrA5Y5s-_pyOL1NFmUI5YHSnNaad3-CR7tI_EY16Bvle3TMboxg3reIhTaSAc9i_FQ--OXr0vuLsviJ6F4EtmGfMXxYbdULK_xWTx6taO-eeM-EonJdTSHLol10Nk11WlDOkt1-4cAamhpsNIKJlO_F7GSD75J_cs3EISaRB2o09FUdUAT9PP5d7sebvQyepeq7pbqUFMWFY5MaTfj63JPaUErhmM9EVV-P_TWyzvOvnqJYVw-VI7zhYBmcwSFz75yAfJsRtaeFctiWjwX1rFSBru_zsOGVsomME9olz8AdlorJGpd9V5zWFwCdMfyaGZ_1G00"></p><h2 id="五度圈"><a href="#五度圈" class="headerlink" title="五度圈"></a>五度圈</h2><p><img src="http://www.plantuml.com/plantuml/svg/hLNVJzDG57w_VyLzrWu3BZ7fWycwjdlH5taqFb3NoHAocJ7ZQmDZJA0m5uooZU0KDiEFWO9OomR_2_QstHF_WkVsjck11y6GPTlfFT_tdNE-UtTNp1QdL6oPgyHiasRbebSX2nlkRD-Btw4fDLF4a-f4MYsWWLPtp-QjVfCqJkqlXqwrRBTdoDdFYzwI_U487idcaLjwF_YwRDUFqEYOPMmFDWulUdKl9BKbqci3rdjo3sPjhOD6Hx2xNoQL7SlGINK9LidABy2GlK-a-SsfbuW-xtOFOF71O4rd4HeRmKwhIxfr1hUCHG1QnYoLdTzsIiTGrJ4xiEYSbEnAbJLXdInRnWd4fAUHpkAWPLg6Pd_k0OpYTzlt1rgPpEr5bz33e1HzhfUOFDdiU9KNe4K8B6EFDhhwdLHrg0CSc2hQ3iEp5jpzBP22IgmuAUlG2AiAOxjdQupeD0moTxKYACFeqPLXNUjqtTvjMOO9LSwrfZo1nVmK7eVtCnK_cS1FitWyUwwjqwrQt_BTyrePIlpHPf2QI_jx_VpU2nnBvz_cOezn4YLnxCrhY5AyO-wpivBaH4xYP2v5apvGfcdIQ8Hf9FlCPCW43fVW12w9Kj4aumKf8KPF7kIaC0VhL1L9E5R8lfgaMI6KzPgXR2GnrKJ832CVXH8C8uNyCF8wy2hvA37a-paaHchuVDyF41UZTZ5UO5OmiXWI_P51L1uwAIWXLVRoWd8jxTSL52vmMr02X1GH628K92c1hvSa92KmpuFu6eceHW1HK6Ae8KKr4afWcmVnDSIeHW1Ha3ZKI4GrH2Nma4B2SnMFYFWOEOxaE0vKnAYA7EU6dYfHb12H2K1824yJgnFO6hWQHm9Fhusg3jyjq_vuFAXL7bbztUbt8ONPpuUVpYAPdqvdfk6LXW_O33uH1pjvCGw6yAauZCGdQTjyIa6vV575Nc6Spy0v8Yi_tDeCsTov7hYLcjtK_mbWajw5JHKL_fOCwTOCGRbHsrTc5Uzirg5awkubfV-Hl6mFR3U-fQCoVwKDE2mtq7Yfvefg0MVom2qWwtUL_Xblc4vBerSwM_uB"></p><p><img src="http://www.plantuml.com/plantuml/svg/AyaioKbLUBPWujEzYvxldlniNWjNScfUIMgHGaPgOafg4HUo52usLsfU2bGvbqDnIM9HIN5YJWbNDPS245I7W2aGq5O8po_AIK7mjHKSSrEBCfCJaOIq5PmJyn9JK8L2WnsH-TeAVgdb2f7vHTceeaxvnINvUIWwVLChCfFpaQrqBItABqX5KUHPafXJYIBYdbgKcvXNYMPyQb5EPXwAyzFWhg_bgkLo00O4sElGC4pBpoz12qDGM4640G00"></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p><img src="http://www.plantuml.com/plantuml/svg/AyaioKbLUB5mnRC5UxYIK_DAKeiKCb8JKrABkA22gNafK04kX-AInAAIuiIS4gvgPIu5LA2dK0CadVDpIdFp58mKG3mennYiD2Y_76goWY5OQLbYJcaga0rM2k4OeQiq0ievAkJavwKh9AVcv81KQd7LSZa07GLs1ip9QVdv9IXEXWW00000"></p><h2 id="MD表格"><a href="#MD表格" class="headerlink" title="MD表格"></a>MD表格</h2><p><img src="http://www.plantuml.com/plantuml/svg/AyaioKbLy7LviN35imLxk99JyqfIYnGoKXDJKekuuCAfUIbG8QuIa0Qk6bi582f9J09g1Z8WaWerN3KAYGerC765elnoi5WIXXZGG0M8IT5QiGgwkdOAmIM99Qc6N7dv9QaAHPdf6ILKiGDa71VCLsdvG1wgho120000"><br>音 –&gt; 音质 —&gt; 高低 —&gt; 十二平均律(七键) —&gt;音级/音名/唱名/音组 —&gt;<br>音 –&gt; 音质 —&gt; 长短 —&gt; 音符（全音/半音）<br>五线谱 –&gt; 节拍  拍号，调号，调域<br></p><h2 id="大音阶"><a href="#大音阶" class="headerlink" title="大音阶"></a>大音阶</h2><p> 12个调：7个大键 5个黑键 ： 全音/半音<br> 音名：C Db D Eb E Fb F Gb G Ab A Bb B<br> 音组：十二平均律<br> 音性质：高低，强弱，长短，音色<br> 音符时效：全音符，二分音符，四分音符，八分音符，十六分音符。<br> 斧头/符干/符尾   书写方法：斧头下干居右，斧头上干居左，符尾永居右<br> 节：<br> 拍号：<br> 乐速：BPM<br> 五线谱：<br> 音程： 度数：两个音符跨度的线和间的个数，音数：两个音符相差全音和半音的个数<br> 音程名：音数和度数决定。纯一度，小二度，大二度…<br> 节奏读法：短音符：嗒，二倍音符：嗒啊，三倍音符：嗒啊啊，休止符：嗯/嗯啊<br> 调式/调域/音阶<br> 调的主音+调式类别<br> C大调：<br> 自然大调：全全半全全全半 的音级关系<br> 自然小调：全半全全半半全全<br> 关系（大/小）调：c大调是a小调的关系大调。a小调是c大调的关系小调，使用其关系（大/小）调的首调唱名方法。<br> 和弦：以两个以上的音，按照三度的重叠关系，在纵向上加以结合，就是和弦。<br> 顺阶和弦：根音/三音/五音<br> 七个顺阶和弦：大三和弦（CFG）/小三和弦（m）/减三和弦（dim）<br> 大三和弦：根音–大三度–三音—小三度—五音<br> 小三和弦：根音–小三度–三音—大三度—五音<br> 减三和弦：根音–小三度–三音—小三度—五音<br> 调号：变音音符，为了让读者便于识别调式，同时方便写谱，五线谱就将相关调域自然大调音阶中出现的变音记号，按照一定的次序，记在谱号的后边，这些记号就是五线谱的调号。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">调试</span><br><span class="line">音阶</span><br><span class="line">调域</span><br><span class="line">固定唱名法/首调唱名法</span><br><span class="line">自然大调/自然小调</span><br><span class="line">和弦的---顺阶和弦</span><br><span class="line">调号</span><br><span class="line">五度圈</span><br><span class="line">大调中的主要和弦的功能与进行</span><br></pre></td></tr></table></figure><h3 id="C大调音阶"><a href="#C大调音阶" class="headerlink" title="C大调音阶"></a>C大调音阶</h3><p> do 在C上<br> 音名：C，D，E，F，G，A，B，C<br> 指法：1 ，2，3，1，2，3，4，5</p><h3 id="G大调音阶"><a href="#G大调音阶" class="headerlink" title="G大调音阶"></a>G大调音阶</h3><p> 音名：G，A，B，半音 C，D，E，全音F#，半音G</p><ol><li><del>扫描事件动画处理</del></li><li>巡查录入，执法权限验证进行执法</li><li>筛选商业调试UI</li><li>巡查年度列表</li><li>配置平台组件</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;scr
      
    
    </summary>
    
      <category term="作文作曲" scheme="https://huos3203.github.io/categories/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/"/>
    
    
  </entry>
  
</feed>
