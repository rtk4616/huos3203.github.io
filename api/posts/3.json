{"total":157,"pageSize":10,"pageCount":16,"data":[{"title":"npm降级的两种方法","slug":"hexo/npm降级的两种方法","date":"2018-05-29T12:06:24.000Z","updated":"2018-05-29T12:26:48.000Z","comments":true,"path":"api/articles/hexo/npm降级的两种方法.json","excerpt":null,"keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h3 id=\"方法一：简单暴力\"><a href=\"#方法一：简单暴力\" class=\"headerlink\" title=\"方法一：简单暴力\"></a>方法一：简单暴力</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install npm@4 -g</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法二：nvm工具\"><a href=\"#方法二：nvm工具\" class=\"headerlink\" title=\"方法二：nvm工具\"></a>方法二：nvm工具</h3><p>nvm是node版本管理工具</p>\n<h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install nvm</span><br></pre></td></tr></table></figure>\n<p>装nvm之前，建议把现有的所有nodejs版本全部删除，以后就让nvm全权管理就好了。保存着旧的node反而容易造成版本管理的困难。</p>\n<p>官网nvm安装指南：<a href=\"https://github.com/creationix/nvm#installation\" target=\"_blank\" rel=\"noopener\">https://github.com/creationix/nvm#installation</a></p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>nvm有了后，直接装对应版本的node，会安装对应版本npm。<br>如：node 8 对应 npm v5，node 7 对应 npm v4<br>如果需要npm v5, 则<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 8</span><br><span class=\"line\">nvm use 8</span><br></pre></td></tr></table></figure></p>\n<p>如果需要npm v4了，装上node 7就可以了<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvm install 7</span><br><span class=\"line\">nvm use 7</span><br></pre></td></tr></table></figure></p>\n","raw":null,"categories":[{"name":"hexo","path":"api/categories/hexo.json"}],"tags":[]},{"title":"终端实现预览plantuml的插件","slug":"shell/终端实现预览plantuml的插件","date":"2018-05-29T11:32:04.000Z","updated":"2018-06-01T10:07:54.000Z","comments":true,"path":"api/articles/shell/终端实现预览plantuml的插件.json","excerpt":null,"keywords":null,"cover":"http://p27uwfdhv.bkt.clouddn.com/static/images/plantumlpreviewer.png?imageMogr2/2/w/800","content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><div id=\"badge-container-weirongxu-plantuml-previewer.vim-bf4b3e5\" class=\"hexo-github\" style=\"width: =\"></div>\n<script src=\"/hexo-github/badge.js\"></script>\n<script type=\"text/javascript\">\n  loadStyle(\"/hexo-github/style.css\");\n  loadStyle(\"/hexo-github/octicons/octicons.css\");\n  new Badge(\"#badge-container-weirongxu-plantuml-previewer.vim-bf4b3e5\", \"weirongxu\", \"plantuml-previewer.vim\", \"bf4b3e5\", false);\n</script>\n\n<h2 id=\"安装依赖\"><a href=\"#安装依赖\" class=\"headerlink\" title=\"安装依赖\"></a>安装依赖</h2><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Plug <span class=\"string\">'huos3203/plantuml-syntax'</span>  <span class=\"string\">\"plantuml语法高亮 Plug 'aklt/plantuml-syntax'</span></span><br><span class=\"line\"><span class=\"string\">Plug 'tyru/open-browser.vim'</span></span><br><span class=\"line\"><span class=\"string\">Plug 'weirongxu/plantuml-previewer.vim' \"</span>在线工具：http://sujoyu.github.io/plantuml-previewer/</span><br></pre></td></tr></table></figure>\n<h3 id=\"Graphviz\"><a href=\"#Graphviz\" class=\"headerlink\" title=\"Graphviz\"></a>Graphviz</h3><p><a href=\"https://www.graphviz.org/download/\" target=\"_blank\" rel=\"noopener\">下载地址</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install graphviz</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"打开浏览器safari插件工具\"><a href=\"#打开浏览器safari插件工具\" class=\"headerlink\" title=\"打开浏览器safari插件工具\"></a>打开浏览器safari插件工具</h3><p>open-browser.vim</p>\n<h3 id=\"语法高亮插件\"><a href=\"#语法高亮插件\" class=\"headerlink\" title=\"语法高亮插件\"></a>语法高亮插件</h3><p>aklt/plantuml-syntax (vim syntax file for plantuml)</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"创建uml文件\"><a href=\"#创建uml文件\" class=\"headerlink\" title=\"创建uml文件\"></a>创建uml文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi test.uml</span><br></pre></td></tr></table></figure>\n<img title=\"历史下载\" src=\"http://p27uwfdhv.bkt.clouddn.com/static/images/plantumlpreviewer.png?imageMogr2/2/w/800\">\n<h3 id=\"预览uml图\"><a href=\"#预览uml图\" class=\"headerlink\" title=\"预览uml图\"></a>预览uml图</h3><p>通过命令打开浏览器预览界面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:PlantumlOpen</span><br></pre></td></tr></table></figure></p>\n<p>在vi中执行保存命令<code>:w</code>,预览界面会自动刷新</p>\n","raw":null,"categories":[{"name":"shell","path":"api/categories/shell.json"}],"tags":[]},{"title":"GB乐理知识体系","slug":"作文作曲/GB乐理知识体系","date":"2018-05-29T11:32:04.000Z","updated":"2018-06-11T19:43:53.000Z","comments":true,"path":"api/articles/作文作曲/GB乐理知识体系.json","excerpt":null,"keywords":null,"cover":"http://www.plantuml.com/plantuml/svg/RLBRJi9047tVhzWVQ7Wdn7yXKAC9WGHuKn94BWeKQWA90KtZ3KZmmgL6MxdyJBVRFlaBpZ354lHfPiwPEMSok_dZV4hbZgLBlIeCMzuLfV7alLLboNBlvm2oX9hEgrb-fCQJQfRvnPwthZdB6z5VKOCxA8dr-_UYwNPD57aqlVAL_z1oUoPJqybWBf6AvtBSD-OdZ7EtEFJCKHHBY008xSoncyAQYzkQM3K00KheMWI2_2fZHsK4UKHeTGZ4o-T1b0BoaxPNBqNSXYRQ7wmG-e513C81-d9_VEqiMvY9XIqMqmtMNKlZ9LJQ35tEG2CK0IQsjoC91di5avpMsrROVb7TfVlzFQ0o3e5VmpqdCd8-p_tEArCKx1vE56M3Oc4FjobSZ6GxKqmBZ9Hvx5HH_joORaCStZIeCrJYGdJy_wUtt-8mau70TZyGlZh1Fm00","content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2 id=\"使用puml来梳理乐理知识点\"><a href=\"#使用puml来梳理乐理知识点\" class=\"headerlink\" title=\"使用puml来梳理乐理知识点\"></a>使用puml来梳理乐理知识点</h2><p>相关概念<br><img src=\"http://www.plantuml.com/plantuml/svg/RLBRJi9047tVhzWVQ7Wdn7yXKAC9WGHuKn94BWeKQWA90KtZ3KZmmgL6MxdyJBVRFlaBpZ354lHfPiwPEMSok_dZV4hbZgLBlIeCMzuLfV7alLLboNBlvm2oX9hEgrb-fCQJQfRvnPwthZdB6z5VKOCxA8dr-_UYwNPD57aqlVAL_z1oUoPJqybWBf6AvtBSD-OdZ7EtEFJCKHHBY008xSoncyAQYzkQM3K00KheMWI2_2fZHsK4UKHeTGZ4o-T1b0BoaxPNBqNSXYRQ7wmG-e513C81-d9_VEqiMvY9XIqMqmtMNKlZ9LJQ35tEG2CK0IQsjoC91di5avpMsrROVb7TfVlzFQ0o3e5VmpqdCd8-p_tEArCKx1vE56M3Oc4FjobSZ6GxKqmBZ9Hvx5HH_joORaCStZIeCrJYGdJy_wUtt-8mau70TZyGlZh1Fm00\"></p>\n<p><img src=\"http://www.plantuml.com/plantuml/svg/TLBBJi905DtFLtIf2HjG9A4hnSTt42bg993KVW0eBu4A9A0HD0rgi55H23LAAV0plTEouXUSwGY2ukxEEVUSU-xCI4TIHE3CNiagfV5xmbBpK1zEZ2pM-f1JdVeSxGjHIH2vGo4O4aGqZjViKSOSt10MttMfi7aAe_U9KS1LZHpXGREJvV7z1QvfI8Y6ldKdKb2Ka7-iT6rDvL4u9XuZFnWw61sU57B2r0lGwy9j1eRvAK-wBVsHHz6O970H8ImXjyVyV6BmnAWXAigcpLxU_8nRjQJRWryQ-B97mxmLcIdfD0SovVj9ceUZPiZl8pxMzM1SUVLIntwPL6mi5pm87aMTuL2IIRZ0zixktkRM8WkL3cFTdhLrxuRlZvQCerht2hIBqBfY0LPT0OyhiEOAhFDE5cVD1M5rP2ajdZcyD6SNbLBdWMatMtyP0_NwVqpg-Jz6Ja2gDKVE4ZffrFbdmTNsBx7UTB2PXgQhMFh8RdUcEZjtYlFoeeu0KFnOnEpssL9CKURzVwhf5mt7oDEAYFrdK7Ih4QTT3Fu2\"></p>\n<p><img src=\"http://www.plantuml.com/plantuml/svg/VPFBJi9058RtynHTDn8lb0t4XQA-1v6A90GCzW6g0WeMHOCneSGB4crCH8mrZXNbPMPwMV4Adg6bfKPPTURCEV__pT-Cb9Lo8aS-6bQZOhxjMTenLRz7WoDJ_wGrRRokeaqnBub5RbjCfSKYSkIMFJmaNsquDJklRF1-dmxVHWF5lD1XIxkwNJfpxaxCbex4VDgRYplNhw2VGBixkQmqtfeN_GJA5oIHoubR4d8R27uYk4lm8sp9nx5pgLigfkyzHCiQbEYvGkirrjegmRobzX3FkrhBJhC7d_abdcU-75DstRXK9fNDepWrxWFFOZQpBI7VYxOrOZGjOsZtNmYksUyQT2DREQ2gJYjbiohJ-WqS4tp2c7nttuajWhknA1jr_xQqeO1So3afH99275d6Cy4o77g9aA_w0gYxjK0zxlSbmdSYXX8KmQX_Ega4oQuBaGrXpjVd-KKM4dCPj_wNLlSX9ELZhmaJLco0rdJSGGXXI5pz3UbL0iWLo2Fc2VDyTDPl1B3fSHziFGIsz3VOBorLdIQ3b2ULW2p9uXiDMXEss2ospbL8m6NR42Ah8RReFsnJI-_PRHMWfOZSDqgl3UjMPbrk-GS0\"><br><img src=\"http://www.plantuml.com/plantuml/svg/lLNTKjf05BxFKt2T6-_jfHTz3gP6POR13iq3f0eI_gcYA6AfhGYZLL6Y1fBemtJFRdBbA_HiDec9uFIkCmopUyxkTxxzphSRDQDcbHIPjbXhXzv_PQCg73-zs3erBAYC_75P-gJaL2MVsb3IgqfUyhIk-rmYJW-pzEU4RppVWkVx5xj6zmsSmfdX5hvvlngqQqXARZNOj-oEjy5kVf1ocwgIoYfhgaGh5RSwWEaTCUlGgdcNXyHfi6x1wq_OR8Y0S6mmQv-O6Z4ls6W2rrtC4lCAdhUZDHAjbN65oF4edg4uOHEBMGLcbTpxHteouEJq5Z5d_duEHtjbsfiHPmzN_j6sED4KPoPz-PpDg89jln-mpMVMDrJfjN2t4B64Llt5xgx0sH1tO9cFOiIkoWdKvMXpN01sRCAiBOGHYDWARziXrY1Q3xO6mohL3rojoAmzUjBdmA8BWYIjbV3qqBwLvTNDh2mdD18yVvzpfQ3uG9mZCOVU28LZnM5m35yoBhc-0_ebROpOTGUUEb2QBLIdTC4A3p1k8eFuWQ0Lo4AcLQzZO7K1BA56iWp54TGh_5_y_B4inrHAXv117M9QlcJ-D9LUJsToF5Xv9twrA5Y5s-_pyOL1NFmUI5YHSnNaad3-CR7tI_EY16Bvle3TMboxg3reIhTaSAc9i_FQ--OXr0vuLsviJ6F4EtmGfMXxYbdULK_xWTx6taO-eeM-EonJdTSHLol10Nk11WlDOkt1-4cAamhpsNIKJlO_F7GSD75J_cs3EISaRB2o09FUdUAT9PP5d7sebvQyepeq7pbqUFMWFY5MaTfj63JPaUErhmM9EVV-P_TWyzvOvnqJYVw-VI7zhYBmcwSFz75yAfJsRtaeFctiWjwX1rFSBru_zsOGVsomME9olz8AdlorJGpd9V5zWFwCdMfyaGZ_1G00\"></p>\n<h2 id=\"五度圈\"><a href=\"#五度圈\" class=\"headerlink\" title=\"五度圈\"></a>五度圈</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/hLNVJzDG57w_VyLzrWu3BZ7fWycwjdlH5taqFb3NoHAocJ7ZQmDZJA0m5uooZU0KDiEFWO9OomR_2_QstHF_WkVsjck11y6GPTlfFT_tdNE-UtTNp1QdL6oPgyHiasRbebSX2nlkRD-Btw4fDLF4a-f4MYsWWLPtp-QjVfCqJkqlXqwrRBTdoDdFYzwI_U487idcaLjwF_YwRDUFqEYOPMmFDWulUdKl9BKbqci3rdjo3sPjhOD6Hx2xNoQL7SlGINK9LidABy2GlK-a-SsfbuW-xtOFOF71O4rd4HeRmKwhIxfr1hUCHG1QnYoLdTzsIiTGrJ4xiEYSbEnAbJLXdInRnWd4fAUHpkAWPLg6Pd_k0OpYTzlt1rgPpEr5bz33e1HzhfUOFDdiU9KNe4K8B6EFDhhwdLHrg0CSc2hQ3iEp5jpzBP22IgmuAUlG2AiAOxjdQupeD0moTxKYACFeqPLXNUjqtTvjMOO9LSwrfZo1nVmK7eVtCnK_cS1FitWyUwwjqwrQt_BTyrePIlpHPf2QI_jx_VpU2nnBvz_cOezn4YLnxCrhY5AyO-wpivBaH4xYP2v5apvGfcdIQ8Hf9FlCPCW43fVW12w9Kj4aumKf8KPF7kIaC0VhL1L9E5R8lfgaMI6KzPgXR2GnrKJ832CVXH8C8uNyCF8wy2hvA37a-paaHchuVDyF41UZTZ5UO5OmiXWI_P51L1uwAIWXLVRoWd8jxTSL52vmMr02X1GH628K92c1hvSa92KmpuFu6eceHW1HK6Ae8KKr4afWcmVnDSIeHW1Ha3ZKI4GrH2Nma4B2SnMFYFWOEOxaE0vKnAYA7EU6dYfHb12H2K1824yJgnFO6hWQHm9Fhusg3jyjq_vuFAXL7bbztUbt8ONPpuUVpYAPdqvdfk6LXW_O33uH1pjvCGw6yAauZCGdQTjyIa6vV575Nc6Spy0v8Yi_tDeCsTov7hYLcjtK_mbWajw5JHKL_fOCwTOCGRbHsrTc5Uzirg5awkubfV-Hl6mFR3U-fQCoVwKDE2mtq7Yfvefg0MVom2qWwtUL_Xblc4vBerSwM_uB\"></p>\n<p><img src=\"http://www.plantuml.com/plantuml/svg/AyaioKbLUBPWujEzYvxldlniNWjNScfUIMgHGaPgOafg4HUo52usLsfU2bGvbqDnIM9HIN5YJWbNDPS245I7W2aGq5O8po_AIK7mjHKSSrEBCfCJaOIq5PmJyn9JK8L2WnsH-TeAVgdb2f7vHTceeaxvnINvUIWwVLChCfFpaQrqBItABqX5KUHPafXJYIBYdbgKcvXNYMPyQb5EPXwAyzFWhg_bgkLo00O4sElGC4pBpoz12qDGM4640G00\"></p>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/AyaioKbLUB5mnRC5UxYIK_DAKeiKCb8JKrABkA22gNafK04kX-AInAAIuiIS4gvgPIu5LA2dK0CadVDpIdFp58mKG3mennYiD2Y_76goWY5OQLbYJcaga0rM2k4OeQiq0ievAkJavwKh9AVcv81KQd7LSZa07GLs1ip9QVdv9IXEXWW00000\"></p>\n<h2 id=\"MD表格\"><a href=\"#MD表格\" class=\"headerlink\" title=\"MD表格\"></a>MD表格</h2><p><img src=\"http://www.plantuml.com/plantuml/svg/AyaioKbLy7LviN35imLxk99JyqfIYnGoKXDJKekuuCAfUIbG8QuIa0Qk6bi582f9J09g1Z8WaWerN3KAYGerC765elnoi5WIXXZGG0M8IT5QiGgwkdOAmIM99Qc6N7dv9QaAHPdf6ILKiGDa71VCLsdvG1wgho120000\"><br>音 –&gt; 音质 —&gt; 高低 —&gt; 十二平均律(七键) —&gt;音级/音名/唱名/音组 —&gt;<br>音 –&gt; 音质 —&gt; 长短 —&gt; 音符（全音/半音）<br>五线谱 –&gt; 节拍  拍号，调号，调域<br></p>\n<h2 id=\"大音阶\"><a href=\"#大音阶\" class=\"headerlink\" title=\"大音阶\"></a>大音阶</h2><p> 12个调：7个大键 5个黑键 ： 全音/半音<br> 音名：C Db D Eb E Fb F Gb G Ab A Bb B<br> 音组：十二平均律<br> 音性质：高低，强弱，长短，音色<br> 音符时效：全音符，二分音符，四分音符，八分音符，十六分音符。<br> 斧头/符干/符尾   书写方法：斧头下干居右，斧头上干居左，符尾永居右<br> 节：<br> 拍号：<br> 乐速：BPM<br> 五线谱：<br> 音程： 度数：两个音符跨度的线和间的个数，音数：两个音符相差全音和半音的个数<br> 音程名：音数和度数决定。纯一度，小二度，大二度…<br> 节奏读法：短音符：嗒，二倍音符：嗒啊，三倍音符：嗒啊啊，休止符：嗯/嗯啊<br> 调式/调域/音阶<br> 调的主音+调式类别<br> C大调：<br> 自然大调：全全半全全全半 的音级关系<br> 自然小调：全半全全半半全全<br> 关系（大/小）调：c大调是a小调的关系大调。a小调是c大调的关系小调，使用其关系（大/小）调的首调唱名方法。<br> 和弦：以两个以上的音，按照三度的重叠关系，在纵向上加以结合，就是和弦。<br> 顺阶和弦：根音/三音/五音<br> 七个顺阶和弦：大三和弦（CFG）/小三和弦（m）/减三和弦（dim）<br> 大三和弦：根音–大三度–三音—小三度—五音<br> 小三和弦：根音–小三度–三音—大三度—五音<br> 减三和弦：根音–小三度–三音—小三度—五音<br> 调号：变音音符，为了让读者便于识别调式，同时方便写谱，五线谱就将相关调域自然大调音阶中出现的变音记号，按照一定的次序，记在谱号的后边，这些记号就是五线谱的调号。</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">调试</span><br><span class=\"line\">音阶</span><br><span class=\"line\">调域</span><br><span class=\"line\">固定唱名法/首调唱名法</span><br><span class=\"line\">自然大调/自然小调</span><br><span class=\"line\">和弦的---顺阶和弦</span><br><span class=\"line\">调号</span><br><span class=\"line\">五度圈</span><br><span class=\"line\">大调中的主要和弦的功能与进行</span><br></pre></td></tr></table></figure>\n<h3 id=\"C大调音阶\"><a href=\"#C大调音阶\" class=\"headerlink\" title=\"C大调音阶\"></a>C大调音阶</h3><p> do 在C上<br> 音名：C，D，E，F，G，A，B，C<br> 指法：1 ，2，3，1，2，3，4，5</p>\n<h3 id=\"G大调音阶\"><a href=\"#G大调音阶\" class=\"headerlink\" title=\"G大调音阶\"></a>G大调音阶</h3><p> 音名：G，A，B，半音 C，D，E，全音F#，半音G</p>\n<ol>\n<li><del>扫描事件动画处理</del></li>\n<li>巡查录入，执法权限验证进行执法</li>\n<li>筛选商业调试UI</li>\n<li>巡查年度列表</li>\n<li>配置平台组件</li>\n</ol>\n","raw":null,"categories":[{"name":"作文作曲","path":"api/categories/作文作曲.json"}],"tags":[]},{"title":"pyenv切换python的版本","slug":"hexo/pyenv切换python的版本","date":"2018-05-29T10:33:30.000Z","updated":"2018-05-29T12:26:48.000Z","comments":true,"path":"api/articles/hexo/pyenv切换python的版本.json","excerpt":null,"keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2 id=\"问题引入\"><a href=\"#问题引入\" class=\"headerlink\" title=\"问题引入\"></a>问题引入</h2><p><a href=\"https://stackoverflow.com/questions/32702098/err-stack-error-command-failed-python2-c-import-platform\" target=\"_blank\" rel=\"noopener\">在hexo 项目中使用npm 配置环境，出现错误：gyp ERR! configure error</a></p>\n<p>pyenv是python的多版本管理包，实现互相独立、互不干扰的python环境配置。</p>\n<h2 id=\"安装pyenv\"><a href=\"#安装pyenv\" class=\"headerlink\" title=\"安装pyenv\"></a>安装pyenv</h2><p>安装电脑是mac，所以理所当然的使用神器：homebrew<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install pyenv</span><br></pre></td></tr></table></figure></p>\n<p>安装界面略过，安装结束后，系统提示如下：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==&gt; Caveats</span><br><span class=\"line\">To use Homebrew<span class=\"string\">'s directories rather than ~/.pyenv add to your profile:</span></span><br><span class=\"line\"><span class=\"string\">export PYENV_ROOT=/usr/local/var/pyenv</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">To enable shims and autocompletion add to your profile:</span></span><br><span class=\"line\"><span class=\"string\">if which pyenv &gt; /dev/null; then eval \"$(pyenv init -)\"; fi</span></span><br></pre></td></tr></table></figure></p>\n<p>根据此提示，在bash的配置文件（由于我的bash是oh my zsh，所以我的配置文件为~/.zshrc）中添加以下两行代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PYENV_ROOT=/usr/local/var/pyenv</span><br><span class=\"line\">if which pyenv &gt; /dev/null; then eval &quot;$(pyenv init -)&quot;; fi</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用pyenv\"><a href=\"#使用pyenv\" class=\"headerlink\" title=\"使用pyenv\"></a>使用pyenv</h2><h4 id=\"安装指定版本的python\"><a href=\"#安装指定版本的python\" class=\"headerlink\" title=\"安装指定版本的python\"></a>安装指定版本的python</h4><p>显示所有可以安装的python版本软件，如2.1.3…3.5.1等。<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv install -l</span><br><span class=\"line\">pyenv install 2.7.11 -v</span><br></pre></td></tr></table></figure></p>\n<p><code>-v</code>表示在显示安装过程。<br>安装完成后，2.7.11版本在系统中的存放位置为：<br><code>/usr/local/var/pyenv/versions/2.7.11</code></p>\n<h3 id=\"为项目配置python环境\"><a href=\"#为项目配置python环境\" class=\"headerlink\" title=\"为项目配置python环境\"></a>为项目配置python环境</h3><p>接下来进入开发项目的主文件夹，如<code>~/Desktop/Python/TWD</code>，输入如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv local 2.7.11</span><br></pre></td></tr></table></figure></p>\n<p>即在当前文件夹下配置完成python的开发环境。接下来可通过pip安装开发过程中的各种包。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"1-显示所有安装的python版本\"><a href=\"#1-显示所有安装的python版本\" class=\"headerlink\" title=\"1.显示所有安装的python版本\"></a>1.显示所有安装的python版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv versions</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-切换python版本\"><a href=\"#2-切换python版本\" class=\"headerlink\" title=\"2.切换python版本\"></a>2.切换python版本</h3><p>要切换python 版本，可以使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv global &lt;version&gt;</span><br></pre></td></tr></table></figure></p>\n<p>比如，我使用以上命令pyenv global 2.7.11后，系统默认的python版本即为2.7.11，在命令行输入python后，进入的就是2.7.11的shell，不再是system的shell。</p>\n<h3 id=\"3-切换python-shell版本\"><a href=\"#3-切换python-shell版本\" class=\"headerlink\" title=\"3.切换python shell版本\"></a>3.切换python shell版本</h3><p>若不使用pyenv global命令实现python shell版本切换，可以使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv shell &lt;version&gt;</span><br></pre></td></tr></table></figure></p>\n<p>比如，我使用pyenv shell 2.7.11后，在命令行输入python，进入的是2.7.11的shell。此时系统的默认python版本也变成了2.7.11，如下所示：</p>\n<p><a href=\"https://www.jianshu.com/p/bcb3f1be9073\" target=\"_blank\" rel=\"noopener\">转自</a></p>\n","raw":null,"categories":[{"name":"hexo","path":"api/categories/hexo.json"}],"tags":[]},{"title":"雨夜","slug":"作文作曲/雨夜","date":"2018-05-17T10:58:36.000Z","updated":"2018-06-19T19:44:09.000Z","comments":true,"path":"api/articles/作文作曲/雨夜.json","excerpt":null,"keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2 id=\"雨夜\"><a href=\"#雨夜\" class=\"headerlink\" title=\"雨夜\"></a>雨夜</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">卧听风雨天窗跃，左耳贯注天籁音</span><br><span class=\"line\">不闻春雷潜入夜，广厦飞瀑挂屋檐</span><br></pre></td></tr></table></figure>\n<!-- 简单示例 (id, server, type)  -->\n<h2 id=\"滑板\"><a href=\"#滑板\" class=\"headerlink\" title=\"滑板\"></a>滑板</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">心如止水毽如飞，晨练漂移划湖心</span><br><span class=\"line\">夜雨不及暑气盛，黑云压城君汗蒸</span><br></pre></td></tr></table></figure>\n<h2 id=\"哔哩哔哩\"><a href=\"#哔哩哔哩\" class=\"headerlink\" title=\"哔哩哔哩\"></a>哔哩哔哩</h2><div class=\"owl-media owl-video owl-bilibili\"><embed src=\"http://static.hdslb.com/miniloader.swf\" flashvars=\"aid=1468496&page=1\" pluginspage=\"http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash\" type=\"application/x-shockwave-flash\" quality=\"high\" allowfullscreen=\"true\"></div>\n<h2 id=\"QQ视频\"><a href=\"#QQ视频\" class=\"headerlink\" title=\"QQ视频\"></a>QQ视频</h2><div class=\"owl-media owl-video owl-tencent\"><embed src=\"http://static.video.qq.com/TPout.swf?vid=s06895oernz&auto=0\" type=\"application/x-shockwave-flash\" quality=\"high\" allowfullscreen=\"true\" align=\"middle\" allowscriptaccess=\"always\"></div>\n<h2 id=\"QQ音乐\"><a href=\"#QQ音乐\" class=\"headerlink\" title=\"QQ音乐\"></a>QQ音乐</h2>\n    <div id=\"aplayer-rSEwgLUP\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"002rhYYR0e7jWP\" data-server=\"tencent\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n","raw":null,"categories":[{"name":"作文作曲","path":"api/categories/作文作曲.json"}],"tags":[]},{"title":"汉字拼音排序方法","slug":"iOS/汉字拼音排序方法","date":"2018-05-17T10:46:57.000Z","updated":"2018-05-17T10:46:57.000Z","comments":true,"path":"api/articles/iOS/汉字拼音排序方法.json","excerpt":null,"keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!--github库卡片-->\n<div id=\"badge-container-huos3203-sortChinese-2deab8b\" class=\"hexo-github\" style=\"width: =\"></div>\n<script src=\"/hexo-github/badge.js\"></script>\n<script type=\"text/javascript\">\n  loadStyle(\"/hexo-github/style.css\");\n  loadStyle(\"/hexo-github/octicons/octicons.css\");\n  new Badge(\"#badge-container-huos3203-sortChinese-2deab8b\", \"huos3203\", \"sortChinese\", \"2deab8b\", false);\n</script>\n\n<h2 id=\"方法一\"><a href=\"#方法一\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2><p>实现模型对象排序，当万条数据时，出现卡顿问题。</p>\n<h2 id=\"方法二\"><a href=\"#方法二\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2><p>实现字符串数组的排序，暂时没有验证大量排序情况，尝试优化第一种方法的排序卡顿问题。</p>\n","raw":null,"categories":[{"name":"分类","path":"api/categories/分类.json"}],"tags":[]},{"title":"水关长城天漠行","slug":"旅行/水关长城天漠行","date":"2018-04-13T11:52:28.000Z","updated":"2018-04-24T11:49:45.000Z","comments":true,"path":"api/articles/旅行/水关长城天漠行.json","excerpt":null,"keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><p><blockquote class=\"trello-card\"><a href=\"https://trello.com/c/fHziBC4z/1-%E8%87%AA%E9%A9%BE%E6%B8%B8\" target=\"_blank\" rel=\"noopener\">行程安排</a></blockquote><script src=\"https://p.trellocdn.com/embed.min.js\"></script></p>\n\n\n\t<div class=\"row\">\n    <embed src=\"http://p27uwfdhv.bkt.clouddn.com/static/pdf/%E6%B0%B4%E5%85%B3%E9%95%BF%E5%9F%8E%E5%A4%A9%E6%BC%A0%E6%B8%B8.pdf\" width=\"100%\" height=\"550\" type=\"application/pdf\">\n\t</div>\n\n\n\n","raw":null,"categories":[{"name":"旅行","path":"api/categories/旅行.json"}],"tags":[]},{"title":"Git工具交互式暂存","slug":"git/Git工具交互式暂存","date":"2018-04-12T19:41:46.000Z","updated":"2018-04-12T19:41:46.000Z","comments":true,"path":"api/articles/git/Git工具交互式暂存.json","excerpt":null,"keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2 id=\"交互式暂存\"><a href=\"#交互式暂存\" class=\"headerlink\" title=\"交互式暂存\"></a>交互式暂存</h2><p>Git 自带的一些脚本可以使在命令行下工作更容易。 本节的几个互交命令可以帮助你将文件的特定部分组合成提交。 当你修改一组文件后，希望这些改动能放到若干提交而不是混杂在一起成为一个提交时，这几个工具会非常有用。 通过这种方式，可以确保提交是逻辑上独立的变更集，同时也会使其他开发者在与你工作时很容易地审核。 如果运行 git add 时使用 -i 或者 –interactive 选项，Git 将会进入一个交互式终端模式，显示类似下面的东西：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git add -i</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">1:    unchanged        +0/-1 TODO</span><br><span class=\"line\">2:    unchanged        +1/-1 index.html</span><br><span class=\"line\">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class=\"line\"></span><br><span class=\"line\">*** Commands ***</span><br><span class=\"line\">1: status     2: update      3: revert     4: add untracked</span><br><span class=\"line\">5: patch      6: diff        7: quit       8: help</span><br><span class=\"line\">What now&gt;</span><br></pre></td></tr></table></figure></p>\n<p>可以看到这个命令以非常不同的视图显示了暂存区 - 基本上与 <code>git status</code> 是相同的信息，但是更简明扼要一些。 它将暂存的修改列在左侧，未暂存的修改列在右侧。</p>\n<p>在这块区域后是命令区域。 在这里你可以做一些工作，包括暂存文件、取消暂存文件、暂存文件的一部分、添加未被追踪的文件、查看暂存内容的区别。</p>\n<h2 id=\"暂存与取消暂存文件\"><a href=\"#暂存与取消暂存文件\" class=\"headerlink\" title=\"暂存与取消暂存文件\"></a>暂存与取消暂存文件</h2><p>如果在 What now&gt; 提示符后键入 2 或 u，脚本将会提示想要暂存哪个文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">What now&gt; 2</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">1:    unchanged        +0/-1 TODO</span><br><span class=\"line\">2:    unchanged        +1/-1 index.html</span><br><span class=\"line\">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class=\"line\">Update&gt;&gt;</span><br></pre></td></tr></table></figure></p>\n<p>要暂存 TODO 与 index.html 文件，可以输入数字：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Update&gt;&gt; 1,2</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">* 1:    unchanged        +0/-1 TODO</span><br><span class=\"line\">* 2:    unchanged        +1/-1 index.html</span><br><span class=\"line\">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class=\"line\">Update&gt;&gt;</span><br></pre></td></tr></table></figure></p>\n<p>每个文件前面的 * 意味着选中的文件将会被暂存。 如果在 Update&gt;&gt; 提示符后不输入任何东西并直接按回车，Git 将会暂存之前选择的文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Update&gt;&gt;</span><br><span class=\"line\">updated 2 paths</span><br><span class=\"line\"></span><br><span class=\"line\">*** Commands ***</span><br><span class=\"line\">1: status     2: update      3: revert     4: add untracked</span><br><span class=\"line\">5: patch      6: diff        7: quit       8: help</span><br><span class=\"line\">What now&gt; 1</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">1:        +0/-1      nothing TODO</span><br><span class=\"line\">2:        +1/-1      nothing index.html</span><br><span class=\"line\">3:    unchanged        +5/-1 lib/simplegit.rb</span><br></pre></td></tr></table></figure></p>\n<p>现在可以看到 TODO 与 index.html 文件已经被暂存而 simplegit.rb 文件还未被暂存。 如果这时想要取消暂存 TODO 文件，使用 3 或 r（撤消）选项：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*** Commands ***</span><br><span class=\"line\">1: status     2: update      3: revert     4: add untracked</span><br><span class=\"line\">5: patch      6: diff        7: quit       8: help</span><br><span class=\"line\">What now&gt; 3</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">1:        +0/-1      nothing TODO</span><br><span class=\"line\">2:        +1/-1      nothing index.html</span><br><span class=\"line\">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class=\"line\">Revert&gt;&gt; 1</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">* 1:        +0/-1      nothing TODO</span><br><span class=\"line\">2:        +1/-1      nothing index.html</span><br><span class=\"line\">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class=\"line\">Revert&gt;&gt; [enter]</span><br><span class=\"line\">reverted one path</span><br></pre></td></tr></table></figure></p>\n<p>再次查看 Git 状态，可以看到已经取消暂存 TODO 文件：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*** Commands ***</span><br><span class=\"line\">1: status     2: update      3: revert     4: add untracked</span><br><span class=\"line\">5: patch      6: diff        7: quit       8: help</span><br><span class=\"line\">What now&gt; 1</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">1:    unchanged        +0/-1 TODO</span><br><span class=\"line\">2:        +1/-1      nothing index.html</span><br><span class=\"line\">3:    unchanged        +5/-1 lib/simplegit.rb</span><br></pre></td></tr></table></figure></p>\n<p>如果想要查看已暂存内容的区别，可以使用 6 或 d（区别）命令。 它会显示暂存文件的一个列表，可以从中选择想要查看的暂存区别。 这跟你在命令行指定 git diff –cached 非常相似：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*** Commands ***</span><br><span class=\"line\">1: status     2: update      3: revert     4: add untracked</span><br><span class=\"line\">5: patch      6: diff        7: quit       8: help</span><br><span class=\"line\">What now&gt; 6</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">1:        +1/-1      nothing index.html</span><br><span class=\"line\">Review diff&gt;&gt; 1</span><br><span class=\"line\">diff --git a/index.html b/index.html</span><br><span class=\"line\">index 4d07108..4335f49 100644</span><br><span class=\"line\">--- a/index.html</span><br><span class=\"line\">+++ b/index.html</span><br><span class=\"line\">@@ -16,7 +16,7 @@ Date Finder</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;p id=&quot;out&quot;&gt;...&lt;/p&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">-&lt;div id=&quot;footer&quot;&gt;contact : support@github.com&lt;/div&gt;</span><br><span class=\"line\">+&lt;div id=&quot;footer&quot;&gt;contact : email.support@github.com&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br></pre></td></tr></table></figure></p>\n<p>通过这些基本命令，可以使用交互式添加模式来轻松地处理暂存区。</p>\n<h2 id=\"暂存补丁\"><a href=\"#暂存补丁\" class=\"headerlink\" title=\"暂存补丁\"></a>暂存补丁</h2><p>Git 也可以暂存文件的特定部分。 例如，如果在 simplegit.rb 文件中做了两处修改，但只想要暂存其中的一个而不是另一个，Git 会帮你轻松地完成。 从交互式提示符中，输入 5 或 p（补丁）。 Git 会询问你想要部分暂存哪些文件；然后，对已选择文件的每一个部分，它都会一个个地显示文件区别并询问你是否想要暂存它们：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">diff --git a/lib/simplegit.rb b/lib/simplegit.rb</span><br><span class=\"line\">index dd5ecc4..57399e0 100644</span><br><span class=\"line\">--- a/lib/simplegit.rb</span><br><span class=\"line\">+++ b/lib/simplegit.rb</span><br><span class=\"line\">@@ -22,7 +22,7 @@ class SimpleGit</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br><span class=\"line\">def log(treeish = &apos;master&apos;)</span><br><span class=\"line\">-    command(&quot;git log -n 25 #&#123;treeish&#125;&quot;)</span><br><span class=\"line\">+    command(&quot;git log -n 30 #&#123;treeish&#125;&quot;)</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br><span class=\"line\">def blame(path)</span><br><span class=\"line\">Stage this hunk [y,n,a,d,/,j,J,g,e,?]?</span><br></pre></td></tr></table></figure></p>\n<p>这时有很多选项。 输入 ? 显示所有可以使用的命令列表：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Stage this hunk [y,n,a,d,/,j,J,g,e,?]? ?</span><br><span class=\"line\">y - stage this hunk</span><br><span class=\"line\">n - do not stage this hunk</span><br><span class=\"line\">a - stage this and all the remaining hunks in the file</span><br><span class=\"line\">d - do not stage this hunk nor any of the remaining hunks in the file</span><br><span class=\"line\">g - select a hunk to go to</span><br><span class=\"line\">/ - search for a hunk matching the given regex</span><br><span class=\"line\">j - leave this hunk undecided, see next undecided hunk</span><br><span class=\"line\">J - leave this hunk undecided, see next hunk</span><br><span class=\"line\">k - leave this hunk undecided, see previous undecided hunk</span><br><span class=\"line\">K - leave this hunk undecided, see previous hunk</span><br><span class=\"line\">s - split the current hunk into smaller hunks</span><br><span class=\"line\">e - manually edit the current hunk</span><br><span class=\"line\">? - print help</span><br></pre></td></tr></table></figure></p>\n<p>通常情况下可以输入 y 或 n 来选择是否要暂存每一个区块，当然，暂存特定文件中的所有部分或为之后的选择跳过一个区块也是非常有用的。 如果你只暂存文件的一部分，状态输出可能会像下面这样：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">What now&gt; 1</span><br><span class=\"line\">staged     unstaged path</span><br><span class=\"line\">1:    unchanged        +0/-1 TODO</span><br><span class=\"line\">2:        +1/-1      nothing index.html</span><br><span class=\"line\">3:        +1/-1        +4/-0 lib/simplegit.rb</span><br></pre></td></tr></table></figure></p>\n<p>simplegit.rb 文件的状态很有趣。 它显示出若干行被暂存与若干行未被暂存。 已经部分地暂存了这个文件。 在这时，可以退出交互式添加脚本并且运行 git commit 来提交部分暂存的文件。</p>\n<p>也可以不必在交互式添加模式中做部分文件暂存 - 可以在命令行中使用 git add -p 或 git add –patch 来启动同样的脚本。</p>\n<p>更进一步地，可以使用 reset –patch 命令的补丁模式来部分重置文件，通过 checkout –patch 命令来部分检出文件与 stash save –patch 命令来部分暂存文件。 我们将会在接触这些命令的高级使用方法时了解更多详细信息。</p>\n","raw":null,"categories":[{"name":"git","path":"api/categories/git.json"}],"tags":[]},{"title":"Otherlinkerflags设置ld命令执行的参数","slug":"xcode/Otherlinkerflags设置ld命令执行的参数","date":"2018-04-11T16:42:57.000Z","updated":"2018-04-11T19:16:17.000Z","comments":true,"path":"api/articles/xcode/Otherlinkerflags设置ld命令执行的参数.json","excerpt":null,"keywords":null,"cover":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><p>Other linker flags设置的值实际上就是ld命令执行时后面所加的参数。</p>\n<p>3个常用参数：<br><code>-ObjC</code>：加了这个参数后，链接器就会把静态库中所有的Objective-C类和分类都加载到最后的可执行文件中<br><code>-all_load</code>：会让链接器把所有找到的目标文件都加载到可执行文件中，但是千万不要随便使用这个参数！假如你使用了不止一个静态库文件，然后又使用了这个参数，那么你很有可能会遇到<code>ld: duplicate symbol</code>错误，因为不同的库文件里面可能会有相同的目标文件，所以建议在遇到<code>-ObjC</code>失效的情况下使用<code>-force_load</code>参数。<br><code>-force_load</code>：所做的事情跟<code>-all_load</code>其实是一样的，但是<code>-force_load</code>需要指定要进行全部加载的库文件的路径，这样的话，你就只是完全加载了一个库文件，不影响其余库文件的按需加载.</p>\n<h3 id=\"加载FrameWork\"><a href=\"#加载FrameWork\" class=\"headerlink\" title=\"加载FrameWork\"></a>加载FrameWork</h3><h3 id=\"加载静态库\"><a href=\"#加载静态库\" class=\"headerlink\" title=\"加载静态库\"></a>加载静态库</h3>","raw":null,"categories":[{"name":"xcode","path":"api/categories/xcode.json"}],"tags":[]},{"title":"iOS插件化开发之Small","slug":"xcode/iOS插件化开发之Small","date":"2018-04-11T16:42:17.000Z","updated":"2018-04-11T19:16:17.000Z","comments":true,"path":"api/articles/xcode/iOS插件化开发之Small.json","excerpt":null,"keywords":null,"cover":"https://camo.githubusercontent.com/25aac173476e3a5eecdf2853b0e233bf8179bece/687474703a2f2f636f64652e7765717569636b2e6e65742f6173736574732f696d616765732f736d616c6c2d696f732d74656d706c6174652e706e67","content":"<link rel=\"stylesheet\" href=\"/owl.css\"><link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><div id=\"badge-container-huos3203-Small-04f08ae4a26\" class=\"hexo-github\" style=\"width: =\"></div>\n<script src=\"/hexo-github/badge.js\"></script>\n<script type=\"text/javascript\">\n  loadStyle(\"/hexo-github/style.css\");\n  loadStyle(\"/hexo-github/octicons/octicons.css\");\n  new Badge(\"#badge-container-huos3203-Small-04f08ae4a26\", \"huos3203\", \"Small\", \"04f08ae4a26\", false);\n</script>\n\n<p><a href=\"http://code.wequick.net/Small/cn/home\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<h2 id=\"iOS组件化基础\"><a href=\"#iOS组件化基础\" class=\"headerlink\" title=\"iOS组件化基础\"></a>iOS组件化基础</h2><p>iOS组件化基于<a href=\"https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/Framework.html#//apple_ref/doc/uid/TP40008195-CH56-SW1\" target=\"_blank\" rel=\"noopener\">Cocoa Touch Framework</a>（以下简称CTF）通过<a href=\"https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSBundle_Class/index.html#//apple_ref/occ/cl/NSBundle\" target=\"_blank\" rel=\"noopener\">NSBundle</a>实现。</p>\n<ul>\n<li>CTF首次公开在WWDC2014，要求Xcode6 beta以上版本。</li>\n<li>CTF官方表示支持8.0以上系统，但在6.0、7.0上测试正常。</li>\n<li>如果你的App包含了CTF，但是<strong>Deployment Target</strong> &lt; 8.0，上传二进制文件到App Store时会报警中断。</li>\n</ul>\n<p>受苹果官方限制，如果你的CTF没有签名，将无法实现代码级别更新。</p>\n<p>Framework 模式无法上传到App Store。只能应用到企业版</p>\n<h2 id=\"使用文档\"><a href=\"#使用文档\" class=\"headerlink\" title=\"使用文档\"></a>使用文档</h2><ol>\n<li><p>导入模板，重启Xcode</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/wequick/Small.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Small/iOS</span><br><span class=\"line\">cp -r Templates ~/Library/Developer/Xcode/Templates</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>新建工程<br><code>File-&gt;New-&gt;Project...</code>，选择Small-pods模板<br><img src=\"https://camo.githubusercontent.com/25aac173476e3a5eecdf2853b0e233bf8179bece/687474703a2f2f636f64652e7765717569636b2e6e65742f6173736574732f696d616765732f736d616c6c2d696f732d74656d706c6174652e706e67\" alt=\"Small iOS Template\"></p>\n</li>\n<li><p>安装Pods</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> [your-project-path]</span><br><span class=\"line\">pod install --no-repo-update</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>关闭工程并打开xcworkspace</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open *.xcworkspace</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><ul>\n<li>使用者模式<a href=\"Sample\">Sample</a></li>\n</ul>\n<blockquote>\n<p>需要先编译Pods</p>\n</blockquote>\n<ul>\n<li>开发者模式<a href=\"DevSample\">DevSample</a></li>\n</ul>\n<blockquote>\n<p>需要去除并行编译模式：<code>Edit Scheme...-&gt;Build-&gt;Build Options-&gt; [ ] Parallelize Build</code></p>\n<p>各个组件需要签名后才支持代码级别更新。示例中更新例子为xib内容更新。<br><br>在没有设置签名之前，请在模拟器上跑示例。</p>\n</blockquote>\n<h2 id=\"TODO-List\"><a href=\"#TODO-List\" class=\"headerlink\" title=\"TODO List\"></a>TODO List</h2><ul>\n<li>Sample支持CocoaPods</li>\n<li>设置签名脚本（现在需要对每个组件Project手动设置签名）</li>\n<li>热更新（现在需要重启生效）</li>\n<li>Xcode Template for creating new <code>Small Bundle</code></li>\n</ul>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://github.com/wequick/small/wiki/iOS\" target=\"_blank\" rel=\"noopener\">Wiki/iOS</a><br><a href=\"http://www.cocoachina.com/industry/20140613/8810.html\" target=\"_blank\" rel=\"noopener\">WWDC2014之iOS使用动态库</a></p>\n","raw":null,"categories":[{"name":"xcode","path":"api/categories/xcode.json"}],"tags":[]}]}