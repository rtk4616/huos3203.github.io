<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>布衣男儿</title>
  
  <subtitle>不物喜，不己悲，善假物，易参行！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://huos3203.github.io/"/>
  <updated>2018-06-05T21:20:48.000Z</updated>
  <id>https://huos3203.github.io/</id>
  
  <author>
    <name>boyer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>执法巡查开发状态总结</title>
    <link href="https://huos3203.github.io/2018/06/05/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/%E6%89%A7%E6%B3%95%E5%B7%A1%E6%9F%A5%E5%BC%80%E5%8F%91%E7%8A%B6%E6%80%81%E6%80%BB%E7%BB%93/"/>
    <id>https://huos3203.github.io/2018/06/05/个人项目/执法巡查开发状态总结/</id>
    <published>2018-06-05T10:18:33.000Z</published>
    <updated>2018-06-05T21:20:48.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h2 id="UML状态图"><a href="#UML状态图" class="headerlink" title="UML状态图"></a>UML状态图</h2><p>使用状态图，查漏补觉，梳理相关业务流程。<br>建议：优化流程，使用流程图（活动图）/时序图来完善流程<br><img src="http://www.plantuml.com/plantuml/svg/TLFBRjfG4DtVh_2wKcZwI1UMsdqMMLLTLLsWs56GeX21fQf2GI02CU5XIaj9moEuWO1QrL25Gi4yViPpVRtY5thjwo13WhsmP-RCwyoC592EH0w6BMDQ9PeASj6AwMJssRmOu5WSAZE4ZiG3YJiK_O8OGizyN3IAqx-meXZZZA4FuA9ZVjMXUMOMKj4eUkwZiLHytO9f2PAjnIIBqsryLyArXFMzOFtCacwSp2j4TVNeXOypVrUiM1fAAUFV5UabIBVqRXUzN0OQzM5y2tAPg1squ-EiPCwSQZ2w0wLdwcUq12GU2svvuNq_xURLzZRtCI18X-ZzamzRMs-y5Q6mv9T4pbjL17a1IxofVy7rAXyGDfZ_w53Fy2oGsSvHsQgae20l9hBqwKHylREOfD4fycQYpapaGUaQUilbmCLGAwttlkPI2hG1pKEwFv1Nu9d02C6b7ivfD2F8AKlzQsTSmPBvETQRkAPIcYZAEhUvUsgg6cXN3y1MkGFZijkTCtuQSWL2w-BsWe9un1kJXXKhXgLWIDmLN4uVzO-uHiSjWfYt2oNTMvn8hkgOkwEwDtWZCiCfVT6ZwMpcsC8uUhi1ngUBhlRibVOApapOFcTDlMysucXDtjJr6epdw76GzWsk5vOwEqKjHl93KBvjTACtGxIvLTPmlWNA3KDxIsHJtlEVlBL3C0eUHA67H8TgJ7FCa_xOP-9Sfp7AG25lt-Bbp6oElUH3CGlDDZJxLb76ZI5C5BJ6dxkLzDaNZoKnn1q4W_I3xFEeNTktnnJ_0G00"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;UML状态图&quot;&gt;&lt;a href=&quot;#UML状态图&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="个人项目" scheme="https://huos3203.github.io/categories/%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title>uml活动图常用语法</title>
    <link href="https://huos3203.github.io/2018/06/05/hexo/uml%E6%B4%BB%E5%8A%A8%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/06/05/hexo/uml活动图常用语法/</id>
    <published>2018-06-04T21:27:15.000Z</published>
    <updated>2018-06-04T21:27:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">start</span><br><span class="line">:ClickServlet.handleRequest();</span><br><span class="line">:new page;</span><br><span class="line">if (Page.onSecurityCheck) then (true)</span><br><span class="line">:Page.onInit();</span><br><span class="line">if (isForward?) then (no)</span><br><span class="line">:Process controls;</span><br><span class="line">if (continue processing?) then (no)</span><br><span class="line">stop</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">if (isPost?) then (yes)</span><br><span class="line">:Page.onPost();</span><br><span class="line">else (no)</span><br><span class="line">:Page.onGet();</span><br><span class="line">endif</span><br><span class="line">:Page.onRender();</span><br><span class="line">endif</span><br><span class="line">else (false)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">if (do redirect?) then (yes)</span><br><span class="line">:redirect process;</span><br><span class="line">else</span><br><span class="line">if (do forward?) then (yes)</span><br><span class="line">:Forward request;</span><br><span class="line">else (no)</span><br><span class="line">:Render page template;</span><br><span class="line">endif</span><br><span class="line">endif</span><br><span class="line">stop</span><br></pre></td></tr></table></figure><p><img src="http://www.plantuml.com/plantuml/svg/NL6xZiCW4Epv2agxoGSunHMHShekIhu0mJX6uS2tkqwKlpzZJ5uDiBipEwE1nP2eRXUylPn0rm3P32QwW2F-9h0qxLPr4JSzcZEsolUwESolJOeds8cyt7S3xANLCY3gHcX2gxeLyXFziY2pFEyJtGovhugDAICfMJ1hcw9G2bp0kV9nWXxBsCVp6uqbZGhH-Lwjom-9vG6vWvycyYIRG61KqJBvHXaiUshpE9UWPx_GUZDVxQkaIvhWFC5-wjPsDL-aAwd_IA5mrcpcbKlgRswBe-K3jE1t34RmSBUSEOv_"></p><p>title <code>uml模型图题目支持MD</code><br>center header<br><code>在此处添加标头</code><br>endheader<br>start ‘开始’<br>‘&gt;&gt;&gt;&gt;&gt; 活动关系模块 支持嵌套，条件/循环/并行&gt;&gt;&gt;&gt;&gt;&gt;’<br>if(<code>环境条件</code>) then (<code>分流线名</code>)<br>:<code>分支1活动</code>;<br>-[<code>颜色</code>]-&gt; <code>线备注</code>;<br>note left<br><code>活动备注</code><br>end note<br>elseif(<code>分流线名</code>)<br>:<code>分支2活动</code>;<br>else (<code>分流线名</code>)<br>:<code>分支3活动</code>;<br>endif</p><p>repeat<br>:<code>循环活动</code>;<br>repeat while (<code>环境条件</code>)</p><p>while (<code>环境条件</code>)<br>:<code>循环活动</code>;<br>endwhile</p><p>fork<br>:<code>并行活动</code>;<br>fork again<br>:<code>并行活动</code>;<br>end fork</p><p>‘&amp;&amp;&amp;&amp;&amp; 活动图组合模块 &amp;&amp;&amp;&amp;&amp;&amp;’<br>partition <code>活动组名</code>{<br>:<code>单元活动名称</code>;<br>}</p><p>|<code>#颜色</code> | <code>泳道名称</code>|<br>:<code>当前泳道活动</code>;</p><p>stop ‘结束／end关键字’<br>center footer<br><code>在此处添加脚注</code><br>endfooter</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
      <category term="hexo" scheme="https://huos3203.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>uml用例图常用语法</title>
    <link href="https://huos3203.github.io/2018/06/05/hexo/uml%E7%94%A8%E4%BE%8B%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/06/05/hexo/uml用例图常用语法/</id>
    <published>2018-06-04T21:20:41.000Z</published>
    <updated>2018-06-04T21:27:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">:Main Admin: as Admin</span><br><span class="line">(Use the application) as (Use)</span><br><span class="line"></span><br><span class="line">User -&gt; (Start)</span><br><span class="line">User --&gt; (Use)</span><br><span class="line"></span><br><span class="line">Admin ---&gt; (Use)</span><br><span class="line"></span><br><span class="line">note right of Admin : This is an example.</span><br><span class="line"></span><br><span class="line">note right of (Use)</span><br><span class="line">A note can also be on several lines</span><br><span class="line">end note</span><br><span class="line"></span><br><span class="line">note &quot;This note is connected\nto several objects.&quot; as N2</span><br><span class="line">(Start) .. N2</span><br><span class="line">N2 .. (Use)</span><br></pre></td></tr></table></figure><p>效果图<br><img src="http://www.plantuml.com/plantuml/svg/NKyn3eCm3DppYXCJ36LWPAZ40yhITkjYm2sfWeEIgEhpcmJKIfMYv7ntFiVjYRIWcnOjBSXlI9LNpmWpWzRLw962jb8bEGcLKl5sE1nHdWEvKErr8ZOzfqJYnuWD3ASVSu2zRrFGuZ9hZtX8m6zQLiFrltNhxv3PCHh9U8k1OGMUN-p8m6XXhrYcxDeJYXoUONn7Ay9ZuEacmNuRxV2CfA-Bj5lVg7qVr7Mg-YQ1_84F"></p><p>title <code>uml模型图题目支持MD</code><br>center header<br><code>在此处添加标头</code><br>endheader</p><p>‘<strong><em>*</em></strong>  声明用例模块 usecase <strong><em>*</em></strong>‘<br>(<code>用例名称</code>) as (<code>别名</code>) &lt;&lt;<code>构造类型</code>&gt;&gt;</p><h2 id="usecase-用例名称-as-“-描述一"><a href="#usecase-用例名称-as-“-描述一" class="headerlink" title="usecase 用例名称 as “ 描述一"></a>usecase <code>用例名称</code> as “ <code>描述一</code></h2><h1 id="描述2"><a href="#描述2" class="headerlink" title="描述2"></a><code>描述2</code></h1><p><code>描述3</code><br>.. <code>描述标题</code> ..<br><code>描述4</code><br>“<br>‘<strong><em>*</em></strong>  声明角色模块 actor <strong><em>*</em></strong>‘<br>:<code>角色名称</code>: as <code>别名</code><br>actor <code>角色名称</code></p><p>‘—- 声明备注:用例线备注可以当做用例来参与到关系连接中—‘<br>note “<code>备注内容</code>“ as <code>备注对象</code></p><p>‘#####  备注模块 位置：left/right/top/bottom  #####’<br>note <code>位置</code>  of <code>用例/角色</code>: <code>描述信息</code></p><p>‘&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;  关系模块  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;’<br>left to right dirction  ‘指定布局方向’<br><code>角色</code> –&gt; <code>用例</code>:<code>关系线描述</code></p><p>‘—- 用例关系中的备注对象 —-‘<br><code>角色</code> –&gt;<code>备注对象</code><br><code>备注对象</code> –&gt;<code>用例</code></p><p>center footer<br><code>在此处添加脚注</code><br>endfooter</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
      <category term="hexo" scheme="https://huos3203.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>uml类图常用语法</title>
    <link href="https://huos3203.github.io/2018/06/05/hexo/uml%E7%B1%BB%E5%9B%BE%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/06/05/hexo/uml类图常用语法/</id>
    <published>2018-06-04T20:49:36.000Z</published>
    <updated>2018-06-04T21:27:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">class BaseClass</span><br><span class="line">namespace net.dummy #DDDDDD &#123;</span><br><span class="line">.BaseClass &lt;|-- Person</span><br><span class="line">Meeting o-- Person</span><br><span class="line">.BaseClass &lt;|- Meeting</span><br><span class="line">&#125;</span><br><span class="line">namespace net.foo &#123;</span><br><span class="line">net.dummy.Person &lt;|- Person</span><br><span class="line">.BaseClass &lt;|-- Person</span><br><span class="line">net.dummy.Meeting o-- Person</span><br><span class="line">&#125;</span><br><span class="line">BaseClass &lt;|-- net.unused.Person</span><br></pre></td></tr></table></figure><p>效果图：<br><img src="http://www.plantuml.com/plantuml/svg/Iyv9B2vMS4eiJdK6iRZo4dDJYmiIarCLyb9Bz59AStCh5PHTm42XcaiFhb31faPNLo4WjQWuFu_BDpMr93ClNI4V8OIgKW6gWgiMpOAq_7oWiN2hz22wmLgm6WGNHcZ1Odaj5vecaEhIlDBYr1Ie3G00"></p><p>title <code>uml模型图题目支持MD</code><br>center header<br><code>在此处添加标头</code><br>endheader</p><p>‘<strong><em>*</em></strong> 类声明模块 <strong><em>*</em></strong>‘<br>‘类型:class,abstract,interface,annotation,enum’<br>‘访问域:(-)私有,(#)保护,(~)包私有,(+)公有’</p><p>class <code>类名</code>&lt;<code>扩展对象</code>&gt; as <code>类别名</code>{<br>– <code>属性组名</code> – ‘分隔符–,..,==,<strong>‘<br><code>访问域修饰符</code> <code>static/abstract</code> <code>属性名称</code>:<code>类型</code> = <code>值1</code></strong> <code>函数组名</code> __<br><code>访问域修饰符</code> func <code>函数名称</code>(<code>参数1</code>:<code>类型</code>,<code>参数2</code>:<code>类型</code>)<br>}<br>‘显示/隐藏类,类方法属性等 关键字支持class,interface,enum’<br>hide <code>类名/方法名</code></p><p>‘—- 声明类关系线备注,可以当做用例来参与到关系连接中 —‘<br>note “<code>备注内容</code>“ as <code>备注对象</code></p><p>‘多行备注对象’<br>note as <code>备注对象</code><br>“<code>备注内容</code>“<br>end note</p><p>‘###### 类备注模块 类声明末尾使用:note 位置: 备注#########’<br>note <code>left/right/top/bottom</code> of <code>object</code> #<code>颜色</code><br><code>支持markdown语法加粗／斜体／删除线／下划线／波浪下划线 和HTML</code><br>end note</p><p>‘&amp;&amp;&amp;&amp;&amp;&amp; 类组合模块 类模块 &amp;&amp;&amp;&amp;&amp;&amp;&amp;’<br>‘六种组合样式:Node,Rectangle,Folder,Frame,Cloud,Database’<br>scale  <code>750</code> <code>width/height</code><br>package <code>module名</code> &lt;&lt;<code>模块样式</code>&gt;&gt; <code>#背景色</code>{<br>class <code>类名</code>&lt;<code>扩展对象</code>&gt; as <code>类别名</code>{<br>– <code>属性组名</code> – ‘分隔符–,..,==,<strong>‘<br><code>访问域修饰符</code> <code>static/abstract</code> <code>属性名称</code>:<code>类型</code> = <code>值1</code></strong> <code>函数组名</code> __<br><code>访问域修饰符</code> func <code>函数名称</code>(<code>参数1</code>:<code>类型</code>,<code>参数2</code>:<code>类型</code>)<br>}<br>}</p><p>‘@@@@@@@ 命名空间模块 关系模块  @@@@@@@@’<br>namespace <code>com.cn</code> #<code>空间背景色</code>{</p><p>‘关系节点符:(|&gt;)继承,(*)合成 ,(o)聚合, 其他#,x,},+,^ 连线符:(–)实线 ，(..)虚线’<br><code>类名/包名</code>“<code>基数</code>“ <code>节点符</code> <code>left/right..``[#线色]</code>-<code>节点符</code> “<code>基数</code>“<code>类名/包名</code>:<code>消息</code> &gt;<br>note <code>left/right/top/bottom</code> on link #<code>颜色</code><br><code>连接注释体</code><br>end note}</p><p>‘&gt;&gt;&gt;&gt;&gt;&gt; 类关系图及连接备注模块 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;’<br>‘关系节点符:(|&gt;)继承,(*)合成 ,(o)聚合, 其他#,x,},+,^ 连线符:(–)实线 ，(..)虚线’<br><code>类名/包名</code>“<code>基数</code>“ <code>节点符</code> <code>left/right..``[#线色]</code>-<code>节点符</code> “<code>基数</code>“<code>类名/包名</code>:<code>消息</code> &gt;<br>note <code>left/right/top/bottom</code> on link #<code>颜色</code><br><code>连接注释体</code><br>end note</p><p>center footer<br><code>在此处添加脚注</code><br>endfooter</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas
      
    
    </summary>
    
      <category term="hexo" scheme="https://huos3203.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>在Mac安装Fiddler</title>
    <link href="https://huos3203.github.io/2018/06/01/%E5%B7%A5%E5%85%B7/%E5%9C%A8Mac%E5%AE%89%E8%A3%85Fiddler/"/>
    <id>https://huos3203.github.io/2018/06/01/工具/在Mac安装Fiddler/</id>
    <published>2018-05-31T16:38:52.000Z</published>
    <updated>2018-06-01T10:07:54.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h3 id="安装Mono"><a href="#安装Mono" class="headerlink" title="安装Mono"></a>安装Mono</h3><p>Mac下需要使用.Net编译后的程序，首先需要用到跨平台的方案<code>Mono</code>(现阶段微软已推出跨平台的方案.Net Core，不过暂时只支持控制台程序)。<br><a href="http://www.mono-project.com/download/stable/#download-mac" target="_blank" rel="noopener">下载地址</a></p><h3 id="配置Mono环境"><a href="#配置Mono环境" class="headerlink" title="配置Mono环境"></a>配置Mono环境</h3><ol><li>下载证书<br>从Mozilla LXR上下载所有受信任的root证书，存于Mono的证书库里。root证书能用于请求https地址：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$cd /Library/Frameworks/Mono.framework/Versions/&lt;mono version&gt;/bin/</span><br><span class="line">$./mozroots --import --sync</span><br></pre></td></tr></table></figure></li></ol><blockquote><p>./mozroots命令失效，./cert-sync新命令，暂时不知道怎么使用</p><ol><li>配置Mono环境变量</li></ol></blockquote><p>在<code>.bash_profile</code>中加入如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MONO_HOME=/Library/Frameworks/Mono.framework/Versions/5.0.1</span><br><span class="line">export PATH=$PATH:$MONO_HOME/bin</span><br></pre></td></tr></table></figure></p><h2 id="Fiddler"><a href="#Fiddler" class="headerlink" title="Fiddler"></a>Fiddler</h2><p><a href="http://docs.telerik.com/fiddler/Configure-Fiddler/Tasks/InstallFiddler" target="_blank" rel="noopener">官方文档</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载<a href="https://www.telerik.com/download/fiddler" target="_blank" rel="noopener">Fiddler-mac.zip</a>压缩包，解压到非中文字符的路径下。</p><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>打开Terminal，进入到刚才解压的Fiddler路径，执行命令运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mono Fiddler.exe</span><br></pre></td></tr></table></figure></p><p><a href="http://www.cocoachina.com/apple/20170704/19729.html" target="_blank" rel="noopener">参看</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;安装Mono&quot;&gt;&lt;a href=&quot;#安装Mono&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="工具" scheme="https://huos3203.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://huos3203.github.io/2018/05/31/hexo/hexo%E5%8D%9A%E6%96%87%E7%BD%AE%E9%A1%B6%E6%96%B9%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/05/31/hexo/hexo博文置顶方法/</id>
    <published>2018-05-31T11:44:33.000Z</published>
    <updated>2018-05-31T12:10:07.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><p>修改 <code>hero-generator-index</code> 插件，把文件：<code>node_modules/hexo-generator-index/lib/generator.js</code> 内的代码替换为：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"><span class="keyword">var</span> pagination = <span class="built_in">require</span>(<span class="string">'hexo-pagination'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span>(<span class="params">locals</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> config = <span class="keyword">this</span>.config;</span><br><span class="line"><span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">    posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">                <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">        &#125;);</span><br><span class="line">    <span class="keyword">var</span> paginationDir = config.pagination_dir || <span class="string">'page'</span>;</span><br><span class="line">    <span class="keyword">return</span> pagination(<span class="string">''</span>, posts, &#123;</span><br><span class="line">        perPage: config.index_generator.per_page,</span><br><span class="line">        layout: [<span class="string">'index'</span>, <span class="string">'archive'</span>],</span><br><span class="line">        format: paginationDir + <span class="string">'/%d/'</span>,</span><br><span class="line">        data: &#123;</span><br><span class="line">            __index: <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>在文章中添加 <code>top</code> 值，数值越大文章越靠前:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">title: 解决Charles乱码问题</span><br><span class="line">date: 2017-05-22 22:45:48</span><br><span class="line">tags: 技巧</span><br><span class="line">categories: 技巧</span><br><span class="line">copyright: true</span><br><span class="line">top: 100</span><br></pre></td></tr></table></figure></p><p>转：<a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;修改 &lt;code&gt;hero-generator-index&lt;/code&gt; 插件，把文件：&lt;cod
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>+0800格式转NSDate</title>
    <link href="https://huos3203.github.io/2018/05/31/iOS/+0800%E6%A0%BC%E5%BC%8F%E8%BD%ACNSDate/"/>
    <id>https://huos3203.github.io/2018/05/31/iOS/+0800格式转NSDate/</id>
    <published>2018-05-30T18:42:20.000Z</published>
    <updated>2018-05-30T18:42:20.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *timstr = [resData objectForKey:<span class="string">@"Data"</span>];</span><br><span class="line">timstr = [timstr stringByReplacingOccurrencesOfString:<span class="string">@"/Date("</span> withString:<span class="string">@""</span>];</span><br><span class="line">timstr = [timstr stringByReplacingOccurrencesOfString:<span class="string">@"+0800)/"</span> withString:<span class="string">@""</span>];</span><br><span class="line">model.time = [<span class="built_in">NSDate</span> dateWithTimeIntervalSince1970:timstr.longLongValue/<span class="number">1000</span>];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="iOS" scheme="https://huos3203.github.io/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>高德地图API使用</title>
    <link href="https://huos3203.github.io/2018/05/30/iOS/%E9%AB%98%E5%BE%B7%E5%9C%B0%E5%9B%BEAPI%E4%BD%BF%E7%94%A8/"/>
    <id>https://huos3203.github.io/2018/05/30/iOS/高德地图API使用/</id>
    <published>2018-05-30T14:40:56.000Z</published>
    <updated>2018-05-30T18:42:20.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h2 id="引入头文件"><a href="#引入头文件" class="headerlink" title="引入头文件"></a>引入头文件</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;AMapFoundationKit/AMapFoundationKit.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;AMapLocationKit/AMapLocationKit.h&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a>调用方法</h2><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *strKey = <span class="string">@"2d8a96d668576584acebf2bab0ba0c08"</span>;<span class="comment">//默认值</span></span><br><span class="line"><span class="comment">//配置里面取值</span></span><br><span class="line"><span class="built_in">NSString</span> *strBundleKey = [[<span class="built_in">NSBundle</span> mainBundle] infoDictionary][<span class="string">@"IOSPostionkey"</span>];</span><br><span class="line"><span class="keyword">if</span> (strBundleKey) &#123;</span><br><span class="line">    strKey = strBundleKey;</span><br><span class="line">&#125;</span><br><span class="line">[AMapServices sharedServices].apiKey = strKey;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 带逆地理信息的一次定位（返回坐标和地址信息）</span></span><br><span class="line"><span class="keyword">self</span>.GaodelocationManager = [[AMapLocationManager alloc] init];</span><br><span class="line">[<span class="keyword">self</span>.GaodelocationManager setDesiredAccuracy:kCLLocationAccuracyHundredMeters];</span><br><span class="line"><span class="comment">//   定位超时时间，最低2s，此处设置为2s</span></span><br><span class="line"><span class="keyword">self</span>.GaodelocationManager.locationTimeout =<span class="number">10</span>;</span><br><span class="line"><span class="comment">//   逆地理请求超时时间，最低2s，此处设置为2s</span></span><br><span class="line"><span class="keyword">self</span>.GaodelocationManager.reGeocodeTimeout = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//设置不允许系统暂停定位</span></span><br><span class="line">[<span class="keyword">self</span>.GaodelocationManager setPausesLocationUpdatesAutomatically:<span class="literal">NO</span>];</span><br><span class="line"><span class="comment">//    //设置允许在后台定位</span></span><br><span class="line"><span class="comment">//    [locationManager setAllowsBackgroundLocationUpdates:YES];</span></span><br><span class="line"><span class="comment">//设置允许连续定位逆地理</span></span><br><span class="line">[<span class="keyword">self</span>.GaodelocationManager setLocatingWithReGeocode:<span class="literal">YES</span>];</span><br><span class="line"><span class="comment">//    [locationManager setDelegate:self];</span></span><br><span class="line"><span class="comment">// [self.locationManager startUpdatingLocation];</span></span><br><span class="line"><span class="comment">//    // 带逆地理（返回坐标和地址信息）。将下面代码中的 YES 改成 NO ，则不会返回地址信息。</span></span><br><span class="line">[<span class="keyword">self</span>.GaodelocationManager requestLocationWithReGeocode:<span class="literal">YES</span> completionBlock:^(<span class="built_in">CLLocation</span> *gaodeLocation, AMapLocationReGeocode *regeocode, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (gaodeLocation==<span class="literal">nil</span>) &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"高德没有返回地理位置,使用苹果官方定位经纬度"</span>);</span><br><span class="line">        [<span class="keyword">self</span> GetGISInfoByByLocationWithjingdu:jingdu AndWeidu:weidu];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (error)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"locError:&#123;%ld - %@&#125;;"</span>, (<span class="keyword">long</span>)error.code, error.localizedDescription);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (error.code == AMapLocationErrorLocateFailed)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">NSLog</span>(<span class="string">@"AMapLocationErrorLocateFailed高德没有返回地理位置,使用苹果官方定位经纬度"</span>);</span><br><span class="line">            [<span class="keyword">self</span> GetGISInfoByByLocationWithjingdu:jingdu AndWeidu:weidu];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"使用高德location:%@"</span>, gaodeLocation);</span><br><span class="line">    <span class="built_in">NSString</span> * gaodeWeidu =  [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.9f"</span>,gaodeLocation.coordinate.latitude];</span><br><span class="line">    <span class="built_in">NSString</span> * gaodeJingdu =  [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%.9f"</span>,gaodeLocation.coordinate.longitude];</span><br><span class="line">    <span class="keyword">if</span> (regeocode)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">NSLog</span>(<span class="string">@"reGeocode:%@"</span>, regeocode);</span><br><span class="line">        <span class="keyword">self</span>.theRealAdress = regeocode.formattedAddress;</span><br><span class="line">    &#125;</span><br><span class="line">    [<span class="keyword">self</span> GetGISInfoByByLocationWithjingdu:gaodeJingdu AndWeidu:gaodeWeidu];</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;引入头文件&quot;&gt;&lt;a href=&quot;#引入头文件&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="iOS" scheme="https://huos3203.github.io/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>npm降级的两种方法</title>
    <link href="https://huos3203.github.io/2018/05/29/hexo/npm%E9%99%8D%E7%BA%A7%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/05/29/hexo/npm降级的两种方法/</id>
    <published>2018-05-29T12:06:24.000Z</published>
    <updated>2018-05-29T12:26:48.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h3 id="方法一：简单暴力"><a href="#方法一：简单暴力" class="headerlink" title="方法一：简单暴力"></a>方法一：简单暴力</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install npm@4 -g</span><br></pre></td></tr></table></figure><h3 id="方法二：nvm工具"><a href="#方法二：nvm工具" class="headerlink" title="方法二：nvm工具"></a>方法二：nvm工具</h3><p>nvm是node版本管理工具</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nvm</span><br></pre></td></tr></table></figure><p>装nvm之前，建议把现有的所有nodejs版本全部删除，以后就让nvm全权管理就好了。保存着旧的node反而容易造成版本管理的困难。</p><p>官网nvm安装指南：<a href="https://github.com/creationix/nvm#installation" target="_blank" rel="noopener">https://github.com/creationix/nvm#installation</a></p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>nvm有了后，直接装对应版本的node，会安装对应版本npm。<br>如：node 8 对应 npm v5，node 7 对应 npm v4<br>如果需要npm v5, 则<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install 8</span><br><span class="line">nvm use 8</span><br></pre></td></tr></table></figure></p><p>如果需要npm v4了，装上node 7就可以了<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nvm install 7</span><br><span class="line">nvm use 7</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;方法一：简单暴力&quot;&gt;&lt;a href=&quot;#方法一：简单暴力&quot; class=&quot;header
      
    
    </summary>
    
      <category term="hexo" scheme="https://huos3203.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>GB乐理知识体系</title>
    <link href="https://huos3203.github.io/2018/05/29/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/GB%E4%B9%90%E7%90%86%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB/"/>
    <id>https://huos3203.github.io/2018/05/29/作文作曲/GB乐理知识体系/</id>
    <published>2018-05-29T11:32:04.000Z</published>
    <updated>2018-06-05T21:20:48.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h2 id="使用puml来梳理乐理知识点"><a href="#使用puml来梳理乐理知识点" class="headerlink" title="使用puml来梳理乐理知识点"></a>使用puml来梳理乐理知识点</h2><p>相关概念<br><img src="http://www.plantuml.com/plantuml/svg/RLBRJi9047tVhzWVQ7Wdn7yXKAC9WGHuKn94BWeKQWA90KtZ3KZmmgL6MxdyJBVRFlaBpZ354lHfPiwPEMSok_dZV4hbZgLBlIeCMzuLfV7alLLboNBlvm2oX9hEgrb-fCQJQfRvnPwthZdB6z5VKOCxA8dr-_UYwNPD57aqlVAL_z1oUoPJqybWBf6AvtBSD-OdZ7EtEFJCKHHBY008xSoncyAQYzkQM3K00KheMWI2_2fZHsK4UKHeTGZ4o-T1b0BoaxPNBqNSXYRQ7wmG-e513C81-d9_VEqiMvY9XIqMqmtMNKlZ9LJQ35tEG2CK0IQsjoC91di5avpMsrROVb7TfVlzFQ0o3e5VmpqdCd8-p_tEArCKx1vE56M3Oc4FjobSZ6GxKqmBZ9Hvx5HH_joORaCStZIeCrJYGdJy_wUtt-8mau70TZyGlZh1Fm00"></p><p><img src="http://www.plantuml.com/plantuml/svg/TLBBJi905DtFLtIf2HjG9A4hnSTt42bg993KVW0eBu4A9A0HD0rgi55H23LAAV0plTEouXUSwGY2ukxEEVUSU-xCI4TIHE3CNiagfV5xmbBpK1zEZ2pM-f1JdVeSxGjHIH2vGo4O4aGqZjViKSOSt10MttMfi7aAe_U9KS1LZHpXGREJvV7z1QvfI8Y6ldKdKb2Ka7-iT6rDvL4u9XuZFnWw61sU57B2r0lGwy9j1eRvAK-wBVsHHz6O970H8ImXjyVyV6BmnAWXAigcpLxU_8nRjQJRWryQ-B97mxmLcIdfD0SovVj9ceUZPiZl8pxMzM1SUVLIntwPL6mi5pm87aMTuL2IIRZ0zixktkRM8WkL3cFTdhLrxuRlZvQCerht2hIBqBfY0LPT0OyhiEOAhFDE5cVD1M5rP2ajdZcyD6SNbLBdWMatMtyP0_NwVqpg-Jz6Ja2gDKVE4ZffrFbdmTNsBx7UTB2PXgQhMFh8RdUcEZjtYlFoeeu0KFnOnEpssL9CKURzVwhf5mt7oDEAYFrdK7Ih4QTT3Fu2"><br><img src="http://www.plantuml.com/plantuml/svg/VPFBJi9058RtynHTDn8lb0t4XQA-1v6A90GCzW6g0WeMHOCneSGB4crCH8mrZXNbPMPwMV4Adg6bfKPPTURCEV__pT-Cb9Lo8aS-6bQZOhxjMTenLRz7WoDJ_wGrRRokeaqnBub5RbjCfSKYSkIMFJmaNsquDJklRF1-dmxVHWF5lD1XIxkwNJfpxaxCbex4VDgRYplNhw2VGBixkQmqtfeN_GJA5oIHoubR4d8R27uYk4lm8sp9nx5pgLigfkyzHCiQbEYvGkirrjegmRobzX3FkrhBJhC7d_abdcU-75DstRXK9fNDepWrxWFFOZQpBI7VYxOrOZGjOsZtNmYksUyQT2DREQ2gJYjbiohJ-WqS4tp2c7nttuajWhknA1jr_xQqeO1So3afH99275d6Cy4o77g9aA_w0gYxjK0zxlSbmdSYXX8KmQX_Ega4oQuBaGrXpjVd-KKM4dCPj_wNLlSX9ELZhmaJLco0rdJSGGXXI5pz3UbL0iWLo2Fc2VDyTDPl1B3fSHziFGIsz3VOBorLdIQ3b2ULW2p9uXiDMXEss2ospbL8m6NR42Ah8RReFsnJI-_PRHMWfOZSDqgl3UjMPbrk-GS0"><br><img src="http://www.plantuml.com/plantuml/svg/lLNTKjf05BxFKt2T6-_jfHTz3gP6POR13iq3f0eI_gcYA6AfhGYZLL6Y1fBemtJFRdBbA_HiDec9uFIkCmopUyxkTxxzphSRDQDcbHIPjbXhXzv_PQCg73-zs3erBAYC_75P-gJaL2MVsb3IgqfUyhIk-rmYJW-pzEU4RppVWkVx5xj6zmsSmfdX5hvvlngqQqXARZNOj-oEjy5kVf1ocwgIoYfhgaGh5RSwWEaTCUlGgdcNXyHfi6x1wq_OR8Y0S6mmQv-O6Z4ls6W2rrtC4lCAdhUZDHAjbN65oF4edg4uOHEBMGLcbTpxHteouEJq5Z5d_duEHtjbsfiHPmzN_j6sED4KPoPz-PpDg89jln-mpMVMDrJfjN2t4B64Llt5xgx0sH1tO9cFOiIkoWdKvMXpN01sRCAiBOGHYDWARziXrY1Q3xO6mohL3rojoAmzUjBdmA8BWYIjbV3qqBwLvTNDh2mdD18yVvzpfQ3uG9mZCOVU28LZnM5m35yoBhc-0_ebROpOTGUUEb2QBLIdTC4A3p1k8eFuWQ0Lo4AcLQzZO7K1BA56iWp54TGh_5_y_B4inrHAXv117M9QlcJ-D9LUJsToF5Xv9twrA5Y5s-_pyOL1NFmUI5YHSnNaad3-CR7tI_EY16Bvle3TMboxg3reIhTaSAc9i_FQ--OXr0vuLsviJ6F4EtmGfMXxYbdULK_xWTx6taO-eeM-EonJdTSHLol10Nk11WlDOkt1-4cAamhpsNIKJlO_F7GSD75J_cs3EISaRB2o09FUdUAT9PP5d7sebvQyepeq7pbqUFMWFY5MaTfj63JPaUErhmM9EVV-P_TWyzvOvnqJYVw-VI7zhYBmcwSFz75yAfJsRtaeFctiWjwX1rFSBru_zsOGVsomME9olz8AdlorJGpd9V5zWFwCdMfyaGZ_1G00"><br>音 –&gt; 音质 —&gt; 高低 —&gt; 十二平均律(七键) —&gt;音级/音名/唱名/音组 —&gt;<br>音 –&gt; 音质 —&gt; 长短 —&gt; 音符（全音/半音）<br>五线谱 –&gt; 节拍  拍号，调号，调域，<br></p><h2 id="大音阶"><a href="#大音阶" class="headerlink" title="大音阶"></a>大音阶</h2><p> 12个调：7个大键 5个黑键 ： 全音/半音<br> 音名：C Db D Eb E Fb F Gb G Ab A Bb B<br> 音组：十二平均律<br> 音性质：高低，强弱，长短，音色<br> 音符时效：全音符，二分音符，四分音符，八分音符，十六分音符。<br> 斧头/符干/符尾   书写方法：斧头下干居右，斧头上干居左，符尾永居右<br> 节：<br> 拍号：<br> 乐速：BPM<br> 五线谱：<br> 音程： 度数：两个音符跨度的线和间的个数，音数：两个音符相差全音和半音的个数<br> 音程名：音数和度数决定。纯一度，小二度，大二度…<br> 节奏读法：短音符：嗒，二倍音符：嗒啊，三倍音符：嗒啊啊，休止符：嗯/嗯啊<br> 调式/调域/音阶<br> 调的主音+调式类别<br> C大调：<br> 自然大调：全全半全全全半 的音级关系<br> 自然小调：全半全全半半全全<br> 关系（大/小）调：c大调是a小调的关系大调。a小调是c大调的关系小调，使用其关系（大/小）调的首调唱名方法。<br> 和弦：以两个以上的音，按照三度的重叠关系，在纵向上加以结合，就是和弦。<br> 顺阶和弦：根音/三音/五音<br> 七个顺阶和弦：大三和弦（CFG）/小三和弦（m）/减三和弦（dim）<br> 大三和弦：根音–大三度–三音—小三度—五音<br> 小三和弦：根音–小三度–三音—大三度—五音<br> 减三和弦：根音–小三度–三音—小三度—五音<br> 调号：变音音符，为了让读者便于识别调式，同时方便写谱，五线谱就将相关调域自然大调音阶中出现的变音记号，按照一定的次序，记在谱号的后边，这些记号就是五线谱的调号。</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">调试</span><br><span class="line">音阶</span><br><span class="line">调域</span><br><span class="line">固定唱名法/首调唱名法</span><br><span class="line">自然大调/自然小调</span><br><span class="line">和弦的---顺阶和弦</span><br><span class="line">调号</span><br><span class="line">五度圈</span><br><span class="line">大调中的主要和弦的功能与进行</span><br></pre></td></tr></table></figure><h3 id="C大调音阶"><a href="#C大调音阶" class="headerlink" title="C大调音阶"></a>C大调音阶</h3><p> do 在C上<br> 音名：C，D，E，F，G，A，B，C<br> 指法：1 ，2，3，1，2，3，4，5</p><h3 id="G大调音阶"><a href="#G大调音阶" class="headerlink" title="G大调音阶"></a>G大调音阶</h3><p> 音名：G，A，B，半音 C，D，E，全音F#，半音G</p><ol><li><del>扫描事件动画处理</del></li><li>巡查录入，执法权限验证进行执法</li><li>筛选商业调试UI</li><li>巡查年度列表</li><li>配置平台组件</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;使用puml来梳理乐理知识点&quot;&gt;&lt;a href=&quot;#使用puml来梳理乐理知识点&quot; c
      
    
    </summary>
    
      <category term="作文作曲" scheme="https://huos3203.github.io/categories/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>终端实现预览plantuml的插件</title>
    <link href="https://huos3203.github.io/2018/05/29/shell/%E7%BB%88%E7%AB%AF%E5%AE%9E%E7%8E%B0%E9%A2%84%E8%A7%88plantuml%E7%9A%84%E6%8F%92%E4%BB%B6/"/>
    <id>https://huos3203.github.io/2018/05/29/shell/终端实现预览plantuml的插件/</id>
    <published>2018-05-29T11:32:04.000Z</published>
    <updated>2018-06-01T10:07:54.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><div id="badge-container-weirongxu-plantuml-previewer.vim-bf4b3e5" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-weirongxu-plantuml-previewer.vim-bf4b3e5", "weirongxu", "plantuml-previewer.vim", "bf4b3e5", false);</script><h2 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Plug <span class="string">'huos3203/plantuml-syntax'</span>  <span class="string">"plantuml语法高亮 Plug 'aklt/plantuml-syntax'</span></span><br><span class="line"><span class="string">Plug 'tyru/open-browser.vim'</span></span><br><span class="line"><span class="string">Plug 'weirongxu/plantuml-previewer.vim' "</span>在线工具：http://sujoyu.github.io/plantuml-previewer/</span><br></pre></td></tr></table></figure><h3 id="Graphviz"><a href="#Graphviz" class="headerlink" title="Graphviz"></a>Graphviz</h3><p><a href="https://www.graphviz.org/download/" target="_blank" rel="noopener">下载地址</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install graphviz</span><br></pre></td></tr></table></figure></p><h3 id="打开浏览器safari插件工具"><a href="#打开浏览器safari插件工具" class="headerlink" title="打开浏览器safari插件工具"></a>打开浏览器safari插件工具</h3><p>open-browser.vim</p><h3 id="语法高亮插件"><a href="#语法高亮插件" class="headerlink" title="语法高亮插件"></a>语法高亮插件</h3><p>aklt/plantuml-syntax (vim syntax file for plantuml)</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="创建uml文件"><a href="#创建uml文件" class="headerlink" title="创建uml文件"></a>创建uml文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi test.uml</span><br></pre></td></tr></table></figure><img title="历史下载" src="http://p27uwfdhv.bkt.clouddn.com/static/images/plantumlpreviewer.png?imageMogr2/2/w/800"><h3 id="预览uml图"><a href="#预览uml图" class="headerlink" title="预览uml图"></a>预览uml图</h3><p>通过命令打开浏览器预览界面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:PlantumlOpen</span><br></pre></td></tr></table></figure></p><p>在vi中执行保存命令<code>:w</code>,预览界面会自动刷新</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;badge-container-weirongxu-plantuml-preview
      
    
    </summary>
    
      <category term="shell" scheme="https://huos3203.github.io/categories/shell/"/>
    
    
  </entry>
  
  <entry>
    <title>pyenv切换python的版本</title>
    <link href="https://huos3203.github.io/2018/05/29/hexo/pyenv%E5%88%87%E6%8D%A2python%E7%9A%84%E7%89%88%E6%9C%AC/"/>
    <id>https://huos3203.github.io/2018/05/29/hexo/pyenv切换python的版本/</id>
    <published>2018-05-29T10:33:30.000Z</published>
    <updated>2018-05-29T12:26:48.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h2 id="问题引入"><a href="#问题引入" class="headerlink" title="问题引入"></a>问题引入</h2><p><a href="https://stackoverflow.com/questions/32702098/err-stack-error-command-failed-python2-c-import-platform" target="_blank" rel="noopener">在hexo 项目中使用npm 配置环境，出现错误：gyp ERR! configure error</a></p><p>pyenv是python的多版本管理包，实现互相独立、互不干扰的python环境配置。</p><h2 id="安装pyenv"><a href="#安装pyenv" class="headerlink" title="安装pyenv"></a>安装pyenv</h2><p>安装电脑是mac，所以理所当然的使用神器：homebrew<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install pyenv</span><br></pre></td></tr></table></figure></p><p>安装界面略过，安装结束后，系统提示如下：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">==&gt; Caveats</span><br><span class="line">To use Homebrew<span class="string">'s directories rather than ~/.pyenv add to your profile:</span></span><br><span class="line"><span class="string">export PYENV_ROOT=/usr/local/var/pyenv</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To enable shims and autocompletion add to your profile:</span></span><br><span class="line"><span class="string">if which pyenv &gt; /dev/null; then eval "$(pyenv init -)"; fi</span></span><br></pre></td></tr></table></figure></p><p>根据此提示，在bash的配置文件（由于我的bash是oh my zsh，所以我的配置文件为~/.zshrc）中添加以下两行代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export PYENV_ROOT=/usr/local/var/pyenv</span><br><span class="line">if which pyenv &gt; /dev/null; then eval &quot;$(pyenv init -)&quot;; fi</span><br></pre></td></tr></table></figure></p><h2 id="使用pyenv"><a href="#使用pyenv" class="headerlink" title="使用pyenv"></a>使用pyenv</h2><h4 id="安装指定版本的python"><a href="#安装指定版本的python" class="headerlink" title="安装指定版本的python"></a>安装指定版本的python</h4><p>显示所有可以安装的python版本软件，如2.1.3…3.5.1等。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pyenv install -l</span><br><span class="line">pyenv install 2.7.11 -v</span><br></pre></td></tr></table></figure></p><p><code>-v</code>表示在显示安装过程。<br>安装完成后，2.7.11版本在系统中的存放位置为：<br><code>/usr/local/var/pyenv/versions/2.7.11</code></p><h3 id="为项目配置python环境"><a href="#为项目配置python环境" class="headerlink" title="为项目配置python环境"></a>为项目配置python环境</h3><p>接下来进入开发项目的主文件夹，如<code>~/Desktop/Python/TWD</code>，输入如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv local 2.7.11</span><br></pre></td></tr></table></figure></p><p>即在当前文件夹下配置完成python的开发环境。接下来可通过pip安装开发过程中的各种包。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="1-显示所有安装的python版本"><a href="#1-显示所有安装的python版本" class="headerlink" title="1.显示所有安装的python版本"></a>1.显示所有安装的python版本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv versions</span><br></pre></td></tr></table></figure><h3 id="2-切换python版本"><a href="#2-切换python版本" class="headerlink" title="2.切换python版本"></a>2.切换python版本</h3><p>要切换python 版本，可以使用如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv global &lt;version&gt;</span><br></pre></td></tr></table></figure></p><p>比如，我使用以上命令pyenv global 2.7.11后，系统默认的python版本即为2.7.11，在命令行输入python后，进入的就是2.7.11的shell，不再是system的shell。</p><h3 id="3-切换python-shell版本"><a href="#3-切换python-shell版本" class="headerlink" title="3.切换python shell版本"></a>3.切换python shell版本</h3><p>若不使用pyenv global命令实现python shell版本切换，可以使用如下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyenv shell &lt;version&gt;</span><br></pre></td></tr></table></figure></p><p>比如，我使用pyenv shell 2.7.11后，在命令行输入python，进入的是2.7.11的shell。此时系统的默认python版本也变成了2.7.11，如下所示：</p><p><a href="https://www.jianshu.com/p/bcb3f1be9073" target="_blank" rel="noopener">转自</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;问题引入&quot;&gt;&lt;a href=&quot;#问题引入&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="hexo" scheme="https://huos3203.github.io/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>雨夜</title>
    <link href="https://huos3203.github.io/2018/05/17/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/%E9%9B%A8%E5%A4%9C/"/>
    <id>https://huos3203.github.io/2018/05/17/作文作曲/雨夜/</id>
    <published>2018-05-17T10:58:36.000Z</published>
    <updated>2018-05-30T21:51:16.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h2 id="雨夜"><a href="#雨夜" class="headerlink" title="雨夜"></a>雨夜</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">卧听风雨天窗跃，左耳贯注天籁音</span><br><span class="line">不闻春雷潜入夜，广厦飞瀑挂屋檐</span><br></pre></td></tr></table></figure><!-- 简单示例 (id, server, type)  --><h2 id="滑板"><a href="#滑板" class="headerlink" title="滑板"></a>滑板</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">心如止水毽如飞，晨练漂移划湖心</span><br><span class="line">夜雨不及暑气盛，黑云压城君汗蒸</span><br></pre></td></tr></table></figure><div class="bili_video"><embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://share.acg.tv/flash.swf" flashvars="aid=1468496&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash"></div><div class="owl-media owl-video owl-bilibili"><embed src="http://static.hdslb.com/miniloader.swf" flashvars="aid=1468496&page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash" type="application/x-shockwave-flash" quality="high" allowfullscreen="true"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;雨夜&quot;&gt;&lt;a href=&quot;#雨夜&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="作文作曲" scheme="https://huos3203.github.io/categories/%E4%BD%9C%E6%96%87%E4%BD%9C%E6%9B%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>汉字拼音排序方法</title>
    <link href="https://huos3203.github.io/2018/05/17/iOS/%E6%B1%89%E5%AD%97%E6%8B%BC%E9%9F%B3%E6%8E%92%E5%BA%8F%E6%96%B9%E6%B3%95/"/>
    <id>https://huos3203.github.io/2018/05/17/iOS/汉字拼音排序方法/</id>
    <published>2018-05-17T10:46:57.000Z</published>
    <updated>2018-05-17T10:46:57.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><!--github库卡片--><div id="badge-container-huos3203-sortChinese-2deab8b" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-huos3203-sortChinese-2deab8b", "huos3203", "sortChinese", "2deab8b", false);</script><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>实现模型对象排序，当万条数据时，出现卡顿问题。</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>实现字符串数组的排序，暂时没有验证大量排序情况，尝试优化第一种方法的排序卡顿问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;!--github库卡片--&gt;
&lt;div id=&quot;badge-container-huos3203-
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>水关长城天漠行</title>
    <link href="https://huos3203.github.io/2018/04/13/%E6%97%85%E8%A1%8C/%E6%B0%B4%E5%85%B3%E9%95%BF%E5%9F%8E%E5%A4%A9%E6%BC%A0%E8%A1%8C/"/>
    <id>https://huos3203.github.io/2018/04/13/旅行/水关长城天漠行/</id>
    <published>2018-04-13T11:52:28.000Z</published>
    <updated>2018-04-24T11:49:45.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><p><blockquote class="trello-card"><a href="https://trello.com/c/fHziBC4z/1-%E8%87%AA%E9%A9%BE%E6%B8%B8" target="_blank" rel="noopener">行程安排</a></blockquote><script src="https://p.trellocdn.com/embed.min.js"></script></p><div class="row">    <embed src="http://p27uwfdhv.bkt.clouddn.com/static/pdf/%E6%B0%B4%E5%85%B3%E9%95%BF%E5%9F%8E%E5%A4%A9%E6%BC%A0%E6%B8%B8.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;&lt;blockquote class=&quot;trello-card&quot;&gt;&lt;a href=&quot;https:/
      
    
    </summary>
    
      <category term="旅行" scheme="https://huos3203.github.io/categories/%E6%97%85%E8%A1%8C/"/>
    
    
  </entry>
  
  <entry>
    <title>Git工具交互式暂存</title>
    <link href="https://huos3203.github.io/2018/04/13/git/Git%E5%B7%A5%E5%85%B7%E4%BA%A4%E4%BA%92%E5%BC%8F%E6%9A%82%E5%AD%98/"/>
    <id>https://huos3203.github.io/2018/04/13/git/Git工具交互式暂存/</id>
    <published>2018-04-12T19:41:46.000Z</published>
    <updated>2018-04-12T19:41:46.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h2 id="交互式暂存"><a href="#交互式暂存" class="headerlink" title="交互式暂存"></a>交互式暂存</h2><p>Git 自带的一些脚本可以使在命令行下工作更容易。 本节的几个互交命令可以帮助你将文件的特定部分组合成提交。 当你修改一组文件后，希望这些改动能放到若干提交而不是混杂在一起成为一个提交时，这几个工具会非常有用。 通过这种方式，可以确保提交是逻辑上独立的变更集，同时也会使其他开发者在与你工作时很容易地审核。 如果运行 git add 时使用 -i 或者 –interactive 选项，Git 将会进入一个交互式终端模式，显示类似下面的东西：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ git add -i</span><br><span class="line">staged     unstaged path</span><br><span class="line">1:    unchanged        +0/-1 TODO</span><br><span class="line">2:    unchanged        +1/-1 index.html</span><br><span class="line">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class="line"></span><br><span class="line">*** Commands ***</span><br><span class="line">1: status     2: update      3: revert     4: add untracked</span><br><span class="line">5: patch      6: diff        7: quit       8: help</span><br><span class="line">What now&gt;</span><br></pre></td></tr></table></figure></p><p>可以看到这个命令以非常不同的视图显示了暂存区 - 基本上与 <code>git status</code> 是相同的信息，但是更简明扼要一些。 它将暂存的修改列在左侧，未暂存的修改列在右侧。</p><p>在这块区域后是命令区域。 在这里你可以做一些工作，包括暂存文件、取消暂存文件、暂存文件的一部分、添加未被追踪的文件、查看暂存内容的区别。</p><h2 id="暂存与取消暂存文件"><a href="#暂存与取消暂存文件" class="headerlink" title="暂存与取消暂存文件"></a>暂存与取消暂存文件</h2><p>如果在 What now&gt; 提示符后键入 2 或 u，脚本将会提示想要暂存哪个文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">What now&gt; 2</span><br><span class="line">staged     unstaged path</span><br><span class="line">1:    unchanged        +0/-1 TODO</span><br><span class="line">2:    unchanged        +1/-1 index.html</span><br><span class="line">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class="line">Update&gt;&gt;</span><br></pre></td></tr></table></figure></p><p>要暂存 TODO 与 index.html 文件，可以输入数字：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Update&gt;&gt; 1,2</span><br><span class="line">staged     unstaged path</span><br><span class="line">* 1:    unchanged        +0/-1 TODO</span><br><span class="line">* 2:    unchanged        +1/-1 index.html</span><br><span class="line">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class="line">Update&gt;&gt;</span><br></pre></td></tr></table></figure></p><p>每个文件前面的 * 意味着选中的文件将会被暂存。 如果在 Update&gt;&gt; 提示符后不输入任何东西并直接按回车，Git 将会暂存之前选择的文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Update&gt;&gt;</span><br><span class="line">updated 2 paths</span><br><span class="line"></span><br><span class="line">*** Commands ***</span><br><span class="line">1: status     2: update      3: revert     4: add untracked</span><br><span class="line">5: patch      6: diff        7: quit       8: help</span><br><span class="line">What now&gt; 1</span><br><span class="line">staged     unstaged path</span><br><span class="line">1:        +0/-1      nothing TODO</span><br><span class="line">2:        +1/-1      nothing index.html</span><br><span class="line">3:    unchanged        +5/-1 lib/simplegit.rb</span><br></pre></td></tr></table></figure></p><p>现在可以看到 TODO 与 index.html 文件已经被暂存而 simplegit.rb 文件还未被暂存。 如果这时想要取消暂存 TODO 文件，使用 3 或 r（撤消）选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">*** Commands ***</span><br><span class="line">1: status     2: update      3: revert     4: add untracked</span><br><span class="line">5: patch      6: diff        7: quit       8: help</span><br><span class="line">What now&gt; 3</span><br><span class="line">staged     unstaged path</span><br><span class="line">1:        +0/-1      nothing TODO</span><br><span class="line">2:        +1/-1      nothing index.html</span><br><span class="line">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class="line">Revert&gt;&gt; 1</span><br><span class="line">staged     unstaged path</span><br><span class="line">* 1:        +0/-1      nothing TODO</span><br><span class="line">2:        +1/-1      nothing index.html</span><br><span class="line">3:    unchanged        +5/-1 lib/simplegit.rb</span><br><span class="line">Revert&gt;&gt; [enter]</span><br><span class="line">reverted one path</span><br></pre></td></tr></table></figure></p><p>再次查看 Git 状态，可以看到已经取消暂存 TODO 文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">*** Commands ***</span><br><span class="line">1: status     2: update      3: revert     4: add untracked</span><br><span class="line">5: patch      6: diff        7: quit       8: help</span><br><span class="line">What now&gt; 1</span><br><span class="line">staged     unstaged path</span><br><span class="line">1:    unchanged        +0/-1 TODO</span><br><span class="line">2:        +1/-1      nothing index.html</span><br><span class="line">3:    unchanged        +5/-1 lib/simplegit.rb</span><br></pre></td></tr></table></figure></p><p>如果想要查看已暂存内容的区别，可以使用 6 或 d（区别）命令。 它会显示暂存文件的一个列表，可以从中选择想要查看的暂存区别。 这跟你在命令行指定 git diff –cached 非常相似：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">*** Commands ***</span><br><span class="line">1: status     2: update      3: revert     4: add untracked</span><br><span class="line">5: patch      6: diff        7: quit       8: help</span><br><span class="line">What now&gt; 6</span><br><span class="line">staged     unstaged path</span><br><span class="line">1:        +1/-1      nothing index.html</span><br><span class="line">Review diff&gt;&gt; 1</span><br><span class="line">diff --git a/index.html b/index.html</span><br><span class="line">index 4d07108..4335f49 100644</span><br><span class="line">--- a/index.html</span><br><span class="line">+++ b/index.html</span><br><span class="line">@@ -16,7 +16,7 @@ Date Finder</span><br><span class="line"></span><br><span class="line">&lt;p id=&quot;out&quot;&gt;...&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">-&lt;div id=&quot;footer&quot;&gt;contact : support@github.com&lt;/div&gt;</span><br><span class="line">+&lt;div id=&quot;footer&quot;&gt;contact : email.support@github.com&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>通过这些基本命令，可以使用交互式添加模式来轻松地处理暂存区。</p><h2 id="暂存补丁"><a href="#暂存补丁" class="headerlink" title="暂存补丁"></a>暂存补丁</h2><p>Git 也可以暂存文件的特定部分。 例如，如果在 simplegit.rb 文件中做了两处修改，但只想要暂存其中的一个而不是另一个，Git 会帮你轻松地完成。 从交互式提示符中，输入 5 或 p（补丁）。 Git 会询问你想要部分暂存哪些文件；然后，对已选择文件的每一个部分，它都会一个个地显示文件区别并询问你是否想要暂存它们：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">diff --git a/lib/simplegit.rb b/lib/simplegit.rb</span><br><span class="line">index dd5ecc4..57399e0 100644</span><br><span class="line">--- a/lib/simplegit.rb</span><br><span class="line">+++ b/lib/simplegit.rb</span><br><span class="line">@@ -22,7 +22,7 @@ class SimpleGit</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">def log(treeish = &apos;master&apos;)</span><br><span class="line">-    command(&quot;git log -n 25 #&#123;treeish&#125;&quot;)</span><br><span class="line">+    command(&quot;git log -n 30 #&#123;treeish&#125;&quot;)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">def blame(path)</span><br><span class="line">Stage this hunk [y,n,a,d,/,j,J,g,e,?]?</span><br></pre></td></tr></table></figure></p><p>这时有很多选项。 输入 ? 显示所有可以使用的命令列表：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Stage this hunk [y,n,a,d,/,j,J,g,e,?]? ?</span><br><span class="line">y - stage this hunk</span><br><span class="line">n - do not stage this hunk</span><br><span class="line">a - stage this and all the remaining hunks in the file</span><br><span class="line">d - do not stage this hunk nor any of the remaining hunks in the file</span><br><span class="line">g - select a hunk to go to</span><br><span class="line">/ - search for a hunk matching the given regex</span><br><span class="line">j - leave this hunk undecided, see next undecided hunk</span><br><span class="line">J - leave this hunk undecided, see next hunk</span><br><span class="line">k - leave this hunk undecided, see previous undecided hunk</span><br><span class="line">K - leave this hunk undecided, see previous hunk</span><br><span class="line">s - split the current hunk into smaller hunks</span><br><span class="line">e - manually edit the current hunk</span><br><span class="line">? - print help</span><br></pre></td></tr></table></figure></p><p>通常情况下可以输入 y 或 n 来选择是否要暂存每一个区块，当然，暂存特定文件中的所有部分或为之后的选择跳过一个区块也是非常有用的。 如果你只暂存文件的一部分，状态输出可能会像下面这样：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">What now&gt; 1</span><br><span class="line">staged     unstaged path</span><br><span class="line">1:    unchanged        +0/-1 TODO</span><br><span class="line">2:        +1/-1      nothing index.html</span><br><span class="line">3:        +1/-1        +4/-0 lib/simplegit.rb</span><br></pre></td></tr></table></figure></p><p>simplegit.rb 文件的状态很有趣。 它显示出若干行被暂存与若干行未被暂存。 已经部分地暂存了这个文件。 在这时，可以退出交互式添加脚本并且运行 git commit 来提交部分暂存的文件。</p><p>也可以不必在交互式添加模式中做部分文件暂存 - 可以在命令行中使用 git add -p 或 git add –patch 来启动同样的脚本。</p><p>更进一步地，可以使用 reset –patch 命令的补丁模式来部分重置文件，通过 checkout –patch 命令来部分检出文件与 stash save –patch 命令来部分暂存文件。 我们将会在接触这些命令的高级使用方法时了解更多详细信息。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;交互式暂存&quot;&gt;&lt;a href=&quot;#交互式暂存&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="git" scheme="https://huos3203.github.io/categories/git/"/>
    
    
  </entry>
  
  <entry>
    <title>Otherlinkerflags设置ld命令执行的参数</title>
    <link href="https://huos3203.github.io/2018/04/12/xcode/Otherlinkerflags%E8%AE%BE%E7%BD%AEld%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%9A%84%E5%8F%82%E6%95%B0/"/>
    <id>https://huos3203.github.io/2018/04/12/xcode/Otherlinkerflags设置ld命令执行的参数/</id>
    <published>2018-04-11T16:42:57.000Z</published>
    <updated>2018-04-11T19:16:17.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><p>Other linker flags设置的值实际上就是ld命令执行时后面所加的参数。</p><p>3个常用参数：<br><code>-ObjC</code>：加了这个参数后，链接器就会把静态库中所有的Objective-C类和分类都加载到最后的可执行文件中<br><code>-all_load</code>：会让链接器把所有找到的目标文件都加载到可执行文件中，但是千万不要随便使用这个参数！假如你使用了不止一个静态库文件，然后又使用了这个参数，那么你很有可能会遇到<code>ld: duplicate symbol</code>错误，因为不同的库文件里面可能会有相同的目标文件，所以建议在遇到<code>-ObjC</code>失效的情况下使用<code>-force_load</code>参数。<br><code>-force_load</code>：所做的事情跟<code>-all_load</code>其实是一样的，但是<code>-force_load</code>需要指定要进行全部加载的库文件的路径，这样的话，你就只是完全加载了一个库文件，不影响其余库文件的按需加载.</p><h3 id="加载FrameWork"><a href="#加载FrameWork" class="headerlink" title="加载FrameWork"></a>加载FrameWork</h3><h3 id="加载静态库"><a href="#加载静态库" class="headerlink" title="加载静态库"></a>加载静态库</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;Other linker flags设置的值实际上就是ld命令执行时后面所加的参数。&lt;/p&gt;
&lt;
      
    
    </summary>
    
      <category term="xcode" scheme="https://huos3203.github.io/categories/xcode/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS插件化开发之Small</title>
    <link href="https://huos3203.github.io/2018/04/12/xcode/iOS%E6%8F%92%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91%E4%B9%8BSmall/"/>
    <id>https://huos3203.github.io/2018/04/12/xcode/iOS插件化开发之Small/</id>
    <published>2018-04-11T16:42:17.000Z</published>
    <updated>2018-04-11T19:16:17.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><div id="badge-container-huos3203-Small-04f08ae4a26" class="hexo-github" style="width: ="></div><script src="/hexo-github/badge.js"></script><script type="text/javascript">  loadStyle("/hexo-github/style.css");  loadStyle("/hexo-github/octicons/octicons.css");  new Badge("#badge-container-huos3203-Small-04f08ae4a26", "huos3203", "Small", "04f08ae4a26", false);</script><p><a href="http://code.wequick.net/Small/cn/home" target="_blank" rel="noopener">官网</a></p><h2 id="iOS组件化基础"><a href="#iOS组件化基础" class="headerlink" title="iOS组件化基础"></a>iOS组件化基础</h2><p>iOS组件化基于<a href="https://developer.apple.com/library/ios/documentation/General/Conceptual/DevPedia-CocoaCore/Framework.html#//apple_ref/doc/uid/TP40008195-CH56-SW1" target="_blank" rel="noopener">Cocoa Touch Framework</a>（以下简称CTF）通过<a href="https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSBundle_Class/index.html#//apple_ref/occ/cl/NSBundle" target="_blank" rel="noopener">NSBundle</a>实现。</p><ul><li>CTF首次公开在WWDC2014，要求Xcode6 beta以上版本。</li><li>CTF官方表示支持8.0以上系统，但在6.0、7.0上测试正常。</li><li>如果你的App包含了CTF，但是<strong>Deployment Target</strong> &lt; 8.0，上传二进制文件到App Store时会报警中断。</li></ul><p>受苹果官方限制，如果你的CTF没有签名，将无法实现代码级别更新。</p><p>Framework 模式无法上传到App Store。只能应用到企业版</p><h2 id="使用文档"><a href="#使用文档" class="headerlink" title="使用文档"></a>使用文档</h2><ol><li><p>导入模板，重启Xcode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/wequick/Small.git</span><br><span class="line"><span class="built_in">cd</span> Small/iOS</span><br><span class="line">cp -r Templates ~/Library/Developer/Xcode/Templates</span><br></pre></td></tr></table></figure></li><li><p>新建工程<br><code>File-&gt;New-&gt;Project...</code>，选择Small-pods模板<br><img src="https://camo.githubusercontent.com/25aac173476e3a5eecdf2853b0e233bf8179bece/687474703a2f2f636f64652e7765717569636b2e6e65742f6173736574732f696d616765732f736d616c6c2d696f732d74656d706c6174652e706e67" alt="Small iOS Template"></p></li><li><p>安装Pods</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> [your-project-path]</span><br><span class="line">pod install --no-repo-update</span><br></pre></td></tr></table></figure></li><li><p>关闭工程并打开xcworkspace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">open *.xcworkspace</span><br></pre></td></tr></table></figure></li></ol><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><ul><li>使用者模式<a href="Sample">Sample</a></li></ul><blockquote><p>需要先编译Pods</p></blockquote><ul><li>开发者模式<a href="DevSample">DevSample</a></li></ul><blockquote><p>需要去除并行编译模式：<code>Edit Scheme...-&gt;Build-&gt;Build Options-&gt; [ ] Parallelize Build</code></p><p>各个组件需要签名后才支持代码级别更新。示例中更新例子为xib内容更新。<br><br>在没有设置签名之前，请在模拟器上跑示例。</p></blockquote><h2 id="TODO-List"><a href="#TODO-List" class="headerlink" title="TODO List"></a>TODO List</h2><ul><li>Sample支持CocoaPods</li><li>设置签名脚本（现在需要对每个组件Project手动设置签名）</li><li>热更新（现在需要重启生效）</li><li>Xcode Template for creating new <code>Small Bundle</code></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/wequick/small/wiki/iOS" target="_blank" rel="noopener">Wiki/iOS</a><br><a href="http://www.cocoachina.com/industry/20140613/8810.html" target="_blank" rel="noopener">WWDC2014之iOS使用动态库</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;div id=&quot;badge-container-huos3203-Small-04f08ae4a26
      
    
    </summary>
    
      <category term="xcode" scheme="https://huos3203.github.io/categories/xcode/"/>
    
    
  </entry>
  
  <entry>
    <title>&lt;#标题#&gt;</title>
    <link href="https://huos3203.github.io/2018/04/10/%3C#%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5#%3E/"/>
    <id>https://huos3203.github.io/2018/04/10/&lt;#永久链接#&gt;/</id>
    <published>2018-04-10T05:41:49.000Z</published>
    <updated>2018-04-10T05:43:51.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h2 id="tag标签自增新建脚本"><a href="#tag标签自增新建脚本" class="headerlink" title="tag标签自增新建脚本"></a>tag标签自增新建脚本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">tag=$(git describe --tags `git rev-list --tags --max-count=1`)</span><br><span class="line">version=<span class="variable">$&#123;tag##*.&#125;</span></span><br><span class="line"><span class="built_in">let</span> <span class="string">"version+=1"</span></span><br><span class="line">newTag=<span class="variable">$&#123;tag%.*&#125;</span>.<span class="variable">$&#123;version&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'Create New Tag '</span><span class="variable">$newTag</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h2 id=&quot;tag标签自增新建脚本&quot;&gt;&lt;a href=&quot;#tag标签自增新建脚本&quot; class=&quot;
      
    
    </summary>
    
      <category term="分类" scheme="https://huos3203.github.io/categories/%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="&lt;#工具#&gt;" scheme="https://huos3203.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="&lt;#管理#&gt;" scheme="https://huos3203.github.io/tags/%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>当项目过大需要通过SSH方式Clone</title>
    <link href="https://huos3203.github.io/2018/04/05/git/%E5%BD%93%E9%A1%B9%E7%9B%AE%E8%BF%87%E5%A4%A7%E9%9C%80%E8%A6%81%E9%80%9A%E8%BF%87SSH%E6%96%B9%E5%BC%8FClone/"/>
    <id>https://huos3203.github.io/2018/04/05/git/当项目过大需要通过SSH方式Clone/</id>
    <published>2018-04-04T17:44:24.000Z</published>
    <updated>2018-04-04T17:44:24.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" href="/owl.css"><script src="/assets/js/APlayer.min.js"> </script><h3 id="设置全局提交信息"><a href="#设置全局提交信息" class="headerlink" title="设置全局提交信息"></a>设置全局提交信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;you@example.com&quot;</span><br><span class="line">git config --global user.name &quot;Your Name&quot;</span><br></pre></td></tr></table></figure><h3 id="修改最后一次提交的用户名信息"><a href="#修改最后一次提交的用户名信息" class="headerlink" title="修改最后一次提交的用户名信息"></a>修改最后一次提交的用户名信息</h3><p>``git<br>  git config user.name ‘wangz’<br>  git config user.email ‘wangz@alib.com’<br>  git commit  –amend –author=wangz<br>```</p><h3 id="项目过大问题"><a href="#项目过大问题" class="headerlink" title="项目过大问题"></a>项目过大问题</h3><blockquote><p>git clone 主工程出现 fatal: The remote end hung up unexpectedly3)</p></blockquote><p>通常的解决办法：</p><ol><li><p>设置提交缓存的大小为 1G：1048576000<br> git config http.postBuffer 1048576000</p></li><li><p>否则，需要配置github/gitlab的公钥<br> 生成：<code>ssh-keygen -t rsa -C &quot;$your_email&quot;</code><br> 拷贝：<code>pbcopy &lt; ~/.ssh/id_rsa.pub</code><br> 创建SSHKey：<br> 在github/gitlab新建公钥<code>add SSH Key</code>：粘贴到密钥文本框中即可。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; href=&quot;/owl.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;设置全局提交信息&quot;&gt;&lt;a href=&quot;#设置全局提交信息&quot; class=&quot;header
      
    
    </summary>
    
      <category term="git" scheme="https://huos3203.github.io/categories/git/"/>
    
    
  </entry>
  
</feed>
