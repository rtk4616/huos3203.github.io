{"title":"mupdf集成pyc加密算法","slug":"编译/mupdf集成pyc加密算法","date":"2015-08-14T10:45:35.000Z","updated":"2018-03-28T07:42:14.000Z","comments":true,"path":"api/articles/编译/mupdf集成pyc加密算法.json","excerpt":"加密算法中区分64位1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>#if __LP64__ || (TARGET_OS_EMBEDDED &amp;&amp; !TARGET_OS_IPHONE) || TARGET_OS_WIN32 || NS_BUILD_32_LIKE_64<br>    #ifndef uint32<br>        #define uint32 unsigned int<br>    #endif<br>#else<br>    #ifndef uint32<br>        #define uint32 unsigned long int<br>    #endif<br>#endif<br>把SMS4.h文件内容合并到include/mupdf/fitz/stream.h文件中，然后删除SMS4.h文件把SMS4.c文件内容合并到source/fitz/stream-open.c 文件中，然后删除SMS4.c在include/mupdf/fitz/stream.h增加以下内容:  用于方法声明，供其他类使用。","covers":null,"content":"<link rel=\"stylesheet\" href=\"/owl.css\"><script src=\"/assets/js/APlayer.min.js\"> </script><h4 id=\"加密算法中区分64位\"><a href=\"#加密算法中区分64位\" class=\"headerlink\" title=\"加密算法中区分64位\"></a>加密算法中区分64位</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#if __LP64__ || (TARGET_OS_EMBEDDED &amp;&amp; !TARGET_OS_IPHONE) || TARGET_OS_WIN32 || NS_BUILD_32_LIKE_64</span><br><span class=\"line\">    #ifndef uint32</span><br><span class=\"line\">        #define uint32 unsigned int</span><br><span class=\"line\">    #endif</span><br><span class=\"line\">#else</span><br><span class=\"line\">    #ifndef uint32</span><br><span class=\"line\">        #define uint32 unsigned long int</span><br><span class=\"line\">    #endif</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<ol>\n<li>把SMS4.h文件内容合并到include/mupdf/fitz/stream.h文件中，然后删除SMS4.h文件</li>\n<li>把SMS4.c文件内容合并到source/fitz/stream-open.c 文件中，然后删除SMS4.c</li>\n<li>在include/mupdf/fitz/stream.h增加以下内容:  用于方法声明，供其他类使用。<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> void set_key_info(char* key, long long code_len);  </span><br><span class=\"line\">int pbb_read(int fd, unsigned char *buf, int size);  </span><br><span class=\"line\">int fpbb_read(unsigned char *buf, int count, int size, FILE* fp);  \t</span><br><span class=\"line\"> ```  </span><br><span class=\"line\">4. 替换source/pdf/pdf-write.c  2530：fread 替换为 fpbb_read</span><br><span class=\"line\">5. 替换source/fitz/stream-prog.c  57: read 替换为  pbb_read</span><br><span class=\"line\">6. 替换source/fitz/stream-open.c  73: read 替换为  pbb_read </span><br><span class=\"line\">7. 配置document Type    public.data,public.centent</span><br><span class=\"line\"></span><br><span class=\"line\">传递秘钥：</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>char keycode[] = {-12,7,106,95,82,118,-64,-78,-98,5,-3,-128,-28,95,-84,120};<br>long long keylength = 37761;<br>set_key_info(keycode, keylength);<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t</span><br><span class=\"line\">#### ijkplayer</span><br><span class=\"line\">- https://github.com/kolyvan/kxmovie.git  </span><br><span class=\"line\">- https://github.com/Bilibili/ijkplayer.git</span><br><span class=\"line\">- 支持所有视频格式的操作：</span><br><span class=\"line\">\t- cd ijkplyer-master/config/</span><br><span class=\"line\">\t- rm module.sh</span><br><span class=\"line\">\t- ln -s module-default.sh module.sh</span><br><span class=\"line\">- 加密集成  </span><br><span class=\"line\">  - 处理文件的目录位置：ijkplyer-master/ios/ffmpeg-arm64,armv7,armv7s,i386,x86_64/libavformat目录</span><br><span class=\"line\">  - 把pyckey.h,sms4.h文件内容移动到处理文件目录中的avformat.h文件中</span><br><span class=\"line\">  - 把pyckey.c, sms4.c文件内容移动到处理文件目录中的file.c文件中  </span><br><span class=\"line\">  - 将extra.tar.gz解压，放入ijkplayer-master/extra目录下 </span><br><span class=\"line\">  - 暴漏头文件，编辑目录中的Makefile文件</span><br><span class=\"line\">  - - HEADERS = 新增.h文件，例如:url.h</span><br><span class=\"line\">  - - OBJS = 新增.o文件，例如:url.o</span><br></pre></td></tr></table></figure></p>\n<p>  注意：要替换ios目录下针对不同内核的目录arm64,armv7,armv7s,i386，都需要操作如上步骤。<br>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  </span><br><span class=\"line\">然后，在IOS目录下执行编译命令脚本集合文件:</span><br></pre></td></tr></table></figure></p>\n<p>  ./compile-ffmpeg.sh clean<br>  ./compile-ffmpeg.sh all<br>```</p>\n<h4 id=\"将ijkplayer集成到自己的项目中\"><a href=\"#将ijkplayer集成到自己的项目中\" class=\"headerlink\" title=\"将ijkplayer集成到自己的项目中\"></a>将ijkplayer集成到自己的项目中</h4><ol>\n<li>将ijkplayer-master/ios、目录下的IJKMediaPlayer目录拷贝到自己项目的同目录下</li>\n<li>打开自己的项目，将IJKMediaPlayer.xcodeproj项目文件拖入自己项目中</li>\n<li>选择项目名称，配置Targets<ul>\n<li>选中 build phases标签，添加 Target Dpendencies  ，选中IJKMediaFramework 添加即可。 </li>\n</ul>\n</li>\n<li>因为移动了IJK项目目录到本项目，需要重新配置IJKMediaPlayer中文件关联设置<ul>\n<li>需要将ijkplayer-master/目录下的ijkmedia目录中的ijkplayer目录和ijksdl目录(Android.mk除外)，拷贝到IJKMediaPlyaer项目的IJKMediaPlyaer/IJKMediaPllayer/ijkmedia/目录下</li>\n<li>需要将编译后得到的静态库（ijkplayer-master/ios/build/universal/目录）拷贝至IJKMediaPlayer目录：$(PROJECT_DIR)/ffmpeg/universal/lib</li>\n<li>选中IJKMediaPlayer项目名称，配置Targets</li>\n<li>选中 build Setting标签：<br><strong>设置HeaderSearch Paths</strong>:$(PROJECT_DIR)/IJKMediaPlayer/ijkmedia $(PROJECT_DIR)/ffmpeg/universal/include<br><strong>设置Library Search Paths</strong>:$(PROJECT_DIR)/ffmpeg/universal/lib  </li>\n</ul>\n</li>\n</ol>\n","categories":[{"name":"iOS","path":"api/categories/iOS.json"}],"tags":[{"name":"加密","path":"api/tags/加密.json"}]}