{"title":"pyenv切换python的版本","slug":"hexo/pyenv切换python的版本","date":"2018-05-29T10:33:30.000Z","updated":"2018-05-29T12:26:48.000Z","comments":true,"path":"api/articles/hexo/pyenv切换python的版本.json","excerpt":null,"covers":null,"content":"<script src=\"/assets/js/APlayer.min.js\"> </script><h2 id=\"问题引入\"><a href=\"#问题引入\" class=\"headerlink\" title=\"问题引入\"></a>问题引入</h2><p><a href=\"https://stackoverflow.com/questions/32702098/err-stack-error-command-failed-python2-c-import-platform\" target=\"_blank\" rel=\"noopener\">在hexo 项目中使用npm 配置环境，出现错误：gyp ERR! configure error</a></p>\n<p>pyenv是python的多版本管理包，实现互相独立、互不干扰的python环境配置。</p>\n<h2 id=\"安装pyenv\"><a href=\"#安装pyenv\" class=\"headerlink\" title=\"安装pyenv\"></a>安装pyenv</h2><p>安装电脑是mac，所以理所当然的使用神器：homebrew<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install pyenv</span><br></pre></td></tr></table></figure></p>\n<p>安装界面略过，安装结束后，系统提示如下：<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">==&gt; Caveats</span><br><span class=\"line\">To use Homebrew<span class=\"string\">'s directories rather than ~/.pyenv add to your profile:</span></span><br><span class=\"line\"><span class=\"string\">export PYENV_ROOT=/usr/local/var/pyenv</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">To enable shims and autocompletion add to your profile:</span></span><br><span class=\"line\"><span class=\"string\">if which pyenv &gt; /dev/null; then eval \"$(pyenv init -)\"; fi</span></span><br></pre></td></tr></table></figure></p>\n<p>根据此提示，在bash的配置文件（由于我的bash是oh my zsh，所以我的配置文件为~/.zshrc）中添加以下两行代码：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PYENV_ROOT=/usr/local/var/pyenv</span><br><span class=\"line\">if which pyenv &gt; /dev/null; then eval &quot;$(pyenv init -)&quot;; fi</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"使用pyenv\"><a href=\"#使用pyenv\" class=\"headerlink\" title=\"使用pyenv\"></a>使用pyenv</h2><h4 id=\"安装指定版本的python\"><a href=\"#安装指定版本的python\" class=\"headerlink\" title=\"安装指定版本的python\"></a>安装指定版本的python</h4><p>显示所有可以安装的python版本软件，如2.1.3…3.5.1等。<br><figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv install -l</span><br><span class=\"line\">pyenv install 2.7.11 -v</span><br></pre></td></tr></table></figure></p>\n<p><code>-v</code>表示在显示安装过程。<br>安装完成后，2.7.11版本在系统中的存放位置为：<br><code>/usr/local/var/pyenv/versions/2.7.11</code></p>\n<h3 id=\"为项目配置python环境\"><a href=\"#为项目配置python环境\" class=\"headerlink\" title=\"为项目配置python环境\"></a>为项目配置python环境</h3><p>接下来进入开发项目的主文件夹，如<code>~/Desktop/Python/TWD</code>，输入如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv local 2.7.11</span><br></pre></td></tr></table></figure></p>\n<p>即在当前文件夹下配置完成python的开发环境。接下来可通过pip安装开发过程中的各种包。</p>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><h3 id=\"1-显示所有安装的python版本\"><a href=\"#1-显示所有安装的python版本\" class=\"headerlink\" title=\"1.显示所有安装的python版本\"></a>1.显示所有安装的python版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv versions</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-切换python版本\"><a href=\"#2-切换python版本\" class=\"headerlink\" title=\"2.切换python版本\"></a>2.切换python版本</h3><p>要切换python 版本，可以使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv global &lt;version&gt;</span><br></pre></td></tr></table></figure></p>\n<p>比如，我使用以上命令pyenv global 2.7.11后，系统默认的python版本即为2.7.11，在命令行输入python后，进入的就是2.7.11的shell，不再是system的shell。</p>\n<h3 id=\"3-切换python-shell版本\"><a href=\"#3-切换python-shell版本\" class=\"headerlink\" title=\"3.切换python shell版本\"></a>3.切换python shell版本</h3><p>若不使用pyenv global命令实现python shell版本切换，可以使用如下命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyenv shell &lt;version&gt;</span><br></pre></td></tr></table></figure></p>\n<p>比如，我使用pyenv shell 2.7.11后，在命令行输入python，进入的是2.7.11的shell。此时系统的默认python版本也变成了2.7.11，如下所示：</p>\n<p><a href=\"https://www.jianshu.com/p/bcb3f1be9073\" target=\"_blank\" rel=\"noopener\">转自</a></p>\n","categories":[{"name":"hexo","path":"api/categories/hexo.json"}],"tags":[]}